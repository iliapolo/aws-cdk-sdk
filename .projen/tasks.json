{
  "tasks": {
    "clobber": {
      "name": "clobber",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "env": {
        "NODE_OPTIONS": "--max_old_space_size=5000"
      },
      "steps": [
        {
          "spawn": "codegen"
        },
        {
          "exec": "rm -rf lib"
        },
        {
          "exec": "jsii --silence-warnings=reserved-word --no-fix-peer-dependencies"
        },
        {
          "spawn": "docgen"
        }
      ]
    },
    "test:compile": {
      "name": "test:compile",
      "description": "compiles the test code"
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "env": {
        "NODE_OPTIONS": "--max_old_space_size=5000"
      },
      "steps": [
        {
          "spawn": "test:compile"
        },
        {
          "exec": "jest --passWithNoTests --all --updateSnapshot"
        },
        {
          "spawn": "eslint"
        }
      ]
    },
    "build": {
      "name": "build",
      "description": "Full release build (test+compile)",
      "steps": [
        {
          "exec": "npx projen"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "test:watch": {
      "name": "test:watch",
      "description": "Run jest in watch mode",
      "steps": [
        {
          "exec": "jest --watch"
        }
      ]
    },
    "test:update": {
      "name": "test:update",
      "description": "Update jest snapshots",
      "steps": [
        {
          "exec": "jest --updateSnapshot"
        }
      ]
    },
    "bump": {
      "name": "bump",
      "description": "Bumps version based on latest git tag and generates a changelog entry",
      "env": {
        "OUTFILE": "package.json",
        "CHANGELOG": "dist/changelog.md",
        "BUMPFILE": "dist/version.txt"
      },
      "steps": [
        {
          "builtin": "release/bump-version"
        }
      ],
      "condition": "! git log --oneline -1 | grep -q \"chore(release):\""
    },
    "unbump": {
      "name": "unbump",
      "description": "Restores version to 0.0.0",
      "env": {
        "OUTFILE": "package.json",
        "CHANGELOG": "dist/changelog.md",
        "BUMPFILE": "dist/version.txt"
      },
      "steps": [
        {
          "builtin": "release/reset-version"
        }
      ]
    },
    "upgrade-dependencies": {
      "name": "upgrade-dependencies",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "npm-check-updates --upgrade --target=minor"
        },
        {
          "exec": "yarn install --check-files"
        },
        {
          "exec": "yarn upgrade"
        },
        {
          "exec": "npx projen"
        }
      ]
    },
    "default": {
      "name": "default",
      "steps": [
        {
          "exec": "node .projenrc.js"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "jsii -w --silence-warnings=reserved-word --no-fix-peer-dependencies"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Create an npm tarball",
      "steps": [
        {
          "exec": "jsii-pacmak"
        }
      ]
    },
    "eslint": {
      "name": "eslint",
      "description": "Runs eslint against the codebase",
      "env": {
        "NODE_OPTIONS": "--max_old_space_size=5000"
      },
      "steps": [
        {
          "exec": "eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src src/__tests__ build-tools .projenrc.js"
        }
      ]
    },
    "compat": {
      "name": "compat",
      "description": "Perform API compatibility check against latest version",
      "steps": [
        {
          "exec": "jsii-diff npm:$(node -p \"require('./package.json').name\") -k --ignore-file .compatignore || (echo \"\nUNEXPECTED BREAKING CHANGES: add keys such as 'removed:constructs.Node.of' to .compatignore to skip.\n\" && exit 1)"
        }
      ]
    },
    "codegen": {
      "name": "codegen",
      "steps": [
        {
          "exec": "ts-node --skip-project codegen/main.ts"
        }
      ]
    },
    "docgen": {
      "name": "docgen",
      "steps": [
        {
          "exec": "ts-node --skip-project scripts/docgen.ts"
        }
      ]
    },
    "integ:synth": {
      "name": "integ:synth",
      "steps": [
        {
          "spawn": "integ:es:synth"
        },
        {
          "spawn": "integ:s3:synth"
        },
        {
          "spawn": "integ:sqs:synth"
        }
      ]
    },
    "integ:es:synth": {
      "name": "integ:es:synth",
      "steps": [
        {
          "exec": "cdk -a 'node lib/__tests__/clients/es/es.integ.js' synth"
        }
      ]
    },
    "integ:deploy": {
      "name": "integ:deploy",
      "steps": [
        {
          "spawn": "integ:es:deploy"
        },
        {
          "spawn": "integ:s3:deploy"
        },
        {
          "spawn": "integ:sqs:deploy"
        }
      ]
    },
    "integ:es:deploy": {
      "name": "integ:es:deploy",
      "steps": [
        {
          "exec": "cdk -a 'node lib/__tests__/clients/es/es.integ.js' deploy"
        }
      ]
    },
    "integ:destroy": {
      "name": "integ:destroy",
      "steps": [
        {
          "spawn": "integ:es:destroy"
        },
        {
          "spawn": "integ:s3:destroy"
        },
        {
          "spawn": "integ:sqs:destroy"
        }
      ]
    },
    "integ:es:destroy": {
      "name": "integ:es:destroy",
      "steps": [
        {
          "exec": "cdk -a 'node lib/__tests__/clients/es/es.integ.js' destroy"
        }
      ]
    },
    "integ:s3:synth": {
      "name": "integ:s3:synth",
      "steps": [
        {
          "exec": "cdk -a 'node lib/__tests__/clients/s3/s3.integ.js' synth"
        }
      ]
    },
    "integ:s3:deploy": {
      "name": "integ:s3:deploy",
      "steps": [
        {
          "exec": "cdk -a 'node lib/__tests__/clients/s3/s3.integ.js' deploy"
        }
      ]
    },
    "integ:s3:destroy": {
      "name": "integ:s3:destroy",
      "steps": [
        {
          "exec": "cdk -a 'node lib/__tests__/clients/s3/s3.integ.js' destroy"
        }
      ]
    },
    "integ:sqs:synth": {
      "name": "integ:sqs:synth",
      "steps": [
        {
          "exec": "cdk -a 'node lib/__tests__/clients/sqs/sqs.integ.js' synth"
        }
      ]
    },
    "integ:sqs:deploy": {
      "name": "integ:sqs:deploy",
      "steps": [
        {
          "exec": "cdk -a 'node lib/__tests__/clients/sqs/sqs.integ.js' deploy"
        }
      ]
    },
    "integ:sqs:destroy": {
      "name": "integ:sqs:destroy",
      "steps": [
        {
          "exec": "cdk -a 'node lib/__tests__/clients/sqs/sqs.integ.js' destroy"
        }
      ]
    },
    "release": {
      "name": "release",
      "description": "Prepare a release from \"main\" branch",
      "env": {
        "RELEASE": "true"
      },
      "steps": [
        {
          "exec": "rm -fr dist"
        },
        {
          "spawn": "bump"
        },
        {
          "spawn": "build"
        },
        {
          "spawn": "unbump"
        },
        {
          "exec": "git diff --ignore-space-at-eol --exit-code"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node -e \\\"console.log(process.env.PATH)\\\"\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
