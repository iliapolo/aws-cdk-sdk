import * as cdk from '@aws-cdk/core';
import * as cr from '@aws-cdk/custom-resources';
import * as shapes from './shapes';

export class MediaPackageClient extends cdk.Construct {

  constructor(scope: cdk.Construct, id: string, private readonly __resources: string[]) {
    super(scope, id);
  }

  public configureLogs(input: shapes.MediaPackageConfigureLogsRequest): MediaPackageResponsesConfigureLogs {
    return new MediaPackageResponsesConfigureLogs(this, this.__resources, input);
  }

  public createChannel(input: shapes.MediaPackageCreateChannelRequest): MediaPackageResponsesCreateChannel {
    return new MediaPackageResponsesCreateChannel(this, this.__resources, input);
  }

  public createHarvestJob(input: shapes.MediaPackageCreateHarvestJobRequest): MediaPackageResponsesCreateHarvestJob {
    return new MediaPackageResponsesCreateHarvestJob(this, this.__resources, input);
  }

  public createOriginEndpoint(input: shapes.MediaPackageCreateOriginEndpointRequest): MediaPackageResponsesCreateOriginEndpoint {
    return new MediaPackageResponsesCreateOriginEndpoint(this, this.__resources, input);
  }

  public deleteChannel(input: shapes.MediaPackageDeleteChannelRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DeleteChannel'),
        parameters: {
          Id: input.id,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteChannel', props);
  }

  public deleteOriginEndpoint(input: shapes.MediaPackageDeleteOriginEndpointRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DeleteOriginEndpoint'),
        parameters: {
          Id: input.id,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteOriginEndpoint', props);
  }

  public describeChannel(input: shapes.MediaPackageDescribeChannelRequest): MediaPackageResponsesDescribeChannel {
    return new MediaPackageResponsesDescribeChannel(this, this.__resources, input);
  }

  public describeHarvestJob(input: shapes.MediaPackageDescribeHarvestJobRequest): MediaPackageResponsesDescribeHarvestJob {
    return new MediaPackageResponsesDescribeHarvestJob(this, this.__resources, input);
  }

  public describeOriginEndpoint(input: shapes.MediaPackageDescribeOriginEndpointRequest): MediaPackageResponsesDescribeOriginEndpoint {
    return new MediaPackageResponsesDescribeOriginEndpoint(this, this.__resources, input);
  }

  public listChannels(input: shapes.MediaPackageListChannelsRequest): MediaPackageResponsesListChannels {
    return new MediaPackageResponsesListChannels(this, this.__resources, input);
  }

  public listHarvestJobs(input: shapes.MediaPackageListHarvestJobsRequest): MediaPackageResponsesListHarvestJobs {
    return new MediaPackageResponsesListHarvestJobs(this, this.__resources, input);
  }

  public listOriginEndpoints(input: shapes.MediaPackageListOriginEndpointsRequest): MediaPackageResponsesListOriginEndpoints {
    return new MediaPackageResponsesListOriginEndpoints(this, this.__resources, input);
  }

  public listTagsForResource(input: shapes.MediaPackageListTagsForResourceRequest): MediaPackageResponsesListTagsForResource {
    return new MediaPackageResponsesListTagsForResource(this, this.__resources, input);
  }

  public rotateChannelCredentials(input: shapes.MediaPackageRotateChannelCredentialsRequest): MediaPackageResponsesRotateChannelCredentials {
    return new MediaPackageResponsesRotateChannelCredentials(this, this.__resources, input);
  }

  public rotateIngestEndpointCredentials(input: shapes.MediaPackageRotateIngestEndpointCredentialsRequest): MediaPackageResponsesRotateIngestEndpointCredentials {
    return new MediaPackageResponsesRotateIngestEndpointCredentials(this, this.__resources, input);
  }

  public tagResource(input: shapes.MediaPackageTagResourceRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'tagResource',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.TagResource'),
        parameters: {
          ResourceArn: input.resourceArn,
          Tags: input.tags,
        },
      },
    };
    new cr.AwsCustomResource(this, 'TagResource', props);
  }

  public untagResource(input: shapes.MediaPackageUntagResourceRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'untagResource',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UntagResource'),
        parameters: {
          ResourceArn: input.resourceArn,
          TagKeys: input.tagKeys,
        },
      },
    };
    new cr.AwsCustomResource(this, 'UntagResource', props);
  }

  public updateChannel(input: shapes.MediaPackageUpdateChannelRequest): MediaPackageResponsesUpdateChannel {
    return new MediaPackageResponsesUpdateChannel(this, this.__resources, input);
  }

  public updateOriginEndpoint(input: shapes.MediaPackageUpdateOriginEndpointRequest): MediaPackageResponsesUpdateOriginEndpoint {
    return new MediaPackageResponsesUpdateOriginEndpoint(this, this.__resources, input);
  }

}

export class MediaPackageResponsesConfigureLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageConfigureLogsRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'configureLogs',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ConfigureLogs.Arn'),
        outputPath: 'Arn',
        parameters: {
          EgressAccessLogs: {
            LogGroupName: this.__input.egressAccessLogs?.logGroupName,
          },
          Id: this.__input.id,
          IngressAccessLogs: {
            LogGroupName: this.__input.ingressAccessLogs?.logGroupName,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ConfigureLogs.Arn', props);
    return resource.getResponseField('Arn') as unknown as string;
  }

  public get description(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'configureLogs',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ConfigureLogs.Description'),
        outputPath: 'Description',
        parameters: {
          EgressAccessLogs: {
            LogGroupName: this.__input.egressAccessLogs?.logGroupName,
          },
          Id: this.__input.id,
          IngressAccessLogs: {
            LogGroupName: this.__input.ingressAccessLogs?.logGroupName,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ConfigureLogs.Description', props);
    return resource.getResponseField('Description') as unknown as string;
  }

  public get egressAccessLogs(): MediaPackageResponsesConfigureLogsEgressAccessLogs {
    return new MediaPackageResponsesConfigureLogsEgressAccessLogs(this.__scope, this.__resources, this.__input);
  }

  public get hlsIngest(): MediaPackageResponsesConfigureLogsHlsIngest {
    return new MediaPackageResponsesConfigureLogsHlsIngest(this.__scope, this.__resources, this.__input);
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'configureLogs',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ConfigureLogs.Id'),
        outputPath: 'Id',
        parameters: {
          EgressAccessLogs: {
            LogGroupName: this.__input.egressAccessLogs?.logGroupName,
          },
          Id: this.__input.id,
          IngressAccessLogs: {
            LogGroupName: this.__input.ingressAccessLogs?.logGroupName,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ConfigureLogs.Id', props);
    return resource.getResponseField('Id') as unknown as string;
  }

  public get ingressAccessLogs(): MediaPackageResponsesConfigureLogsIngressAccessLogs {
    return new MediaPackageResponsesConfigureLogsIngressAccessLogs(this.__scope, this.__resources, this.__input);
  }

  public get tags(): Record<string, string> {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'configureLogs',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ConfigureLogs.Tags'),
        outputPath: 'Tags',
        parameters: {
          EgressAccessLogs: {
            LogGroupName: this.__input.egressAccessLogs?.logGroupName,
          },
          Id: this.__input.id,
          IngressAccessLogs: {
            LogGroupName: this.__input.ingressAccessLogs?.logGroupName,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ConfigureLogs.Tags', props);
    return resource.getResponseField('Tags') as unknown as Record<string, string>;
  }

}

export class MediaPackageResponsesConfigureLogsEgressAccessLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageConfigureLogsRequest) {
  }

  public get logGroupName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'configureLogs',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ConfigureLogs.EgressAccessLogs.LogGroupName'),
        outputPath: 'EgressAccessLogs.LogGroupName',
        parameters: {
          EgressAccessLogs: {
            LogGroupName: this.__input.egressAccessLogs?.logGroupName,
          },
          Id: this.__input.id,
          IngressAccessLogs: {
            LogGroupName: this.__input.ingressAccessLogs?.logGroupName,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ConfigureLogs.EgressAccessLogs.LogGroupName', props);
    return resource.getResponseField('EgressAccessLogs.LogGroupName') as unknown as string;
  }

}

export class MediaPackageResponsesConfigureLogsHlsIngest {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageConfigureLogsRequest) {
  }

  public get ingestEndpoints(): shapes.MediaPackageIngestEndpoint[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'configureLogs',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ConfigureLogs.HlsIngest.IngestEndpoints'),
        outputPath: 'HlsIngest.IngestEndpoints',
        parameters: {
          EgressAccessLogs: {
            LogGroupName: this.__input.egressAccessLogs?.logGroupName,
          },
          Id: this.__input.id,
          IngressAccessLogs: {
            LogGroupName: this.__input.ingressAccessLogs?.logGroupName,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ConfigureLogs.HlsIngest.IngestEndpoints', props);
    return resource.getResponseField('HlsIngest.IngestEndpoints') as unknown as shapes.MediaPackageIngestEndpoint[];
  }

}

export class MediaPackageResponsesConfigureLogsIngressAccessLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageConfigureLogsRequest) {
  }

  public get logGroupName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'configureLogs',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ConfigureLogs.IngressAccessLogs.LogGroupName'),
        outputPath: 'IngressAccessLogs.LogGroupName',
        parameters: {
          EgressAccessLogs: {
            LogGroupName: this.__input.egressAccessLogs?.logGroupName,
          },
          Id: this.__input.id,
          IngressAccessLogs: {
            LogGroupName: this.__input.ingressAccessLogs?.logGroupName,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ConfigureLogs.IngressAccessLogs.LogGroupName', props);
    return resource.getResponseField('IngressAccessLogs.LogGroupName') as unknown as string;
  }

}

export class MediaPackageResponsesCreateChannel {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateChannelRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateChannel.Arn'),
        outputPath: 'Arn',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
          Tags: this.__input.tags,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateChannel.Arn', props);
    return resource.getResponseField('Arn') as unknown as string;
  }

  public get description(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateChannel.Description'),
        outputPath: 'Description',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
          Tags: this.__input.tags,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateChannel.Description', props);
    return resource.getResponseField('Description') as unknown as string;
  }

  public get egressAccessLogs(): MediaPackageResponsesCreateChannelEgressAccessLogs {
    return new MediaPackageResponsesCreateChannelEgressAccessLogs(this.__scope, this.__resources, this.__input);
  }

  public get hlsIngest(): MediaPackageResponsesCreateChannelHlsIngest {
    return new MediaPackageResponsesCreateChannelHlsIngest(this.__scope, this.__resources, this.__input);
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateChannel.Id'),
        outputPath: 'Id',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
          Tags: this.__input.tags,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateChannel.Id', props);
    return resource.getResponseField('Id') as unknown as string;
  }

  public get ingressAccessLogs(): MediaPackageResponsesCreateChannelIngressAccessLogs {
    return new MediaPackageResponsesCreateChannelIngressAccessLogs(this.__scope, this.__resources, this.__input);
  }

  public get tags(): Record<string, string> {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateChannel.Tags'),
        outputPath: 'Tags',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
          Tags: this.__input.tags,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateChannel.Tags', props);
    return resource.getResponseField('Tags') as unknown as Record<string, string>;
  }

}

export class MediaPackageResponsesCreateChannelEgressAccessLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateChannelRequest) {
  }

  public get logGroupName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateChannel.EgressAccessLogs.LogGroupName'),
        outputPath: 'EgressAccessLogs.LogGroupName',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
          Tags: this.__input.tags,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateChannel.EgressAccessLogs.LogGroupName', props);
    return resource.getResponseField('EgressAccessLogs.LogGroupName') as unknown as string;
  }

}

export class MediaPackageResponsesCreateChannelHlsIngest {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateChannelRequest) {
  }

  public get ingestEndpoints(): shapes.MediaPackageIngestEndpoint[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateChannel.HlsIngest.IngestEndpoints'),
        outputPath: 'HlsIngest.IngestEndpoints',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
          Tags: this.__input.tags,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateChannel.HlsIngest.IngestEndpoints', props);
    return resource.getResponseField('HlsIngest.IngestEndpoints') as unknown as shapes.MediaPackageIngestEndpoint[];
  }

}

export class MediaPackageResponsesCreateChannelIngressAccessLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateChannelRequest) {
  }

  public get logGroupName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateChannel.IngressAccessLogs.LogGroupName'),
        outputPath: 'IngressAccessLogs.LogGroupName',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
          Tags: this.__input.tags,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateChannel.IngressAccessLogs.LogGroupName', props);
    return resource.getResponseField('IngressAccessLogs.LogGroupName') as unknown as string;
  }

}

export class MediaPackageResponsesCreateHarvestJob {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateHarvestJobRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateHarvestJob.Arn'),
        outputPath: 'Arn',
        parameters: {
          EndTime: this.__input.endTime,
          Id: this.__input.id,
          OriginEndpointId: this.__input.originEndpointId,
          S3Destination: {
            BucketName: this.__input.s3Destination.bucketName,
            ManifestKey: this.__input.s3Destination.manifestKey,
            RoleArn: this.__input.s3Destination.roleArn,
          },
          StartTime: this.__input.startTime,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateHarvestJob.Arn', props);
    return resource.getResponseField('Arn') as unknown as string;
  }

  public get channelId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateHarvestJob.ChannelId'),
        outputPath: 'ChannelId',
        parameters: {
          EndTime: this.__input.endTime,
          Id: this.__input.id,
          OriginEndpointId: this.__input.originEndpointId,
          S3Destination: {
            BucketName: this.__input.s3Destination.bucketName,
            ManifestKey: this.__input.s3Destination.manifestKey,
            RoleArn: this.__input.s3Destination.roleArn,
          },
          StartTime: this.__input.startTime,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateHarvestJob.ChannelId', props);
    return resource.getResponseField('ChannelId') as unknown as string;
  }

  public get createdAt(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateHarvestJob.CreatedAt'),
        outputPath: 'CreatedAt',
        parameters: {
          EndTime: this.__input.endTime,
          Id: this.__input.id,
          OriginEndpointId: this.__input.originEndpointId,
          S3Destination: {
            BucketName: this.__input.s3Destination.bucketName,
            ManifestKey: this.__input.s3Destination.manifestKey,
            RoleArn: this.__input.s3Destination.roleArn,
          },
          StartTime: this.__input.startTime,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateHarvestJob.CreatedAt', props);
    return resource.getResponseField('CreatedAt') as unknown as string;
  }

  public get endTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateHarvestJob.EndTime'),
        outputPath: 'EndTime',
        parameters: {
          EndTime: this.__input.endTime,
          Id: this.__input.id,
          OriginEndpointId: this.__input.originEndpointId,
          S3Destination: {
            BucketName: this.__input.s3Destination.bucketName,
            ManifestKey: this.__input.s3Destination.manifestKey,
            RoleArn: this.__input.s3Destination.roleArn,
          },
          StartTime: this.__input.startTime,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateHarvestJob.EndTime', props);
    return resource.getResponseField('EndTime') as unknown as string;
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateHarvestJob.Id'),
        outputPath: 'Id',
        parameters: {
          EndTime: this.__input.endTime,
          Id: this.__input.id,
          OriginEndpointId: this.__input.originEndpointId,
          S3Destination: {
            BucketName: this.__input.s3Destination.bucketName,
            ManifestKey: this.__input.s3Destination.manifestKey,
            RoleArn: this.__input.s3Destination.roleArn,
          },
          StartTime: this.__input.startTime,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateHarvestJob.Id', props);
    return resource.getResponseField('Id') as unknown as string;
  }

  public get originEndpointId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateHarvestJob.OriginEndpointId'),
        outputPath: 'OriginEndpointId',
        parameters: {
          EndTime: this.__input.endTime,
          Id: this.__input.id,
          OriginEndpointId: this.__input.originEndpointId,
          S3Destination: {
            BucketName: this.__input.s3Destination.bucketName,
            ManifestKey: this.__input.s3Destination.manifestKey,
            RoleArn: this.__input.s3Destination.roleArn,
          },
          StartTime: this.__input.startTime,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateHarvestJob.OriginEndpointId', props);
    return resource.getResponseField('OriginEndpointId') as unknown as string;
  }

  public get s3Destination(): MediaPackageResponsesCreateHarvestJobS3Destination {
    return new MediaPackageResponsesCreateHarvestJobS3Destination(this.__scope, this.__resources, this.__input);
  }

  public get startTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateHarvestJob.StartTime'),
        outputPath: 'StartTime',
        parameters: {
          EndTime: this.__input.endTime,
          Id: this.__input.id,
          OriginEndpointId: this.__input.originEndpointId,
          S3Destination: {
            BucketName: this.__input.s3Destination.bucketName,
            ManifestKey: this.__input.s3Destination.manifestKey,
            RoleArn: this.__input.s3Destination.roleArn,
          },
          StartTime: this.__input.startTime,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateHarvestJob.StartTime', props);
    return resource.getResponseField('StartTime') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateHarvestJob.Status'),
        outputPath: 'Status',
        parameters: {
          EndTime: this.__input.endTime,
          Id: this.__input.id,
          OriginEndpointId: this.__input.originEndpointId,
          S3Destination: {
            BucketName: this.__input.s3Destination.bucketName,
            ManifestKey: this.__input.s3Destination.manifestKey,
            RoleArn: this.__input.s3Destination.roleArn,
          },
          StartTime: this.__input.startTime,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateHarvestJob.Status', props);
    return resource.getResponseField('Status') as unknown as string;
  }

}

export class MediaPackageResponsesCreateHarvestJobS3Destination {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateHarvestJobRequest) {
  }

  public get bucketName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateHarvestJob.S3Destination.BucketName'),
        outputPath: 'S3Destination.BucketName',
        parameters: {
          EndTime: this.__input.endTime,
          Id: this.__input.id,
          OriginEndpointId: this.__input.originEndpointId,
          S3Destination: {
            BucketName: this.__input.s3Destination.bucketName,
            ManifestKey: this.__input.s3Destination.manifestKey,
            RoleArn: this.__input.s3Destination.roleArn,
          },
          StartTime: this.__input.startTime,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateHarvestJob.S3Destination.BucketName', props);
    return resource.getResponseField('S3Destination.BucketName') as unknown as string;
  }

  public get manifestKey(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateHarvestJob.S3Destination.ManifestKey'),
        outputPath: 'S3Destination.ManifestKey',
        parameters: {
          EndTime: this.__input.endTime,
          Id: this.__input.id,
          OriginEndpointId: this.__input.originEndpointId,
          S3Destination: {
            BucketName: this.__input.s3Destination.bucketName,
            ManifestKey: this.__input.s3Destination.manifestKey,
            RoleArn: this.__input.s3Destination.roleArn,
          },
          StartTime: this.__input.startTime,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateHarvestJob.S3Destination.ManifestKey', props);
    return resource.getResponseField('S3Destination.ManifestKey') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateHarvestJob.S3Destination.RoleArn'),
        outputPath: 'S3Destination.RoleArn',
        parameters: {
          EndTime: this.__input.endTime,
          Id: this.__input.id,
          OriginEndpointId: this.__input.originEndpointId,
          S3Destination: {
            BucketName: this.__input.s3Destination.bucketName,
            ManifestKey: this.__input.s3Destination.manifestKey,
            RoleArn: this.__input.s3Destination.roleArn,
          },
          StartTime: this.__input.startTime,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateHarvestJob.S3Destination.RoleArn', props);
    return resource.getResponseField('S3Destination.RoleArn') as unknown as string;
  }

}

export class MediaPackageResponsesCreateOriginEndpoint {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.Arn'),
        outputPath: 'Arn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.Arn', props);
    return resource.getResponseField('Arn') as unknown as string;
  }

  public get authorization(): MediaPackageResponsesCreateOriginEndpointAuthorization {
    return new MediaPackageResponsesCreateOriginEndpointAuthorization(this.__scope, this.__resources, this.__input);
  }

  public get channelId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.ChannelId'),
        outputPath: 'ChannelId',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.ChannelId', props);
    return resource.getResponseField('ChannelId') as unknown as string;
  }

  public get cmafPackage(): MediaPackageResponsesCreateOriginEndpointCmafPackage {
    return new MediaPackageResponsesCreateOriginEndpointCmafPackage(this.__scope, this.__resources, this.__input);
  }

  public get dashPackage(): MediaPackageResponsesCreateOriginEndpointDashPackage {
    return new MediaPackageResponsesCreateOriginEndpointDashPackage(this.__scope, this.__resources, this.__input);
  }

  public get description(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.Description'),
        outputPath: 'Description',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.Description', props);
    return resource.getResponseField('Description') as unknown as string;
  }

  public get hlsPackage(): MediaPackageResponsesCreateOriginEndpointHlsPackage {
    return new MediaPackageResponsesCreateOriginEndpointHlsPackage(this.__scope, this.__resources, this.__input);
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.Id'),
        outputPath: 'Id',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.Id', props);
    return resource.getResponseField('Id') as unknown as string;
  }

  public get manifestName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.ManifestName'),
        outputPath: 'ManifestName',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.ManifestName', props);
    return resource.getResponseField('ManifestName') as unknown as string;
  }

  public get mssPackage(): MediaPackageResponsesCreateOriginEndpointMssPackage {
    return new MediaPackageResponsesCreateOriginEndpointMssPackage(this.__scope, this.__resources, this.__input);
  }

  public get origination(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.Origination'),
        outputPath: 'Origination',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.Origination', props);
    return resource.getResponseField('Origination') as unknown as string;
  }

  public get startoverWindowSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.StartoverWindowSeconds'),
        outputPath: 'StartoverWindowSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.StartoverWindowSeconds', props);
    return resource.getResponseField('StartoverWindowSeconds') as unknown as number;
  }

  public get tags(): Record<string, string> {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.Tags'),
        outputPath: 'Tags',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.Tags', props);
    return resource.getResponseField('Tags') as unknown as Record<string, string>;
  }

  public get timeDelaySeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.TimeDelaySeconds'),
        outputPath: 'TimeDelaySeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.TimeDelaySeconds', props);
    return resource.getResponseField('TimeDelaySeconds') as unknown as number;
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.Url'),
        outputPath: 'Url',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.Url', props);
    return resource.getResponseField('Url') as unknown as string;
  }

  public get whitelist(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.Whitelist'),
        outputPath: 'Whitelist',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.Whitelist', props);
    return resource.getResponseField('Whitelist') as unknown as string[];
  }

}

export class MediaPackageResponsesCreateOriginEndpointAuthorization {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get cdnIdentifierSecret(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.Authorization.CdnIdentifierSecret'),
        outputPath: 'Authorization.CdnIdentifierSecret',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.Authorization.CdnIdentifierSecret', props);
    return resource.getResponseField('Authorization.CdnIdentifierSecret') as unknown as string;
  }

  public get secretsRoleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.Authorization.SecretsRoleArn'),
        outputPath: 'Authorization.SecretsRoleArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.Authorization.SecretsRoleArn', props);
    return resource.getResponseField('Authorization.SecretsRoleArn') as unknown as string;
  }

}

export class MediaPackageResponsesCreateOriginEndpointCmafPackage {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get encryption(): MediaPackageResponsesCreateOriginEndpointCmafPackageEncryption {
    return new MediaPackageResponsesCreateOriginEndpointCmafPackageEncryption(this.__scope, this.__resources, this.__input);
  }

  public get hlsManifests(): shapes.MediaPackageHlsManifest[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.CmafPackage.HlsManifests'),
        outputPath: 'CmafPackage.HlsManifests',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.CmafPackage.HlsManifests', props);
    return resource.getResponseField('CmafPackage.HlsManifests') as unknown as shapes.MediaPackageHlsManifest[];
  }

  public get segmentDurationSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.CmafPackage.SegmentDurationSeconds'),
        outputPath: 'CmafPackage.SegmentDurationSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.CmafPackage.SegmentDurationSeconds', props);
    return resource.getResponseField('CmafPackage.SegmentDurationSeconds') as unknown as number;
  }

  public get segmentPrefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.CmafPackage.SegmentPrefix'),
        outputPath: 'CmafPackage.SegmentPrefix',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.CmafPackage.SegmentPrefix', props);
    return resource.getResponseField('CmafPackage.SegmentPrefix') as unknown as string;
  }

  public get streamSelection(): MediaPackageResponsesCreateOriginEndpointCmafPackageStreamSelection {
    return new MediaPackageResponsesCreateOriginEndpointCmafPackageStreamSelection(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesCreateOriginEndpointCmafPackageEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get keyRotationIntervalSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.CmafPackage.Encryption.KeyRotationIntervalSeconds'),
        outputPath: 'CmafPackage.Encryption.KeyRotationIntervalSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.CmafPackage.Encryption.KeyRotationIntervalSeconds', props);
    return resource.getResponseField('CmafPackage.Encryption.KeyRotationIntervalSeconds') as unknown as number;
  }

  public get spekeKeyProvider(): MediaPackageResponsesCreateOriginEndpointCmafPackageEncryptionSpekeKeyProvider {
    return new MediaPackageResponsesCreateOriginEndpointCmafPackageEncryptionSpekeKeyProvider(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesCreateOriginEndpointCmafPackageEncryptionSpekeKeyProvider {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get certificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.CertificateArn'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.CertificateArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.CertificateArn', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.CertificateArn') as unknown as string;
  }

  public get resourceId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.ResourceId'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.ResourceId',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.ResourceId', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.ResourceId') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.RoleArn'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.RoleArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.RoleArn', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.RoleArn') as unknown as string;
  }

  public get systemIds(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.SystemIds'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.SystemIds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.SystemIds', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.SystemIds') as unknown as string[];
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.Url'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.Url',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.Url', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.Url') as unknown as string;
  }

}

export class MediaPackageResponsesCreateOriginEndpointCmafPackageStreamSelection {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get maxVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.CmafPackage.StreamSelection.MaxVideoBitsPerSecond'),
        outputPath: 'CmafPackage.StreamSelection.MaxVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.CmafPackage.StreamSelection.MaxVideoBitsPerSecond', props);
    return resource.getResponseField('CmafPackage.StreamSelection.MaxVideoBitsPerSecond') as unknown as number;
  }

  public get minVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.CmafPackage.StreamSelection.MinVideoBitsPerSecond'),
        outputPath: 'CmafPackage.StreamSelection.MinVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.CmafPackage.StreamSelection.MinVideoBitsPerSecond', props);
    return resource.getResponseField('CmafPackage.StreamSelection.MinVideoBitsPerSecond') as unknown as number;
  }

  public get streamOrder(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.CmafPackage.StreamSelection.StreamOrder'),
        outputPath: 'CmafPackage.StreamSelection.StreamOrder',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.CmafPackage.StreamSelection.StreamOrder', props);
    return resource.getResponseField('CmafPackage.StreamSelection.StreamOrder') as unknown as string;
  }

}

export class MediaPackageResponsesCreateOriginEndpointDashPackage {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get adTriggers(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.AdTriggers'),
        outputPath: 'DashPackage.AdTriggers',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.AdTriggers', props);
    return resource.getResponseField('DashPackage.AdTriggers') as unknown as string[];
  }

  public get adsOnDeliveryRestrictions(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.AdsOnDeliveryRestrictions'),
        outputPath: 'DashPackage.AdsOnDeliveryRestrictions',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.AdsOnDeliveryRestrictions', props);
    return resource.getResponseField('DashPackage.AdsOnDeliveryRestrictions') as unknown as string;
  }

  public get encryption(): MediaPackageResponsesCreateOriginEndpointDashPackageEncryption {
    return new MediaPackageResponsesCreateOriginEndpointDashPackageEncryption(this.__scope, this.__resources, this.__input);
  }

  public get manifestLayout(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.ManifestLayout'),
        outputPath: 'DashPackage.ManifestLayout',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.ManifestLayout', props);
    return resource.getResponseField('DashPackage.ManifestLayout') as unknown as string;
  }

  public get manifestWindowSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.ManifestWindowSeconds'),
        outputPath: 'DashPackage.ManifestWindowSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.ManifestWindowSeconds', props);
    return resource.getResponseField('DashPackage.ManifestWindowSeconds') as unknown as number;
  }

  public get minBufferTimeSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.MinBufferTimeSeconds'),
        outputPath: 'DashPackage.MinBufferTimeSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.MinBufferTimeSeconds', props);
    return resource.getResponseField('DashPackage.MinBufferTimeSeconds') as unknown as number;
  }

  public get minUpdatePeriodSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.MinUpdatePeriodSeconds'),
        outputPath: 'DashPackage.MinUpdatePeriodSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.MinUpdatePeriodSeconds', props);
    return resource.getResponseField('DashPackage.MinUpdatePeriodSeconds') as unknown as number;
  }

  public get periodTriggers(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.PeriodTriggers'),
        outputPath: 'DashPackage.PeriodTriggers',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.PeriodTriggers', props);
    return resource.getResponseField('DashPackage.PeriodTriggers') as unknown as string[];
  }

  public get profile(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.Profile'),
        outputPath: 'DashPackage.Profile',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.Profile', props);
    return resource.getResponseField('DashPackage.Profile') as unknown as string;
  }

  public get segmentDurationSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.SegmentDurationSeconds'),
        outputPath: 'DashPackage.SegmentDurationSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.SegmentDurationSeconds', props);
    return resource.getResponseField('DashPackage.SegmentDurationSeconds') as unknown as number;
  }

  public get segmentTemplateFormat(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.SegmentTemplateFormat'),
        outputPath: 'DashPackage.SegmentTemplateFormat',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.SegmentTemplateFormat', props);
    return resource.getResponseField('DashPackage.SegmentTemplateFormat') as unknown as string;
  }

  public get streamSelection(): MediaPackageResponsesCreateOriginEndpointDashPackageStreamSelection {
    return new MediaPackageResponsesCreateOriginEndpointDashPackageStreamSelection(this.__scope, this.__resources, this.__input);
  }

  public get suggestedPresentationDelaySeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.SuggestedPresentationDelaySeconds'),
        outputPath: 'DashPackage.SuggestedPresentationDelaySeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.SuggestedPresentationDelaySeconds', props);
    return resource.getResponseField('DashPackage.SuggestedPresentationDelaySeconds') as unknown as number;
  }

  public get utcTiming(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.UtcTiming'),
        outputPath: 'DashPackage.UtcTiming',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.UtcTiming', props);
    return resource.getResponseField('DashPackage.UtcTiming') as unknown as string;
  }

  public get utcTimingUri(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.UtcTimingUri'),
        outputPath: 'DashPackage.UtcTimingUri',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.UtcTimingUri', props);
    return resource.getResponseField('DashPackage.UtcTimingUri') as unknown as string;
  }

}

export class MediaPackageResponsesCreateOriginEndpointDashPackageEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get keyRotationIntervalSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.Encryption.KeyRotationIntervalSeconds'),
        outputPath: 'DashPackage.Encryption.KeyRotationIntervalSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.Encryption.KeyRotationIntervalSeconds', props);
    return resource.getResponseField('DashPackage.Encryption.KeyRotationIntervalSeconds') as unknown as number;
  }

  public get spekeKeyProvider(): MediaPackageResponsesCreateOriginEndpointDashPackageEncryptionSpekeKeyProvider {
    return new MediaPackageResponsesCreateOriginEndpointDashPackageEncryptionSpekeKeyProvider(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesCreateOriginEndpointDashPackageEncryptionSpekeKeyProvider {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get certificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.CertificateArn'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.CertificateArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.CertificateArn', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.CertificateArn') as unknown as string;
  }

  public get resourceId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.ResourceId'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.ResourceId',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.ResourceId', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.ResourceId') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.RoleArn'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.RoleArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.RoleArn', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.RoleArn') as unknown as string;
  }

  public get systemIds(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.SystemIds'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.SystemIds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.SystemIds', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.SystemIds') as unknown as string[];
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.Url'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.Url',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.Url', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.Url') as unknown as string;
  }

}

export class MediaPackageResponsesCreateOriginEndpointDashPackageStreamSelection {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get maxVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.StreamSelection.MaxVideoBitsPerSecond'),
        outputPath: 'DashPackage.StreamSelection.MaxVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.StreamSelection.MaxVideoBitsPerSecond', props);
    return resource.getResponseField('DashPackage.StreamSelection.MaxVideoBitsPerSecond') as unknown as number;
  }

  public get minVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.StreamSelection.MinVideoBitsPerSecond'),
        outputPath: 'DashPackage.StreamSelection.MinVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.StreamSelection.MinVideoBitsPerSecond', props);
    return resource.getResponseField('DashPackage.StreamSelection.MinVideoBitsPerSecond') as unknown as number;
  }

  public get streamOrder(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.DashPackage.StreamSelection.StreamOrder'),
        outputPath: 'DashPackage.StreamSelection.StreamOrder',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.DashPackage.StreamSelection.StreamOrder', props);
    return resource.getResponseField('DashPackage.StreamSelection.StreamOrder') as unknown as string;
  }

}

export class MediaPackageResponsesCreateOriginEndpointHlsPackage {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get adMarkers(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.AdMarkers'),
        outputPath: 'HlsPackage.AdMarkers',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.AdMarkers', props);
    return resource.getResponseField('HlsPackage.AdMarkers') as unknown as string;
  }

  public get adTriggers(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.AdTriggers'),
        outputPath: 'HlsPackage.AdTriggers',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.AdTriggers', props);
    return resource.getResponseField('HlsPackage.AdTriggers') as unknown as string[];
  }

  public get adsOnDeliveryRestrictions(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.AdsOnDeliveryRestrictions'),
        outputPath: 'HlsPackage.AdsOnDeliveryRestrictions',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.AdsOnDeliveryRestrictions', props);
    return resource.getResponseField('HlsPackage.AdsOnDeliveryRestrictions') as unknown as string;
  }

  public get encryption(): MediaPackageResponsesCreateOriginEndpointHlsPackageEncryption {
    return new MediaPackageResponsesCreateOriginEndpointHlsPackageEncryption(this.__scope, this.__resources, this.__input);
  }

  public get includeIframeOnlyStream(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.IncludeIframeOnlyStream'),
        outputPath: 'HlsPackage.IncludeIframeOnlyStream',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.IncludeIframeOnlyStream', props);
    return resource.getResponseField('HlsPackage.IncludeIframeOnlyStream') as unknown as boolean;
  }

  public get playlistType(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.PlaylistType'),
        outputPath: 'HlsPackage.PlaylistType',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.PlaylistType', props);
    return resource.getResponseField('HlsPackage.PlaylistType') as unknown as string;
  }

  public get playlistWindowSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.PlaylistWindowSeconds'),
        outputPath: 'HlsPackage.PlaylistWindowSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.PlaylistWindowSeconds', props);
    return resource.getResponseField('HlsPackage.PlaylistWindowSeconds') as unknown as number;
  }

  public get programDateTimeIntervalSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.ProgramDateTimeIntervalSeconds'),
        outputPath: 'HlsPackage.ProgramDateTimeIntervalSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.ProgramDateTimeIntervalSeconds', props);
    return resource.getResponseField('HlsPackage.ProgramDateTimeIntervalSeconds') as unknown as number;
  }

  public get segmentDurationSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.SegmentDurationSeconds'),
        outputPath: 'HlsPackage.SegmentDurationSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.SegmentDurationSeconds', props);
    return resource.getResponseField('HlsPackage.SegmentDurationSeconds') as unknown as number;
  }

  public get streamSelection(): MediaPackageResponsesCreateOriginEndpointHlsPackageStreamSelection {
    return new MediaPackageResponsesCreateOriginEndpointHlsPackageStreamSelection(this.__scope, this.__resources, this.__input);
  }

  public get useAudioRenditionGroup(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.UseAudioRenditionGroup'),
        outputPath: 'HlsPackage.UseAudioRenditionGroup',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.UseAudioRenditionGroup', props);
    return resource.getResponseField('HlsPackage.UseAudioRenditionGroup') as unknown as boolean;
  }

}

export class MediaPackageResponsesCreateOriginEndpointHlsPackageEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get constantInitializationVector(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.Encryption.ConstantInitializationVector'),
        outputPath: 'HlsPackage.Encryption.ConstantInitializationVector',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.Encryption.ConstantInitializationVector', props);
    return resource.getResponseField('HlsPackage.Encryption.ConstantInitializationVector') as unknown as string;
  }

  public get encryptionMethod(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.Encryption.EncryptionMethod'),
        outputPath: 'HlsPackage.Encryption.EncryptionMethod',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.Encryption.EncryptionMethod', props);
    return resource.getResponseField('HlsPackage.Encryption.EncryptionMethod') as unknown as string;
  }

  public get keyRotationIntervalSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.Encryption.KeyRotationIntervalSeconds'),
        outputPath: 'HlsPackage.Encryption.KeyRotationIntervalSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.Encryption.KeyRotationIntervalSeconds', props);
    return resource.getResponseField('HlsPackage.Encryption.KeyRotationIntervalSeconds') as unknown as number;
  }

  public get repeatExtXKey(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.Encryption.RepeatExtXKey'),
        outputPath: 'HlsPackage.Encryption.RepeatExtXKey',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.Encryption.RepeatExtXKey', props);
    return resource.getResponseField('HlsPackage.Encryption.RepeatExtXKey') as unknown as boolean;
  }

  public get spekeKeyProvider(): MediaPackageResponsesCreateOriginEndpointHlsPackageEncryptionSpekeKeyProvider {
    return new MediaPackageResponsesCreateOriginEndpointHlsPackageEncryptionSpekeKeyProvider(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesCreateOriginEndpointHlsPackageEncryptionSpekeKeyProvider {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get certificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.CertificateArn'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.CertificateArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.CertificateArn', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.CertificateArn') as unknown as string;
  }

  public get resourceId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.ResourceId'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.ResourceId',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.ResourceId', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.ResourceId') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.RoleArn'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.RoleArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.RoleArn', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.RoleArn') as unknown as string;
  }

  public get systemIds(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.SystemIds'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.SystemIds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.SystemIds', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.SystemIds') as unknown as string[];
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.Url'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.Url',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.Url', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.Url') as unknown as string;
  }

}

export class MediaPackageResponsesCreateOriginEndpointHlsPackageStreamSelection {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get maxVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.StreamSelection.MaxVideoBitsPerSecond'),
        outputPath: 'HlsPackage.StreamSelection.MaxVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.StreamSelection.MaxVideoBitsPerSecond', props);
    return resource.getResponseField('HlsPackage.StreamSelection.MaxVideoBitsPerSecond') as unknown as number;
  }

  public get minVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.StreamSelection.MinVideoBitsPerSecond'),
        outputPath: 'HlsPackage.StreamSelection.MinVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.StreamSelection.MinVideoBitsPerSecond', props);
    return resource.getResponseField('HlsPackage.StreamSelection.MinVideoBitsPerSecond') as unknown as number;
  }

  public get streamOrder(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.HlsPackage.StreamSelection.StreamOrder'),
        outputPath: 'HlsPackage.StreamSelection.StreamOrder',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.HlsPackage.StreamSelection.StreamOrder', props);
    return resource.getResponseField('HlsPackage.StreamSelection.StreamOrder') as unknown as string;
  }

}

export class MediaPackageResponsesCreateOriginEndpointMssPackage {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get encryption(): MediaPackageResponsesCreateOriginEndpointMssPackageEncryption {
    return new MediaPackageResponsesCreateOriginEndpointMssPackageEncryption(this.__scope, this.__resources, this.__input);
  }

  public get manifestWindowSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.MssPackage.ManifestWindowSeconds'),
        outputPath: 'MssPackage.ManifestWindowSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.MssPackage.ManifestWindowSeconds', props);
    return resource.getResponseField('MssPackage.ManifestWindowSeconds') as unknown as number;
  }

  public get segmentDurationSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.MssPackage.SegmentDurationSeconds'),
        outputPath: 'MssPackage.SegmentDurationSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.MssPackage.SegmentDurationSeconds', props);
    return resource.getResponseField('MssPackage.SegmentDurationSeconds') as unknown as number;
  }

  public get streamSelection(): MediaPackageResponsesCreateOriginEndpointMssPackageStreamSelection {
    return new MediaPackageResponsesCreateOriginEndpointMssPackageStreamSelection(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesCreateOriginEndpointMssPackageEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get spekeKeyProvider(): MediaPackageResponsesCreateOriginEndpointMssPackageEncryptionSpekeKeyProvider {
    return new MediaPackageResponsesCreateOriginEndpointMssPackageEncryptionSpekeKeyProvider(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesCreateOriginEndpointMssPackageEncryptionSpekeKeyProvider {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get certificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.CertificateArn'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.CertificateArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.CertificateArn', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.CertificateArn') as unknown as string;
  }

  public get resourceId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.ResourceId'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.ResourceId',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.ResourceId', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.ResourceId') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.RoleArn'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.RoleArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.RoleArn', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.RoleArn') as unknown as string;
  }

  public get systemIds(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.SystemIds'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.SystemIds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.SystemIds', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.SystemIds') as unknown as string[];
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.Url'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.Url',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.Url', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.Url') as unknown as string;
  }

}

export class MediaPackageResponsesCreateOriginEndpointMssPackageStreamSelection {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageCreateOriginEndpointRequest) {
  }

  public get maxVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.MssPackage.StreamSelection.MaxVideoBitsPerSecond'),
        outputPath: 'MssPackage.StreamSelection.MaxVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.MssPackage.StreamSelection.MaxVideoBitsPerSecond', props);
    return resource.getResponseField('MssPackage.StreamSelection.MaxVideoBitsPerSecond') as unknown as number;
  }

  public get minVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.MssPackage.StreamSelection.MinVideoBitsPerSecond'),
        outputPath: 'MssPackage.StreamSelection.MinVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.MssPackage.StreamSelection.MinVideoBitsPerSecond', props);
    return resource.getResponseField('MssPackage.StreamSelection.MinVideoBitsPerSecond') as unknown as number;
  }

  public get streamOrder(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.CreateOriginEndpoint.MssPackage.StreamSelection.StreamOrder'),
        outputPath: 'MssPackage.StreamSelection.StreamOrder',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          ChannelId: this.__input.channelId,
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          Tags: this.__input.tags,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginEndpoint.MssPackage.StreamSelection.StreamOrder', props);
    return resource.getResponseField('MssPackage.StreamSelection.StreamOrder') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeChannel {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeChannelRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeChannel.Arn'),
        outputPath: 'Arn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeChannel.Arn', props);
    return resource.getResponseField('Arn') as unknown as string;
  }

  public get description(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeChannel.Description'),
        outputPath: 'Description',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeChannel.Description', props);
    return resource.getResponseField('Description') as unknown as string;
  }

  public get egressAccessLogs(): MediaPackageResponsesDescribeChannelEgressAccessLogs {
    return new MediaPackageResponsesDescribeChannelEgressAccessLogs(this.__scope, this.__resources, this.__input);
  }

  public get hlsIngest(): MediaPackageResponsesDescribeChannelHlsIngest {
    return new MediaPackageResponsesDescribeChannelHlsIngest(this.__scope, this.__resources, this.__input);
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeChannel.Id'),
        outputPath: 'Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeChannel.Id', props);
    return resource.getResponseField('Id') as unknown as string;
  }

  public get ingressAccessLogs(): MediaPackageResponsesDescribeChannelIngressAccessLogs {
    return new MediaPackageResponsesDescribeChannelIngressAccessLogs(this.__scope, this.__resources, this.__input);
  }

  public get tags(): Record<string, string> {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeChannel.Tags'),
        outputPath: 'Tags',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeChannel.Tags', props);
    return resource.getResponseField('Tags') as unknown as Record<string, string>;
  }

}

export class MediaPackageResponsesDescribeChannelEgressAccessLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeChannelRequest) {
  }

  public get logGroupName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeChannel.EgressAccessLogs.LogGroupName'),
        outputPath: 'EgressAccessLogs.LogGroupName',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeChannel.EgressAccessLogs.LogGroupName', props);
    return resource.getResponseField('EgressAccessLogs.LogGroupName') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeChannelHlsIngest {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeChannelRequest) {
  }

  public get ingestEndpoints(): shapes.MediaPackageIngestEndpoint[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeChannel.HlsIngest.IngestEndpoints'),
        outputPath: 'HlsIngest.IngestEndpoints',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeChannel.HlsIngest.IngestEndpoints', props);
    return resource.getResponseField('HlsIngest.IngestEndpoints') as unknown as shapes.MediaPackageIngestEndpoint[];
  }

}

export class MediaPackageResponsesDescribeChannelIngressAccessLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeChannelRequest) {
  }

  public get logGroupName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeChannel.IngressAccessLogs.LogGroupName'),
        outputPath: 'IngressAccessLogs.LogGroupName',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeChannel.IngressAccessLogs.LogGroupName', props);
    return resource.getResponseField('IngressAccessLogs.LogGroupName') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeHarvestJob {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeHarvestJobRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeHarvestJob.Arn'),
        outputPath: 'Arn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeHarvestJob.Arn', props);
    return resource.getResponseField('Arn') as unknown as string;
  }

  public get channelId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeHarvestJob.ChannelId'),
        outputPath: 'ChannelId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeHarvestJob.ChannelId', props);
    return resource.getResponseField('ChannelId') as unknown as string;
  }

  public get createdAt(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeHarvestJob.CreatedAt'),
        outputPath: 'CreatedAt',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeHarvestJob.CreatedAt', props);
    return resource.getResponseField('CreatedAt') as unknown as string;
  }

  public get endTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeHarvestJob.EndTime'),
        outputPath: 'EndTime',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeHarvestJob.EndTime', props);
    return resource.getResponseField('EndTime') as unknown as string;
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeHarvestJob.Id'),
        outputPath: 'Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeHarvestJob.Id', props);
    return resource.getResponseField('Id') as unknown as string;
  }

  public get originEndpointId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeHarvestJob.OriginEndpointId'),
        outputPath: 'OriginEndpointId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeHarvestJob.OriginEndpointId', props);
    return resource.getResponseField('OriginEndpointId') as unknown as string;
  }

  public get s3Destination(): MediaPackageResponsesDescribeHarvestJobS3Destination {
    return new MediaPackageResponsesDescribeHarvestJobS3Destination(this.__scope, this.__resources, this.__input);
  }

  public get startTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeHarvestJob.StartTime'),
        outputPath: 'StartTime',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeHarvestJob.StartTime', props);
    return resource.getResponseField('StartTime') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeHarvestJob.Status'),
        outputPath: 'Status',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeHarvestJob.Status', props);
    return resource.getResponseField('Status') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeHarvestJobS3Destination {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeHarvestJobRequest) {
  }

  public get bucketName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeHarvestJob.S3Destination.BucketName'),
        outputPath: 'S3Destination.BucketName',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeHarvestJob.S3Destination.BucketName', props);
    return resource.getResponseField('S3Destination.BucketName') as unknown as string;
  }

  public get manifestKey(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeHarvestJob.S3Destination.ManifestKey'),
        outputPath: 'S3Destination.ManifestKey',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeHarvestJob.S3Destination.ManifestKey', props);
    return resource.getResponseField('S3Destination.ManifestKey') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeHarvestJob',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeHarvestJob.S3Destination.RoleArn'),
        outputPath: 'S3Destination.RoleArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeHarvestJob.S3Destination.RoleArn', props);
    return resource.getResponseField('S3Destination.RoleArn') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeOriginEndpoint {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.Arn'),
        outputPath: 'Arn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.Arn', props);
    return resource.getResponseField('Arn') as unknown as string;
  }

  public get authorization(): MediaPackageResponsesDescribeOriginEndpointAuthorization {
    return new MediaPackageResponsesDescribeOriginEndpointAuthorization(this.__scope, this.__resources, this.__input);
  }

  public get channelId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.ChannelId'),
        outputPath: 'ChannelId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.ChannelId', props);
    return resource.getResponseField('ChannelId') as unknown as string;
  }

  public get cmafPackage(): MediaPackageResponsesDescribeOriginEndpointCmafPackage {
    return new MediaPackageResponsesDescribeOriginEndpointCmafPackage(this.__scope, this.__resources, this.__input);
  }

  public get dashPackage(): MediaPackageResponsesDescribeOriginEndpointDashPackage {
    return new MediaPackageResponsesDescribeOriginEndpointDashPackage(this.__scope, this.__resources, this.__input);
  }

  public get description(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.Description'),
        outputPath: 'Description',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.Description', props);
    return resource.getResponseField('Description') as unknown as string;
  }

  public get hlsPackage(): MediaPackageResponsesDescribeOriginEndpointHlsPackage {
    return new MediaPackageResponsesDescribeOriginEndpointHlsPackage(this.__scope, this.__resources, this.__input);
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.Id'),
        outputPath: 'Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.Id', props);
    return resource.getResponseField('Id') as unknown as string;
  }

  public get manifestName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.ManifestName'),
        outputPath: 'ManifestName',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.ManifestName', props);
    return resource.getResponseField('ManifestName') as unknown as string;
  }

  public get mssPackage(): MediaPackageResponsesDescribeOriginEndpointMssPackage {
    return new MediaPackageResponsesDescribeOriginEndpointMssPackage(this.__scope, this.__resources, this.__input);
  }

  public get origination(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.Origination'),
        outputPath: 'Origination',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.Origination', props);
    return resource.getResponseField('Origination') as unknown as string;
  }

  public get startoverWindowSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.StartoverWindowSeconds'),
        outputPath: 'StartoverWindowSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.StartoverWindowSeconds', props);
    return resource.getResponseField('StartoverWindowSeconds') as unknown as number;
  }

  public get tags(): Record<string, string> {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.Tags'),
        outputPath: 'Tags',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.Tags', props);
    return resource.getResponseField('Tags') as unknown as Record<string, string>;
  }

  public get timeDelaySeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.TimeDelaySeconds'),
        outputPath: 'TimeDelaySeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.TimeDelaySeconds', props);
    return resource.getResponseField('TimeDelaySeconds') as unknown as number;
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.Url'),
        outputPath: 'Url',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.Url', props);
    return resource.getResponseField('Url') as unknown as string;
  }

  public get whitelist(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.Whitelist'),
        outputPath: 'Whitelist',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.Whitelist', props);
    return resource.getResponseField('Whitelist') as unknown as string[];
  }

}

export class MediaPackageResponsesDescribeOriginEndpointAuthorization {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get cdnIdentifierSecret(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.Authorization.CdnIdentifierSecret'),
        outputPath: 'Authorization.CdnIdentifierSecret',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.Authorization.CdnIdentifierSecret', props);
    return resource.getResponseField('Authorization.CdnIdentifierSecret') as unknown as string;
  }

  public get secretsRoleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.Authorization.SecretsRoleArn'),
        outputPath: 'Authorization.SecretsRoleArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.Authorization.SecretsRoleArn', props);
    return resource.getResponseField('Authorization.SecretsRoleArn') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeOriginEndpointCmafPackage {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get encryption(): MediaPackageResponsesDescribeOriginEndpointCmafPackageEncryption {
    return new MediaPackageResponsesDescribeOriginEndpointCmafPackageEncryption(this.__scope, this.__resources, this.__input);
  }

  public get hlsManifests(): shapes.MediaPackageHlsManifest[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.CmafPackage.HlsManifests'),
        outputPath: 'CmafPackage.HlsManifests',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.CmafPackage.HlsManifests', props);
    return resource.getResponseField('CmafPackage.HlsManifests') as unknown as shapes.MediaPackageHlsManifest[];
  }

  public get segmentDurationSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.CmafPackage.SegmentDurationSeconds'),
        outputPath: 'CmafPackage.SegmentDurationSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.CmafPackage.SegmentDurationSeconds', props);
    return resource.getResponseField('CmafPackage.SegmentDurationSeconds') as unknown as number;
  }

  public get segmentPrefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.CmafPackage.SegmentPrefix'),
        outputPath: 'CmafPackage.SegmentPrefix',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.CmafPackage.SegmentPrefix', props);
    return resource.getResponseField('CmafPackage.SegmentPrefix') as unknown as string;
  }

  public get streamSelection(): MediaPackageResponsesDescribeOriginEndpointCmafPackageStreamSelection {
    return new MediaPackageResponsesDescribeOriginEndpointCmafPackageStreamSelection(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesDescribeOriginEndpointCmafPackageEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get keyRotationIntervalSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.CmafPackage.Encryption.KeyRotationIntervalSeconds'),
        outputPath: 'CmafPackage.Encryption.KeyRotationIntervalSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.CmafPackage.Encryption.KeyRotationIntervalSeconds', props);
    return resource.getResponseField('CmafPackage.Encryption.KeyRotationIntervalSeconds') as unknown as number;
  }

  public get spekeKeyProvider(): MediaPackageResponsesDescribeOriginEndpointCmafPackageEncryptionSpekeKeyProvider {
    return new MediaPackageResponsesDescribeOriginEndpointCmafPackageEncryptionSpekeKeyProvider(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesDescribeOriginEndpointCmafPackageEncryptionSpekeKeyProvider {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get certificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.CertificateArn'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.CertificateArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.CertificateArn', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.CertificateArn') as unknown as string;
  }

  public get resourceId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.ResourceId'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.ResourceId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.ResourceId', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.ResourceId') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.RoleArn'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.RoleArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.RoleArn', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.RoleArn') as unknown as string;
  }

  public get systemIds(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.SystemIds'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.SystemIds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.SystemIds', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.SystemIds') as unknown as string[];
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.Url'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.Url',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.Url', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.Url') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeOriginEndpointCmafPackageStreamSelection {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get maxVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.CmafPackage.StreamSelection.MaxVideoBitsPerSecond'),
        outputPath: 'CmafPackage.StreamSelection.MaxVideoBitsPerSecond',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.CmafPackage.StreamSelection.MaxVideoBitsPerSecond', props);
    return resource.getResponseField('CmafPackage.StreamSelection.MaxVideoBitsPerSecond') as unknown as number;
  }

  public get minVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.CmafPackage.StreamSelection.MinVideoBitsPerSecond'),
        outputPath: 'CmafPackage.StreamSelection.MinVideoBitsPerSecond',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.CmafPackage.StreamSelection.MinVideoBitsPerSecond', props);
    return resource.getResponseField('CmafPackage.StreamSelection.MinVideoBitsPerSecond') as unknown as number;
  }

  public get streamOrder(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.CmafPackage.StreamSelection.StreamOrder'),
        outputPath: 'CmafPackage.StreamSelection.StreamOrder',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.CmafPackage.StreamSelection.StreamOrder', props);
    return resource.getResponseField('CmafPackage.StreamSelection.StreamOrder') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeOriginEndpointDashPackage {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get adTriggers(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.AdTriggers'),
        outputPath: 'DashPackage.AdTriggers',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.AdTriggers', props);
    return resource.getResponseField('DashPackage.AdTriggers') as unknown as string[];
  }

  public get adsOnDeliveryRestrictions(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.AdsOnDeliveryRestrictions'),
        outputPath: 'DashPackage.AdsOnDeliveryRestrictions',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.AdsOnDeliveryRestrictions', props);
    return resource.getResponseField('DashPackage.AdsOnDeliveryRestrictions') as unknown as string;
  }

  public get encryption(): MediaPackageResponsesDescribeOriginEndpointDashPackageEncryption {
    return new MediaPackageResponsesDescribeOriginEndpointDashPackageEncryption(this.__scope, this.__resources, this.__input);
  }

  public get manifestLayout(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.ManifestLayout'),
        outputPath: 'DashPackage.ManifestLayout',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.ManifestLayout', props);
    return resource.getResponseField('DashPackage.ManifestLayout') as unknown as string;
  }

  public get manifestWindowSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.ManifestWindowSeconds'),
        outputPath: 'DashPackage.ManifestWindowSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.ManifestWindowSeconds', props);
    return resource.getResponseField('DashPackage.ManifestWindowSeconds') as unknown as number;
  }

  public get minBufferTimeSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.MinBufferTimeSeconds'),
        outputPath: 'DashPackage.MinBufferTimeSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.MinBufferTimeSeconds', props);
    return resource.getResponseField('DashPackage.MinBufferTimeSeconds') as unknown as number;
  }

  public get minUpdatePeriodSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.MinUpdatePeriodSeconds'),
        outputPath: 'DashPackage.MinUpdatePeriodSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.MinUpdatePeriodSeconds', props);
    return resource.getResponseField('DashPackage.MinUpdatePeriodSeconds') as unknown as number;
  }

  public get periodTriggers(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.PeriodTriggers'),
        outputPath: 'DashPackage.PeriodTriggers',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.PeriodTriggers', props);
    return resource.getResponseField('DashPackage.PeriodTriggers') as unknown as string[];
  }

  public get profile(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.Profile'),
        outputPath: 'DashPackage.Profile',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.Profile', props);
    return resource.getResponseField('DashPackage.Profile') as unknown as string;
  }

  public get segmentDurationSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.SegmentDurationSeconds'),
        outputPath: 'DashPackage.SegmentDurationSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.SegmentDurationSeconds', props);
    return resource.getResponseField('DashPackage.SegmentDurationSeconds') as unknown as number;
  }

  public get segmentTemplateFormat(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.SegmentTemplateFormat'),
        outputPath: 'DashPackage.SegmentTemplateFormat',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.SegmentTemplateFormat', props);
    return resource.getResponseField('DashPackage.SegmentTemplateFormat') as unknown as string;
  }

  public get streamSelection(): MediaPackageResponsesDescribeOriginEndpointDashPackageStreamSelection {
    return new MediaPackageResponsesDescribeOriginEndpointDashPackageStreamSelection(this.__scope, this.__resources, this.__input);
  }

  public get suggestedPresentationDelaySeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.SuggestedPresentationDelaySeconds'),
        outputPath: 'DashPackage.SuggestedPresentationDelaySeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.SuggestedPresentationDelaySeconds', props);
    return resource.getResponseField('DashPackage.SuggestedPresentationDelaySeconds') as unknown as number;
  }

  public get utcTiming(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.UtcTiming'),
        outputPath: 'DashPackage.UtcTiming',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.UtcTiming', props);
    return resource.getResponseField('DashPackage.UtcTiming') as unknown as string;
  }

  public get utcTimingUri(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.UtcTimingUri'),
        outputPath: 'DashPackage.UtcTimingUri',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.UtcTimingUri', props);
    return resource.getResponseField('DashPackage.UtcTimingUri') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeOriginEndpointDashPackageEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get keyRotationIntervalSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.Encryption.KeyRotationIntervalSeconds'),
        outputPath: 'DashPackage.Encryption.KeyRotationIntervalSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.Encryption.KeyRotationIntervalSeconds', props);
    return resource.getResponseField('DashPackage.Encryption.KeyRotationIntervalSeconds') as unknown as number;
  }

  public get spekeKeyProvider(): MediaPackageResponsesDescribeOriginEndpointDashPackageEncryptionSpekeKeyProvider {
    return new MediaPackageResponsesDescribeOriginEndpointDashPackageEncryptionSpekeKeyProvider(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesDescribeOriginEndpointDashPackageEncryptionSpekeKeyProvider {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get certificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.CertificateArn'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.CertificateArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.CertificateArn', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.CertificateArn') as unknown as string;
  }

  public get resourceId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.ResourceId'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.ResourceId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.ResourceId', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.ResourceId') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.RoleArn'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.RoleArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.RoleArn', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.RoleArn') as unknown as string;
  }

  public get systemIds(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.SystemIds'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.SystemIds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.SystemIds', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.SystemIds') as unknown as string[];
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.Url'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.Url',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.Url', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.Url') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeOriginEndpointDashPackageStreamSelection {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get maxVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.StreamSelection.MaxVideoBitsPerSecond'),
        outputPath: 'DashPackage.StreamSelection.MaxVideoBitsPerSecond',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.StreamSelection.MaxVideoBitsPerSecond', props);
    return resource.getResponseField('DashPackage.StreamSelection.MaxVideoBitsPerSecond') as unknown as number;
  }

  public get minVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.StreamSelection.MinVideoBitsPerSecond'),
        outputPath: 'DashPackage.StreamSelection.MinVideoBitsPerSecond',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.StreamSelection.MinVideoBitsPerSecond', props);
    return resource.getResponseField('DashPackage.StreamSelection.MinVideoBitsPerSecond') as unknown as number;
  }

  public get streamOrder(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.DashPackage.StreamSelection.StreamOrder'),
        outputPath: 'DashPackage.StreamSelection.StreamOrder',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.DashPackage.StreamSelection.StreamOrder', props);
    return resource.getResponseField('DashPackage.StreamSelection.StreamOrder') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeOriginEndpointHlsPackage {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get adMarkers(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.AdMarkers'),
        outputPath: 'HlsPackage.AdMarkers',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.AdMarkers', props);
    return resource.getResponseField('HlsPackage.AdMarkers') as unknown as string;
  }

  public get adTriggers(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.AdTriggers'),
        outputPath: 'HlsPackage.AdTriggers',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.AdTriggers', props);
    return resource.getResponseField('HlsPackage.AdTriggers') as unknown as string[];
  }

  public get adsOnDeliveryRestrictions(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.AdsOnDeliveryRestrictions'),
        outputPath: 'HlsPackage.AdsOnDeliveryRestrictions',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.AdsOnDeliveryRestrictions', props);
    return resource.getResponseField('HlsPackage.AdsOnDeliveryRestrictions') as unknown as string;
  }

  public get encryption(): MediaPackageResponsesDescribeOriginEndpointHlsPackageEncryption {
    return new MediaPackageResponsesDescribeOriginEndpointHlsPackageEncryption(this.__scope, this.__resources, this.__input);
  }

  public get includeIframeOnlyStream(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.IncludeIframeOnlyStream'),
        outputPath: 'HlsPackage.IncludeIframeOnlyStream',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.IncludeIframeOnlyStream', props);
    return resource.getResponseField('HlsPackage.IncludeIframeOnlyStream') as unknown as boolean;
  }

  public get playlistType(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.PlaylistType'),
        outputPath: 'HlsPackage.PlaylistType',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.PlaylistType', props);
    return resource.getResponseField('HlsPackage.PlaylistType') as unknown as string;
  }

  public get playlistWindowSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.PlaylistWindowSeconds'),
        outputPath: 'HlsPackage.PlaylistWindowSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.PlaylistWindowSeconds', props);
    return resource.getResponseField('HlsPackage.PlaylistWindowSeconds') as unknown as number;
  }

  public get programDateTimeIntervalSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.ProgramDateTimeIntervalSeconds'),
        outputPath: 'HlsPackage.ProgramDateTimeIntervalSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.ProgramDateTimeIntervalSeconds', props);
    return resource.getResponseField('HlsPackage.ProgramDateTimeIntervalSeconds') as unknown as number;
  }

  public get segmentDurationSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.SegmentDurationSeconds'),
        outputPath: 'HlsPackage.SegmentDurationSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.SegmentDurationSeconds', props);
    return resource.getResponseField('HlsPackage.SegmentDurationSeconds') as unknown as number;
  }

  public get streamSelection(): MediaPackageResponsesDescribeOriginEndpointHlsPackageStreamSelection {
    return new MediaPackageResponsesDescribeOriginEndpointHlsPackageStreamSelection(this.__scope, this.__resources, this.__input);
  }

  public get useAudioRenditionGroup(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.UseAudioRenditionGroup'),
        outputPath: 'HlsPackage.UseAudioRenditionGroup',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.UseAudioRenditionGroup', props);
    return resource.getResponseField('HlsPackage.UseAudioRenditionGroup') as unknown as boolean;
  }

}

export class MediaPackageResponsesDescribeOriginEndpointHlsPackageEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get constantInitializationVector(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.Encryption.ConstantInitializationVector'),
        outputPath: 'HlsPackage.Encryption.ConstantInitializationVector',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.Encryption.ConstantInitializationVector', props);
    return resource.getResponseField('HlsPackage.Encryption.ConstantInitializationVector') as unknown as string;
  }

  public get encryptionMethod(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.Encryption.EncryptionMethod'),
        outputPath: 'HlsPackage.Encryption.EncryptionMethod',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.Encryption.EncryptionMethod', props);
    return resource.getResponseField('HlsPackage.Encryption.EncryptionMethod') as unknown as string;
  }

  public get keyRotationIntervalSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.Encryption.KeyRotationIntervalSeconds'),
        outputPath: 'HlsPackage.Encryption.KeyRotationIntervalSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.Encryption.KeyRotationIntervalSeconds', props);
    return resource.getResponseField('HlsPackage.Encryption.KeyRotationIntervalSeconds') as unknown as number;
  }

  public get repeatExtXKey(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.Encryption.RepeatExtXKey'),
        outputPath: 'HlsPackage.Encryption.RepeatExtXKey',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.Encryption.RepeatExtXKey', props);
    return resource.getResponseField('HlsPackage.Encryption.RepeatExtXKey') as unknown as boolean;
  }

  public get spekeKeyProvider(): MediaPackageResponsesDescribeOriginEndpointHlsPackageEncryptionSpekeKeyProvider {
    return new MediaPackageResponsesDescribeOriginEndpointHlsPackageEncryptionSpekeKeyProvider(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesDescribeOriginEndpointHlsPackageEncryptionSpekeKeyProvider {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get certificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.CertificateArn'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.CertificateArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.CertificateArn', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.CertificateArn') as unknown as string;
  }

  public get resourceId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.ResourceId'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.ResourceId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.ResourceId', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.ResourceId') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.RoleArn'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.RoleArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.RoleArn', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.RoleArn') as unknown as string;
  }

  public get systemIds(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.SystemIds'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.SystemIds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.SystemIds', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.SystemIds') as unknown as string[];
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.Url'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.Url',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.Url', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.Url') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeOriginEndpointHlsPackageStreamSelection {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get maxVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.StreamSelection.MaxVideoBitsPerSecond'),
        outputPath: 'HlsPackage.StreamSelection.MaxVideoBitsPerSecond',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.StreamSelection.MaxVideoBitsPerSecond', props);
    return resource.getResponseField('HlsPackage.StreamSelection.MaxVideoBitsPerSecond') as unknown as number;
  }

  public get minVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.StreamSelection.MinVideoBitsPerSecond'),
        outputPath: 'HlsPackage.StreamSelection.MinVideoBitsPerSecond',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.StreamSelection.MinVideoBitsPerSecond', props);
    return resource.getResponseField('HlsPackage.StreamSelection.MinVideoBitsPerSecond') as unknown as number;
  }

  public get streamOrder(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.HlsPackage.StreamSelection.StreamOrder'),
        outputPath: 'HlsPackage.StreamSelection.StreamOrder',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.HlsPackage.StreamSelection.StreamOrder', props);
    return resource.getResponseField('HlsPackage.StreamSelection.StreamOrder') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeOriginEndpointMssPackage {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get encryption(): MediaPackageResponsesDescribeOriginEndpointMssPackageEncryption {
    return new MediaPackageResponsesDescribeOriginEndpointMssPackageEncryption(this.__scope, this.__resources, this.__input);
  }

  public get manifestWindowSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.MssPackage.ManifestWindowSeconds'),
        outputPath: 'MssPackage.ManifestWindowSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.MssPackage.ManifestWindowSeconds', props);
    return resource.getResponseField('MssPackage.ManifestWindowSeconds') as unknown as number;
  }

  public get segmentDurationSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.MssPackage.SegmentDurationSeconds'),
        outputPath: 'MssPackage.SegmentDurationSeconds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.MssPackage.SegmentDurationSeconds', props);
    return resource.getResponseField('MssPackage.SegmentDurationSeconds') as unknown as number;
  }

  public get streamSelection(): MediaPackageResponsesDescribeOriginEndpointMssPackageStreamSelection {
    return new MediaPackageResponsesDescribeOriginEndpointMssPackageStreamSelection(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesDescribeOriginEndpointMssPackageEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get spekeKeyProvider(): MediaPackageResponsesDescribeOriginEndpointMssPackageEncryptionSpekeKeyProvider {
    return new MediaPackageResponsesDescribeOriginEndpointMssPackageEncryptionSpekeKeyProvider(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesDescribeOriginEndpointMssPackageEncryptionSpekeKeyProvider {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get certificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.CertificateArn'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.CertificateArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.CertificateArn', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.CertificateArn') as unknown as string;
  }

  public get resourceId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.ResourceId'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.ResourceId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.ResourceId', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.ResourceId') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.RoleArn'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.RoleArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.RoleArn', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.RoleArn') as unknown as string;
  }

  public get systemIds(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.SystemIds'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.SystemIds',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.SystemIds', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.SystemIds') as unknown as string[];
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.Url'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.Url',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.Url', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.Url') as unknown as string;
  }

}

export class MediaPackageResponsesDescribeOriginEndpointMssPackageStreamSelection {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageDescribeOriginEndpointRequest) {
  }

  public get maxVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.MssPackage.StreamSelection.MaxVideoBitsPerSecond'),
        outputPath: 'MssPackage.StreamSelection.MaxVideoBitsPerSecond',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.MssPackage.StreamSelection.MaxVideoBitsPerSecond', props);
    return resource.getResponseField('MssPackage.StreamSelection.MaxVideoBitsPerSecond') as unknown as number;
  }

  public get minVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.MssPackage.StreamSelection.MinVideoBitsPerSecond'),
        outputPath: 'MssPackage.StreamSelection.MinVideoBitsPerSecond',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.MssPackage.StreamSelection.MinVideoBitsPerSecond', props);
    return resource.getResponseField('MssPackage.StreamSelection.MinVideoBitsPerSecond') as unknown as number;
  }

  public get streamOrder(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.DescribeOriginEndpoint.MssPackage.StreamSelection.StreamOrder'),
        outputPath: 'MssPackage.StreamSelection.StreamOrder',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeOriginEndpoint.MssPackage.StreamSelection.StreamOrder', props);
    return resource.getResponseField('MssPackage.StreamSelection.StreamOrder') as unknown as string;
  }

}

export class MediaPackageResponsesListChannels {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageListChannelsRequest) {
  }

  public get channels(): shapes.MediaPackageChannel[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listChannels',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ListChannels.Channels'),
        outputPath: 'Channels',
        parameters: {
          MaxResults: this.__input.maxResults,
          NextToken: this.__input.nextToken,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListChannels.Channels', props);
    return resource.getResponseField('Channels') as unknown as shapes.MediaPackageChannel[];
  }

  public get nextToken(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listChannels',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ListChannels.NextToken'),
        outputPath: 'NextToken',
        parameters: {
          MaxResults: this.__input.maxResults,
          NextToken: this.__input.nextToken,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListChannels.NextToken', props);
    return resource.getResponseField('NextToken') as unknown as string;
  }

}

export class MediaPackageResponsesListHarvestJobs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageListHarvestJobsRequest) {
  }

  public get harvestJobs(): shapes.MediaPackageHarvestJob[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listHarvestJobs',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ListHarvestJobs.HarvestJobs'),
        outputPath: 'HarvestJobs',
        parameters: {
          IncludeChannelId: this.__input.includeChannelId,
          IncludeStatus: this.__input.includeStatus,
          MaxResults: this.__input.maxResults,
          NextToken: this.__input.nextToken,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListHarvestJobs.HarvestJobs', props);
    return resource.getResponseField('HarvestJobs') as unknown as shapes.MediaPackageHarvestJob[];
  }

  public get nextToken(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listHarvestJobs',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ListHarvestJobs.NextToken'),
        outputPath: 'NextToken',
        parameters: {
          IncludeChannelId: this.__input.includeChannelId,
          IncludeStatus: this.__input.includeStatus,
          MaxResults: this.__input.maxResults,
          NextToken: this.__input.nextToken,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListHarvestJobs.NextToken', props);
    return resource.getResponseField('NextToken') as unknown as string;
  }

}

export class MediaPackageResponsesListOriginEndpoints {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageListOriginEndpointsRequest) {
  }

  public get nextToken(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listOriginEndpoints',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ListOriginEndpoints.NextToken'),
        outputPath: 'NextToken',
        parameters: {
          ChannelId: this.__input.channelId,
          MaxResults: this.__input.maxResults,
          NextToken: this.__input.nextToken,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListOriginEndpoints.NextToken', props);
    return resource.getResponseField('NextToken') as unknown as string;
  }

  public get originEndpoints(): shapes.MediaPackageOriginEndpoint[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listOriginEndpoints',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ListOriginEndpoints.OriginEndpoints'),
        outputPath: 'OriginEndpoints',
        parameters: {
          ChannelId: this.__input.channelId,
          MaxResults: this.__input.maxResults,
          NextToken: this.__input.nextToken,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListOriginEndpoints.OriginEndpoints', props);
    return resource.getResponseField('OriginEndpoints') as unknown as shapes.MediaPackageOriginEndpoint[];
  }

}

export class MediaPackageResponsesListTagsForResource {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageListTagsForResourceRequest) {
  }

  public get tags(): Record<string, string> {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listTagsForResource',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.ListTagsForResource.Tags'),
        outputPath: 'Tags',
        parameters: {
          ResourceArn: this.__input.resourceArn,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListTagsForResource.Tags', props);
    return resource.getResponseField('Tags') as unknown as Record<string, string>;
  }

}

export class MediaPackageResponsesRotateChannelCredentials {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageRotateChannelCredentialsRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateChannelCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateChannelCredentials.Arn'),
        outputPath: 'Arn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateChannelCredentials.Arn', props);
    return resource.getResponseField('Arn') as unknown as string;
  }

  public get description(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateChannelCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateChannelCredentials.Description'),
        outputPath: 'Description',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateChannelCredentials.Description', props);
    return resource.getResponseField('Description') as unknown as string;
  }

  public get egressAccessLogs(): MediaPackageResponsesRotateChannelCredentialsEgressAccessLogs {
    return new MediaPackageResponsesRotateChannelCredentialsEgressAccessLogs(this.__scope, this.__resources, this.__input);
  }

  public get hlsIngest(): MediaPackageResponsesRotateChannelCredentialsHlsIngest {
    return new MediaPackageResponsesRotateChannelCredentialsHlsIngest(this.__scope, this.__resources, this.__input);
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateChannelCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateChannelCredentials.Id'),
        outputPath: 'Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateChannelCredentials.Id', props);
    return resource.getResponseField('Id') as unknown as string;
  }

  public get ingressAccessLogs(): MediaPackageResponsesRotateChannelCredentialsIngressAccessLogs {
    return new MediaPackageResponsesRotateChannelCredentialsIngressAccessLogs(this.__scope, this.__resources, this.__input);
  }

  public get tags(): Record<string, string> {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateChannelCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateChannelCredentials.Tags'),
        outputPath: 'Tags',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateChannelCredentials.Tags', props);
    return resource.getResponseField('Tags') as unknown as Record<string, string>;
  }

}

export class MediaPackageResponsesRotateChannelCredentialsEgressAccessLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageRotateChannelCredentialsRequest) {
  }

  public get logGroupName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateChannelCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateChannelCredentials.EgressAccessLogs.LogGroupName'),
        outputPath: 'EgressAccessLogs.LogGroupName',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateChannelCredentials.EgressAccessLogs.LogGroupName', props);
    return resource.getResponseField('EgressAccessLogs.LogGroupName') as unknown as string;
  }

}

export class MediaPackageResponsesRotateChannelCredentialsHlsIngest {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageRotateChannelCredentialsRequest) {
  }

  public get ingestEndpoints(): shapes.MediaPackageIngestEndpoint[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateChannelCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateChannelCredentials.HlsIngest.IngestEndpoints'),
        outputPath: 'HlsIngest.IngestEndpoints',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateChannelCredentials.HlsIngest.IngestEndpoints', props);
    return resource.getResponseField('HlsIngest.IngestEndpoints') as unknown as shapes.MediaPackageIngestEndpoint[];
  }

}

export class MediaPackageResponsesRotateChannelCredentialsIngressAccessLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageRotateChannelCredentialsRequest) {
  }

  public get logGroupName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateChannelCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateChannelCredentials.IngressAccessLogs.LogGroupName'),
        outputPath: 'IngressAccessLogs.LogGroupName',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateChannelCredentials.IngressAccessLogs.LogGroupName', props);
    return resource.getResponseField('IngressAccessLogs.LogGroupName') as unknown as string;
  }

}

export class MediaPackageResponsesRotateIngestEndpointCredentials {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageRotateIngestEndpointCredentialsRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateIngestEndpointCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateIngestEndpointCredentials.Arn'),
        outputPath: 'Arn',
        parameters: {
          Id: this.__input.id,
          IngestEndpointId: this.__input.ingestEndpointId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateIngestEndpointCredentials.Arn', props);
    return resource.getResponseField('Arn') as unknown as string;
  }

  public get description(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateIngestEndpointCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateIngestEndpointCredentials.Description'),
        outputPath: 'Description',
        parameters: {
          Id: this.__input.id,
          IngestEndpointId: this.__input.ingestEndpointId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateIngestEndpointCredentials.Description', props);
    return resource.getResponseField('Description') as unknown as string;
  }

  public get egressAccessLogs(): MediaPackageResponsesRotateIngestEndpointCredentialsEgressAccessLogs {
    return new MediaPackageResponsesRotateIngestEndpointCredentialsEgressAccessLogs(this.__scope, this.__resources, this.__input);
  }

  public get hlsIngest(): MediaPackageResponsesRotateIngestEndpointCredentialsHlsIngest {
    return new MediaPackageResponsesRotateIngestEndpointCredentialsHlsIngest(this.__scope, this.__resources, this.__input);
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateIngestEndpointCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateIngestEndpointCredentials.Id'),
        outputPath: 'Id',
        parameters: {
          Id: this.__input.id,
          IngestEndpointId: this.__input.ingestEndpointId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateIngestEndpointCredentials.Id', props);
    return resource.getResponseField('Id') as unknown as string;
  }

  public get ingressAccessLogs(): MediaPackageResponsesRotateIngestEndpointCredentialsIngressAccessLogs {
    return new MediaPackageResponsesRotateIngestEndpointCredentialsIngressAccessLogs(this.__scope, this.__resources, this.__input);
  }

  public get tags(): Record<string, string> {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateIngestEndpointCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateIngestEndpointCredentials.Tags'),
        outputPath: 'Tags',
        parameters: {
          Id: this.__input.id,
          IngestEndpointId: this.__input.ingestEndpointId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateIngestEndpointCredentials.Tags', props);
    return resource.getResponseField('Tags') as unknown as Record<string, string>;
  }

}

export class MediaPackageResponsesRotateIngestEndpointCredentialsEgressAccessLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageRotateIngestEndpointCredentialsRequest) {
  }

  public get logGroupName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateIngestEndpointCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateIngestEndpointCredentials.EgressAccessLogs.LogGroupName'),
        outputPath: 'EgressAccessLogs.LogGroupName',
        parameters: {
          Id: this.__input.id,
          IngestEndpointId: this.__input.ingestEndpointId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateIngestEndpointCredentials.EgressAccessLogs.LogGroupName', props);
    return resource.getResponseField('EgressAccessLogs.LogGroupName') as unknown as string;
  }

}

export class MediaPackageResponsesRotateIngestEndpointCredentialsHlsIngest {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageRotateIngestEndpointCredentialsRequest) {
  }

  public get ingestEndpoints(): shapes.MediaPackageIngestEndpoint[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateIngestEndpointCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateIngestEndpointCredentials.HlsIngest.IngestEndpoints'),
        outputPath: 'HlsIngest.IngestEndpoints',
        parameters: {
          Id: this.__input.id,
          IngestEndpointId: this.__input.ingestEndpointId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateIngestEndpointCredentials.HlsIngest.IngestEndpoints', props);
    return resource.getResponseField('HlsIngest.IngestEndpoints') as unknown as shapes.MediaPackageIngestEndpoint[];
  }

}

export class MediaPackageResponsesRotateIngestEndpointCredentialsIngressAccessLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageRotateIngestEndpointCredentialsRequest) {
  }

  public get logGroupName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'rotateIngestEndpointCredentials',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.RotateIngestEndpointCredentials.IngressAccessLogs.LogGroupName'),
        outputPath: 'IngressAccessLogs.LogGroupName',
        parameters: {
          Id: this.__input.id,
          IngestEndpointId: this.__input.ingestEndpointId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'RotateIngestEndpointCredentials.IngressAccessLogs.LogGroupName', props);
    return resource.getResponseField('IngressAccessLogs.LogGroupName') as unknown as string;
  }

}

export class MediaPackageResponsesUpdateChannel {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateChannelRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateChannel.Arn'),
        outputPath: 'Arn',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateChannel.Arn', props);
    return resource.getResponseField('Arn') as unknown as string;
  }

  public get description(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateChannel.Description'),
        outputPath: 'Description',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateChannel.Description', props);
    return resource.getResponseField('Description') as unknown as string;
  }

  public get egressAccessLogs(): MediaPackageResponsesUpdateChannelEgressAccessLogs {
    return new MediaPackageResponsesUpdateChannelEgressAccessLogs(this.__scope, this.__resources, this.__input);
  }

  public get hlsIngest(): MediaPackageResponsesUpdateChannelHlsIngest {
    return new MediaPackageResponsesUpdateChannelHlsIngest(this.__scope, this.__resources, this.__input);
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateChannel.Id'),
        outputPath: 'Id',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateChannel.Id', props);
    return resource.getResponseField('Id') as unknown as string;
  }

  public get ingressAccessLogs(): MediaPackageResponsesUpdateChannelIngressAccessLogs {
    return new MediaPackageResponsesUpdateChannelIngressAccessLogs(this.__scope, this.__resources, this.__input);
  }

  public get tags(): Record<string, string> {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateChannel.Tags'),
        outputPath: 'Tags',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateChannel.Tags', props);
    return resource.getResponseField('Tags') as unknown as Record<string, string>;
  }

}

export class MediaPackageResponsesUpdateChannelEgressAccessLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateChannelRequest) {
  }

  public get logGroupName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateChannel.EgressAccessLogs.LogGroupName'),
        outputPath: 'EgressAccessLogs.LogGroupName',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateChannel.EgressAccessLogs.LogGroupName', props);
    return resource.getResponseField('EgressAccessLogs.LogGroupName') as unknown as string;
  }

}

export class MediaPackageResponsesUpdateChannelHlsIngest {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateChannelRequest) {
  }

  public get ingestEndpoints(): shapes.MediaPackageIngestEndpoint[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateChannel.HlsIngest.IngestEndpoints'),
        outputPath: 'HlsIngest.IngestEndpoints',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateChannel.HlsIngest.IngestEndpoints', props);
    return resource.getResponseField('HlsIngest.IngestEndpoints') as unknown as shapes.MediaPackageIngestEndpoint[];
  }

}

export class MediaPackageResponsesUpdateChannelIngressAccessLogs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateChannelRequest) {
  }

  public get logGroupName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateChannel',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateChannel.IngressAccessLogs.LogGroupName'),
        outputPath: 'IngressAccessLogs.LogGroupName',
        parameters: {
          Description: this.__input.description,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateChannel.IngressAccessLogs.LogGroupName', props);
    return resource.getResponseField('IngressAccessLogs.LogGroupName') as unknown as string;
  }

}

export class MediaPackageResponsesUpdateOriginEndpoint {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.Arn'),
        outputPath: 'Arn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.Arn', props);
    return resource.getResponseField('Arn') as unknown as string;
  }

  public get authorization(): MediaPackageResponsesUpdateOriginEndpointAuthorization {
    return new MediaPackageResponsesUpdateOriginEndpointAuthorization(this.__scope, this.__resources, this.__input);
  }

  public get channelId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.ChannelId'),
        outputPath: 'ChannelId',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.ChannelId', props);
    return resource.getResponseField('ChannelId') as unknown as string;
  }

  public get cmafPackage(): MediaPackageResponsesUpdateOriginEndpointCmafPackage {
    return new MediaPackageResponsesUpdateOriginEndpointCmafPackage(this.__scope, this.__resources, this.__input);
  }

  public get dashPackage(): MediaPackageResponsesUpdateOriginEndpointDashPackage {
    return new MediaPackageResponsesUpdateOriginEndpointDashPackage(this.__scope, this.__resources, this.__input);
  }

  public get description(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.Description'),
        outputPath: 'Description',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.Description', props);
    return resource.getResponseField('Description') as unknown as string;
  }

  public get hlsPackage(): MediaPackageResponsesUpdateOriginEndpointHlsPackage {
    return new MediaPackageResponsesUpdateOriginEndpointHlsPackage(this.__scope, this.__resources, this.__input);
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.Id'),
        outputPath: 'Id',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.Id', props);
    return resource.getResponseField('Id') as unknown as string;
  }

  public get manifestName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.ManifestName'),
        outputPath: 'ManifestName',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.ManifestName', props);
    return resource.getResponseField('ManifestName') as unknown as string;
  }

  public get mssPackage(): MediaPackageResponsesUpdateOriginEndpointMssPackage {
    return new MediaPackageResponsesUpdateOriginEndpointMssPackage(this.__scope, this.__resources, this.__input);
  }

  public get origination(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.Origination'),
        outputPath: 'Origination',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.Origination', props);
    return resource.getResponseField('Origination') as unknown as string;
  }

  public get startoverWindowSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.StartoverWindowSeconds'),
        outputPath: 'StartoverWindowSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.StartoverWindowSeconds', props);
    return resource.getResponseField('StartoverWindowSeconds') as unknown as number;
  }

  public get tags(): Record<string, string> {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.Tags'),
        outputPath: 'Tags',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.Tags', props);
    return resource.getResponseField('Tags') as unknown as Record<string, string>;
  }

  public get timeDelaySeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.TimeDelaySeconds'),
        outputPath: 'TimeDelaySeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.TimeDelaySeconds', props);
    return resource.getResponseField('TimeDelaySeconds') as unknown as number;
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.Url'),
        outputPath: 'Url',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.Url', props);
    return resource.getResponseField('Url') as unknown as string;
  }

  public get whitelist(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.Whitelist'),
        outputPath: 'Whitelist',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.Whitelist', props);
    return resource.getResponseField('Whitelist') as unknown as string[];
  }

}

export class MediaPackageResponsesUpdateOriginEndpointAuthorization {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get cdnIdentifierSecret(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.Authorization.CdnIdentifierSecret'),
        outputPath: 'Authorization.CdnIdentifierSecret',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.Authorization.CdnIdentifierSecret', props);
    return resource.getResponseField('Authorization.CdnIdentifierSecret') as unknown as string;
  }

  public get secretsRoleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.Authorization.SecretsRoleArn'),
        outputPath: 'Authorization.SecretsRoleArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.Authorization.SecretsRoleArn', props);
    return resource.getResponseField('Authorization.SecretsRoleArn') as unknown as string;
  }

}

export class MediaPackageResponsesUpdateOriginEndpointCmafPackage {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get encryption(): MediaPackageResponsesUpdateOriginEndpointCmafPackageEncryption {
    return new MediaPackageResponsesUpdateOriginEndpointCmafPackageEncryption(this.__scope, this.__resources, this.__input);
  }

  public get hlsManifests(): shapes.MediaPackageHlsManifest[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.CmafPackage.HlsManifests'),
        outputPath: 'CmafPackage.HlsManifests',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.CmafPackage.HlsManifests', props);
    return resource.getResponseField('CmafPackage.HlsManifests') as unknown as shapes.MediaPackageHlsManifest[];
  }

  public get segmentDurationSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.CmafPackage.SegmentDurationSeconds'),
        outputPath: 'CmafPackage.SegmentDurationSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.CmafPackage.SegmentDurationSeconds', props);
    return resource.getResponseField('CmafPackage.SegmentDurationSeconds') as unknown as number;
  }

  public get segmentPrefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.CmafPackage.SegmentPrefix'),
        outputPath: 'CmafPackage.SegmentPrefix',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.CmafPackage.SegmentPrefix', props);
    return resource.getResponseField('CmafPackage.SegmentPrefix') as unknown as string;
  }

  public get streamSelection(): MediaPackageResponsesUpdateOriginEndpointCmafPackageStreamSelection {
    return new MediaPackageResponsesUpdateOriginEndpointCmafPackageStreamSelection(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesUpdateOriginEndpointCmafPackageEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get keyRotationIntervalSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.CmafPackage.Encryption.KeyRotationIntervalSeconds'),
        outputPath: 'CmafPackage.Encryption.KeyRotationIntervalSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.CmafPackage.Encryption.KeyRotationIntervalSeconds', props);
    return resource.getResponseField('CmafPackage.Encryption.KeyRotationIntervalSeconds') as unknown as number;
  }

  public get spekeKeyProvider(): MediaPackageResponsesUpdateOriginEndpointCmafPackageEncryptionSpekeKeyProvider {
    return new MediaPackageResponsesUpdateOriginEndpointCmafPackageEncryptionSpekeKeyProvider(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesUpdateOriginEndpointCmafPackageEncryptionSpekeKeyProvider {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get certificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.CertificateArn'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.CertificateArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.CertificateArn', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.CertificateArn') as unknown as string;
  }

  public get resourceId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.ResourceId'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.ResourceId',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.ResourceId', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.ResourceId') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.RoleArn'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.RoleArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.RoleArn', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.RoleArn') as unknown as string;
  }

  public get systemIds(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.SystemIds'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.SystemIds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.SystemIds', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.SystemIds') as unknown as string[];
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.Url'),
        outputPath: 'CmafPackage.Encryption.SpekeKeyProvider.Url',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.CmafPackage.Encryption.SpekeKeyProvider.Url', props);
    return resource.getResponseField('CmafPackage.Encryption.SpekeKeyProvider.Url') as unknown as string;
  }

}

export class MediaPackageResponsesUpdateOriginEndpointCmafPackageStreamSelection {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get maxVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.CmafPackage.StreamSelection.MaxVideoBitsPerSecond'),
        outputPath: 'CmafPackage.StreamSelection.MaxVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.CmafPackage.StreamSelection.MaxVideoBitsPerSecond', props);
    return resource.getResponseField('CmafPackage.StreamSelection.MaxVideoBitsPerSecond') as unknown as number;
  }

  public get minVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.CmafPackage.StreamSelection.MinVideoBitsPerSecond'),
        outputPath: 'CmafPackage.StreamSelection.MinVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.CmafPackage.StreamSelection.MinVideoBitsPerSecond', props);
    return resource.getResponseField('CmafPackage.StreamSelection.MinVideoBitsPerSecond') as unknown as number;
  }

  public get streamOrder(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.CmafPackage.StreamSelection.StreamOrder'),
        outputPath: 'CmafPackage.StreamSelection.StreamOrder',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.CmafPackage.StreamSelection.StreamOrder', props);
    return resource.getResponseField('CmafPackage.StreamSelection.StreamOrder') as unknown as string;
  }

}

export class MediaPackageResponsesUpdateOriginEndpointDashPackage {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get adTriggers(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.AdTriggers'),
        outputPath: 'DashPackage.AdTriggers',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.AdTriggers', props);
    return resource.getResponseField('DashPackage.AdTriggers') as unknown as string[];
  }

  public get adsOnDeliveryRestrictions(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.AdsOnDeliveryRestrictions'),
        outputPath: 'DashPackage.AdsOnDeliveryRestrictions',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.AdsOnDeliveryRestrictions', props);
    return resource.getResponseField('DashPackage.AdsOnDeliveryRestrictions') as unknown as string;
  }

  public get encryption(): MediaPackageResponsesUpdateOriginEndpointDashPackageEncryption {
    return new MediaPackageResponsesUpdateOriginEndpointDashPackageEncryption(this.__scope, this.__resources, this.__input);
  }

  public get manifestLayout(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.ManifestLayout'),
        outputPath: 'DashPackage.ManifestLayout',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.ManifestLayout', props);
    return resource.getResponseField('DashPackage.ManifestLayout') as unknown as string;
  }

  public get manifestWindowSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.ManifestWindowSeconds'),
        outputPath: 'DashPackage.ManifestWindowSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.ManifestWindowSeconds', props);
    return resource.getResponseField('DashPackage.ManifestWindowSeconds') as unknown as number;
  }

  public get minBufferTimeSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.MinBufferTimeSeconds'),
        outputPath: 'DashPackage.MinBufferTimeSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.MinBufferTimeSeconds', props);
    return resource.getResponseField('DashPackage.MinBufferTimeSeconds') as unknown as number;
  }

  public get minUpdatePeriodSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.MinUpdatePeriodSeconds'),
        outputPath: 'DashPackage.MinUpdatePeriodSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.MinUpdatePeriodSeconds', props);
    return resource.getResponseField('DashPackage.MinUpdatePeriodSeconds') as unknown as number;
  }

  public get periodTriggers(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.PeriodTriggers'),
        outputPath: 'DashPackage.PeriodTriggers',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.PeriodTriggers', props);
    return resource.getResponseField('DashPackage.PeriodTriggers') as unknown as string[];
  }

  public get profile(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.Profile'),
        outputPath: 'DashPackage.Profile',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.Profile', props);
    return resource.getResponseField('DashPackage.Profile') as unknown as string;
  }

  public get segmentDurationSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.SegmentDurationSeconds'),
        outputPath: 'DashPackage.SegmentDurationSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.SegmentDurationSeconds', props);
    return resource.getResponseField('DashPackage.SegmentDurationSeconds') as unknown as number;
  }

  public get segmentTemplateFormat(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.SegmentTemplateFormat'),
        outputPath: 'DashPackage.SegmentTemplateFormat',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.SegmentTemplateFormat', props);
    return resource.getResponseField('DashPackage.SegmentTemplateFormat') as unknown as string;
  }

  public get streamSelection(): MediaPackageResponsesUpdateOriginEndpointDashPackageStreamSelection {
    return new MediaPackageResponsesUpdateOriginEndpointDashPackageStreamSelection(this.__scope, this.__resources, this.__input);
  }

  public get suggestedPresentationDelaySeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.SuggestedPresentationDelaySeconds'),
        outputPath: 'DashPackage.SuggestedPresentationDelaySeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.SuggestedPresentationDelaySeconds', props);
    return resource.getResponseField('DashPackage.SuggestedPresentationDelaySeconds') as unknown as number;
  }

  public get utcTiming(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.UtcTiming'),
        outputPath: 'DashPackage.UtcTiming',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.UtcTiming', props);
    return resource.getResponseField('DashPackage.UtcTiming') as unknown as string;
  }

  public get utcTimingUri(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.UtcTimingUri'),
        outputPath: 'DashPackage.UtcTimingUri',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.UtcTimingUri', props);
    return resource.getResponseField('DashPackage.UtcTimingUri') as unknown as string;
  }

}

export class MediaPackageResponsesUpdateOriginEndpointDashPackageEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get keyRotationIntervalSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.Encryption.KeyRotationIntervalSeconds'),
        outputPath: 'DashPackage.Encryption.KeyRotationIntervalSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.Encryption.KeyRotationIntervalSeconds', props);
    return resource.getResponseField('DashPackage.Encryption.KeyRotationIntervalSeconds') as unknown as number;
  }

  public get spekeKeyProvider(): MediaPackageResponsesUpdateOriginEndpointDashPackageEncryptionSpekeKeyProvider {
    return new MediaPackageResponsesUpdateOriginEndpointDashPackageEncryptionSpekeKeyProvider(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesUpdateOriginEndpointDashPackageEncryptionSpekeKeyProvider {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get certificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.CertificateArn'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.CertificateArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.CertificateArn', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.CertificateArn') as unknown as string;
  }

  public get resourceId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.ResourceId'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.ResourceId',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.ResourceId', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.ResourceId') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.RoleArn'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.RoleArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.RoleArn', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.RoleArn') as unknown as string;
  }

  public get systemIds(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.SystemIds'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.SystemIds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.SystemIds', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.SystemIds') as unknown as string[];
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.Url'),
        outputPath: 'DashPackage.Encryption.SpekeKeyProvider.Url',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.Encryption.SpekeKeyProvider.Url', props);
    return resource.getResponseField('DashPackage.Encryption.SpekeKeyProvider.Url') as unknown as string;
  }

}

export class MediaPackageResponsesUpdateOriginEndpointDashPackageStreamSelection {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get maxVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.StreamSelection.MaxVideoBitsPerSecond'),
        outputPath: 'DashPackage.StreamSelection.MaxVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.StreamSelection.MaxVideoBitsPerSecond', props);
    return resource.getResponseField('DashPackage.StreamSelection.MaxVideoBitsPerSecond') as unknown as number;
  }

  public get minVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.StreamSelection.MinVideoBitsPerSecond'),
        outputPath: 'DashPackage.StreamSelection.MinVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.StreamSelection.MinVideoBitsPerSecond', props);
    return resource.getResponseField('DashPackage.StreamSelection.MinVideoBitsPerSecond') as unknown as number;
  }

  public get streamOrder(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.DashPackage.StreamSelection.StreamOrder'),
        outputPath: 'DashPackage.StreamSelection.StreamOrder',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.DashPackage.StreamSelection.StreamOrder', props);
    return resource.getResponseField('DashPackage.StreamSelection.StreamOrder') as unknown as string;
  }

}

export class MediaPackageResponsesUpdateOriginEndpointHlsPackage {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get adMarkers(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.AdMarkers'),
        outputPath: 'HlsPackage.AdMarkers',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.AdMarkers', props);
    return resource.getResponseField('HlsPackage.AdMarkers') as unknown as string;
  }

  public get adTriggers(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.AdTriggers'),
        outputPath: 'HlsPackage.AdTriggers',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.AdTriggers', props);
    return resource.getResponseField('HlsPackage.AdTriggers') as unknown as string[];
  }

  public get adsOnDeliveryRestrictions(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.AdsOnDeliveryRestrictions'),
        outputPath: 'HlsPackage.AdsOnDeliveryRestrictions',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.AdsOnDeliveryRestrictions', props);
    return resource.getResponseField('HlsPackage.AdsOnDeliveryRestrictions') as unknown as string;
  }

  public get encryption(): MediaPackageResponsesUpdateOriginEndpointHlsPackageEncryption {
    return new MediaPackageResponsesUpdateOriginEndpointHlsPackageEncryption(this.__scope, this.__resources, this.__input);
  }

  public get includeIframeOnlyStream(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.IncludeIframeOnlyStream'),
        outputPath: 'HlsPackage.IncludeIframeOnlyStream',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.IncludeIframeOnlyStream', props);
    return resource.getResponseField('HlsPackage.IncludeIframeOnlyStream') as unknown as boolean;
  }

  public get playlistType(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.PlaylistType'),
        outputPath: 'HlsPackage.PlaylistType',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.PlaylistType', props);
    return resource.getResponseField('HlsPackage.PlaylistType') as unknown as string;
  }

  public get playlistWindowSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.PlaylistWindowSeconds'),
        outputPath: 'HlsPackage.PlaylistWindowSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.PlaylistWindowSeconds', props);
    return resource.getResponseField('HlsPackage.PlaylistWindowSeconds') as unknown as number;
  }

  public get programDateTimeIntervalSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.ProgramDateTimeIntervalSeconds'),
        outputPath: 'HlsPackage.ProgramDateTimeIntervalSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.ProgramDateTimeIntervalSeconds', props);
    return resource.getResponseField('HlsPackage.ProgramDateTimeIntervalSeconds') as unknown as number;
  }

  public get segmentDurationSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.SegmentDurationSeconds'),
        outputPath: 'HlsPackage.SegmentDurationSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.SegmentDurationSeconds', props);
    return resource.getResponseField('HlsPackage.SegmentDurationSeconds') as unknown as number;
  }

  public get streamSelection(): MediaPackageResponsesUpdateOriginEndpointHlsPackageStreamSelection {
    return new MediaPackageResponsesUpdateOriginEndpointHlsPackageStreamSelection(this.__scope, this.__resources, this.__input);
  }

  public get useAudioRenditionGroup(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.UseAudioRenditionGroup'),
        outputPath: 'HlsPackage.UseAudioRenditionGroup',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.UseAudioRenditionGroup', props);
    return resource.getResponseField('HlsPackage.UseAudioRenditionGroup') as unknown as boolean;
  }

}

export class MediaPackageResponsesUpdateOriginEndpointHlsPackageEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get constantInitializationVector(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.Encryption.ConstantInitializationVector'),
        outputPath: 'HlsPackage.Encryption.ConstantInitializationVector',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.Encryption.ConstantInitializationVector', props);
    return resource.getResponseField('HlsPackage.Encryption.ConstantInitializationVector') as unknown as string;
  }

  public get encryptionMethod(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.Encryption.EncryptionMethod'),
        outputPath: 'HlsPackage.Encryption.EncryptionMethod',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.Encryption.EncryptionMethod', props);
    return resource.getResponseField('HlsPackage.Encryption.EncryptionMethod') as unknown as string;
  }

  public get keyRotationIntervalSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.Encryption.KeyRotationIntervalSeconds'),
        outputPath: 'HlsPackage.Encryption.KeyRotationIntervalSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.Encryption.KeyRotationIntervalSeconds', props);
    return resource.getResponseField('HlsPackage.Encryption.KeyRotationIntervalSeconds') as unknown as number;
  }

  public get repeatExtXKey(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.Encryption.RepeatExtXKey'),
        outputPath: 'HlsPackage.Encryption.RepeatExtXKey',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.Encryption.RepeatExtXKey', props);
    return resource.getResponseField('HlsPackage.Encryption.RepeatExtXKey') as unknown as boolean;
  }

  public get spekeKeyProvider(): MediaPackageResponsesUpdateOriginEndpointHlsPackageEncryptionSpekeKeyProvider {
    return new MediaPackageResponsesUpdateOriginEndpointHlsPackageEncryptionSpekeKeyProvider(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesUpdateOriginEndpointHlsPackageEncryptionSpekeKeyProvider {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get certificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.CertificateArn'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.CertificateArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.CertificateArn', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.CertificateArn') as unknown as string;
  }

  public get resourceId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.ResourceId'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.ResourceId',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.ResourceId', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.ResourceId') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.RoleArn'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.RoleArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.RoleArn', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.RoleArn') as unknown as string;
  }

  public get systemIds(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.SystemIds'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.SystemIds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.SystemIds', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.SystemIds') as unknown as string[];
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.Url'),
        outputPath: 'HlsPackage.Encryption.SpekeKeyProvider.Url',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.Encryption.SpekeKeyProvider.Url', props);
    return resource.getResponseField('HlsPackage.Encryption.SpekeKeyProvider.Url') as unknown as string;
  }

}

export class MediaPackageResponsesUpdateOriginEndpointHlsPackageStreamSelection {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get maxVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.StreamSelection.MaxVideoBitsPerSecond'),
        outputPath: 'HlsPackage.StreamSelection.MaxVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.StreamSelection.MaxVideoBitsPerSecond', props);
    return resource.getResponseField('HlsPackage.StreamSelection.MaxVideoBitsPerSecond') as unknown as number;
  }

  public get minVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.StreamSelection.MinVideoBitsPerSecond'),
        outputPath: 'HlsPackage.StreamSelection.MinVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.StreamSelection.MinVideoBitsPerSecond', props);
    return resource.getResponseField('HlsPackage.StreamSelection.MinVideoBitsPerSecond') as unknown as number;
  }

  public get streamOrder(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.HlsPackage.StreamSelection.StreamOrder'),
        outputPath: 'HlsPackage.StreamSelection.StreamOrder',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.HlsPackage.StreamSelection.StreamOrder', props);
    return resource.getResponseField('HlsPackage.StreamSelection.StreamOrder') as unknown as string;
  }

}

export class MediaPackageResponsesUpdateOriginEndpointMssPackage {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get encryption(): MediaPackageResponsesUpdateOriginEndpointMssPackageEncryption {
    return new MediaPackageResponsesUpdateOriginEndpointMssPackageEncryption(this.__scope, this.__resources, this.__input);
  }

  public get manifestWindowSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.MssPackage.ManifestWindowSeconds'),
        outputPath: 'MssPackage.ManifestWindowSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.MssPackage.ManifestWindowSeconds', props);
    return resource.getResponseField('MssPackage.ManifestWindowSeconds') as unknown as number;
  }

  public get segmentDurationSeconds(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.MssPackage.SegmentDurationSeconds'),
        outputPath: 'MssPackage.SegmentDurationSeconds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.MssPackage.SegmentDurationSeconds', props);
    return resource.getResponseField('MssPackage.SegmentDurationSeconds') as unknown as number;
  }

  public get streamSelection(): MediaPackageResponsesUpdateOriginEndpointMssPackageStreamSelection {
    return new MediaPackageResponsesUpdateOriginEndpointMssPackageStreamSelection(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesUpdateOriginEndpointMssPackageEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get spekeKeyProvider(): MediaPackageResponsesUpdateOriginEndpointMssPackageEncryptionSpekeKeyProvider {
    return new MediaPackageResponsesUpdateOriginEndpointMssPackageEncryptionSpekeKeyProvider(this.__scope, this.__resources, this.__input);
  }

}

export class MediaPackageResponsesUpdateOriginEndpointMssPackageEncryptionSpekeKeyProvider {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get certificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.CertificateArn'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.CertificateArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.CertificateArn', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.CertificateArn') as unknown as string;
  }

  public get resourceId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.ResourceId'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.ResourceId',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.ResourceId', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.ResourceId') as unknown as string;
  }

  public get roleArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.RoleArn'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.RoleArn',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.RoleArn', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.RoleArn') as unknown as string;
  }

  public get systemIds(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.SystemIds'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.SystemIds',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.SystemIds', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.SystemIds') as unknown as string[];
  }

  public get url(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.Url'),
        outputPath: 'MssPackage.Encryption.SpekeKeyProvider.Url',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.MssPackage.Encryption.SpekeKeyProvider.Url', props);
    return resource.getResponseField('MssPackage.Encryption.SpekeKeyProvider.Url') as unknown as string;
  }

}

export class MediaPackageResponsesUpdateOriginEndpointMssPackageStreamSelection {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.MediaPackageUpdateOriginEndpointRequest) {
  }

  public get maxVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.MssPackage.StreamSelection.MaxVideoBitsPerSecond'),
        outputPath: 'MssPackage.StreamSelection.MaxVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.MssPackage.StreamSelection.MaxVideoBitsPerSecond', props);
    return resource.getResponseField('MssPackage.StreamSelection.MaxVideoBitsPerSecond') as unknown as number;
  }

  public get minVideoBitsPerSecond(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.MssPackage.StreamSelection.MinVideoBitsPerSecond'),
        outputPath: 'MssPackage.StreamSelection.MinVideoBitsPerSecond',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.MssPackage.StreamSelection.MinVideoBitsPerSecond', props);
    return resource.getResponseField('MssPackage.StreamSelection.MinVideoBitsPerSecond') as unknown as number;
  }

  public get streamOrder(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginEndpoint',
        service: 'MediaPackage',
        physicalResourceId: cr.PhysicalResourceId.of('MediaPackage.UpdateOriginEndpoint.MssPackage.StreamSelection.StreamOrder'),
        outputPath: 'MssPackage.StreamSelection.StreamOrder',
        parameters: {
          Authorization: {
            CdnIdentifierSecret: this.__input.authorization?.cdnIdentifierSecret,
            SecretsRoleArn: this.__input.authorization?.secretsRoleArn,
          },
          CmafPackage: {
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.cmafPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.cmafPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.cmafPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.cmafPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.cmafPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            HlsManifests: this.__input.cmafPackage?.hlsManifests,
            SegmentDurationSeconds: this.__input.cmafPackage?.segmentDurationSeconds,
            SegmentPrefix: this.__input.cmafPackage?.segmentPrefix,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.cmafPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.cmafPackage?.streamSelection?.streamOrder,
            },
          },
          DashPackage: {
            AdTriggers: this.__input.dashPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.dashPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              KeyRotationIntervalSeconds: this.__input.dashPackage?.encryption?.keyRotationIntervalSeconds,
              SpekeKeyProvider: {
                CertificateArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.dashPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.dashPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.dashPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.dashPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestLayout: this.__input.dashPackage?.manifestLayout,
            ManifestWindowSeconds: this.__input.dashPackage?.manifestWindowSeconds,
            MinBufferTimeSeconds: this.__input.dashPackage?.minBufferTimeSeconds,
            MinUpdatePeriodSeconds: this.__input.dashPackage?.minUpdatePeriodSeconds,
            PeriodTriggers: this.__input.dashPackage?.periodTriggers,
            Profile: this.__input.dashPackage?.profile,
            SegmentDurationSeconds: this.__input.dashPackage?.segmentDurationSeconds,
            SegmentTemplateFormat: this.__input.dashPackage?.segmentTemplateFormat,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.dashPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.dashPackage?.streamSelection?.streamOrder,
            },
            SuggestedPresentationDelaySeconds: this.__input.dashPackage?.suggestedPresentationDelaySeconds,
            UtcTiming: this.__input.dashPackage?.utcTiming,
            UtcTimingUri: this.__input.dashPackage?.utcTimingUri,
          },
          Description: this.__input.description,
          HlsPackage: {
            AdMarkers: this.__input.hlsPackage?.adMarkers,
            AdTriggers: this.__input.hlsPackage?.adTriggers,
            AdsOnDeliveryRestrictions: this.__input.hlsPackage?.adsOnDeliveryRestrictions,
            Encryption: {
              ConstantInitializationVector: this.__input.hlsPackage?.encryption?.constantInitializationVector,
              EncryptionMethod: this.__input.hlsPackage?.encryption?.encryptionMethod,
              KeyRotationIntervalSeconds: this.__input.hlsPackage?.encryption?.keyRotationIntervalSeconds,
              RepeatExtXKey: this.__input.hlsPackage?.encryption?.repeatExtXKey,
              SpekeKeyProvider: {
                CertificateArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.hlsPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.hlsPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.hlsPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.hlsPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            IncludeIframeOnlyStream: this.__input.hlsPackage?.includeIframeOnlyStream,
            PlaylistType: this.__input.hlsPackage?.playlistType,
            PlaylistWindowSeconds: this.__input.hlsPackage?.playlistWindowSeconds,
            ProgramDateTimeIntervalSeconds: this.__input.hlsPackage?.programDateTimeIntervalSeconds,
            SegmentDurationSeconds: this.__input.hlsPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.hlsPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.hlsPackage?.streamSelection?.streamOrder,
            },
            UseAudioRenditionGroup: this.__input.hlsPackage?.useAudioRenditionGroup,
          },
          Id: this.__input.id,
          ManifestName: this.__input.manifestName,
          MssPackage: {
            Encryption: {
              SpekeKeyProvider: {
                CertificateArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.certificateArn,
                ResourceId: this.__input.mssPackage?.encryption?.spekeKeyProvider.resourceId,
                RoleArn: this.__input.mssPackage?.encryption?.spekeKeyProvider.roleArn,
                SystemIds: this.__input.mssPackage?.encryption?.spekeKeyProvider.systemIds,
                Url: this.__input.mssPackage?.encryption?.spekeKeyProvider.url,
              },
            },
            ManifestWindowSeconds: this.__input.mssPackage?.manifestWindowSeconds,
            SegmentDurationSeconds: this.__input.mssPackage?.segmentDurationSeconds,
            StreamSelection: {
              MaxVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.maxVideoBitsPerSecond,
              MinVideoBitsPerSecond: this.__input.mssPackage?.streamSelection?.minVideoBitsPerSecond,
              StreamOrder: this.__input.mssPackage?.streamSelection?.streamOrder,
            },
          },
          Origination: this.__input.origination,
          StartoverWindowSeconds: this.__input.startoverWindowSeconds,
          TimeDelaySeconds: this.__input.timeDelaySeconds,
          Whitelist: this.__input.whitelist,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginEndpoint.MssPackage.StreamSelection.StreamOrder', props);
    return resource.getResponseField('MssPackage.StreamSelection.StreamOrder') as unknown as string;
  }

}

