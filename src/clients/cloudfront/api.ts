import * as cdk from '@aws-cdk/core';
import * as cr from '@aws-cdk/custom-resources';
import * as shapes from './shapes';

export class CloudFrontClient extends cdk.Construct {

  constructor(scope: cdk.Construct, id: string, private readonly __resources: string[]) {
    super(scope, id);
  }

  public associateAlias(input: shapes.CloudFrontAssociateAliasRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'associateAlias',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.AssociateAlias'),
        parameters: {
          TargetDistributionId: input.targetDistributionId,
          Alias: input.alias,
        },
      },
    };
    new cr.AwsCustomResource(this, 'AssociateAlias', props);
  }

  public createCachePolicy(input: shapes.CloudFrontCreateCachePolicyRequest): CloudFrontResponsesCreateCachePolicy {
    return new CloudFrontResponsesCreateCachePolicy(this, this.__resources, input);
  }

  public createCloudFrontOriginAccessIdentity(input: shapes.CloudFrontCreateCloudFrontOriginAccessIdentityRequest): CloudFrontResponsesCreateCloudFrontOriginAccessIdentity {
    return new CloudFrontResponsesCreateCloudFrontOriginAccessIdentity(this, this.__resources, input);
  }

  public createDistribution(input: shapes.CloudFrontCreateDistributionRequest): CloudFrontResponsesCreateDistribution {
    return new CloudFrontResponsesCreateDistribution(this, this.__resources, input);
  }

  public createDistributionWithTags(input: shapes.CloudFrontCreateDistributionWithTagsRequest): CloudFrontResponsesCreateDistributionWithTags {
    return new CloudFrontResponsesCreateDistributionWithTags(this, this.__resources, input);
  }

  public createFieldLevelEncryptionConfig(input: shapes.CloudFrontCreateFieldLevelEncryptionConfigRequest): CloudFrontResponsesCreateFieldLevelEncryptionConfig {
    return new CloudFrontResponsesCreateFieldLevelEncryptionConfig(this, this.__resources, input);
  }

  public createFieldLevelEncryptionProfile(input: shapes.CloudFrontCreateFieldLevelEncryptionProfileRequest): CloudFrontResponsesCreateFieldLevelEncryptionProfile {
    return new CloudFrontResponsesCreateFieldLevelEncryptionProfile(this, this.__resources, input);
  }

  public createFunction(input: shapes.CloudFrontCreateFunctionRequest): CloudFrontResponsesCreateFunction {
    return new CloudFrontResponsesCreateFunction(this, this.__resources, input);
  }

  public createInvalidation(input: shapes.CloudFrontCreateInvalidationRequest): CloudFrontResponsesCreateInvalidation {
    return new CloudFrontResponsesCreateInvalidation(this, this.__resources, input);
  }

  public createKeyGroup(input: shapes.CloudFrontCreateKeyGroupRequest): CloudFrontResponsesCreateKeyGroup {
    return new CloudFrontResponsesCreateKeyGroup(this, this.__resources, input);
  }

  public createMonitoringSubscription(input: shapes.CloudFrontCreateMonitoringSubscriptionRequest): CloudFrontResponsesCreateMonitoringSubscription {
    return new CloudFrontResponsesCreateMonitoringSubscription(this, this.__resources, input);
  }

  public createOriginRequestPolicy(input: shapes.CloudFrontCreateOriginRequestPolicyRequest): CloudFrontResponsesCreateOriginRequestPolicy {
    return new CloudFrontResponsesCreateOriginRequestPolicy(this, this.__resources, input);
  }

  public createPublicKey(input: shapes.CloudFrontCreatePublicKeyRequest): CloudFrontResponsesCreatePublicKey {
    return new CloudFrontResponsesCreatePublicKey(this, this.__resources, input);
  }

  public createRealtimeLogConfig(input: shapes.CloudFrontCreateRealtimeLogConfigRequest): CloudFrontResponsesCreateRealtimeLogConfig {
    return new CloudFrontResponsesCreateRealtimeLogConfig(this, this.__resources, input);
  }

  public createStreamingDistribution(input: shapes.CloudFrontCreateStreamingDistributionRequest): CloudFrontResponsesCreateStreamingDistribution {
    return new CloudFrontResponsesCreateStreamingDistribution(this, this.__resources, input);
  }

  public createStreamingDistributionWithTags(input: shapes.CloudFrontCreateStreamingDistributionWithTagsRequest): CloudFrontResponsesCreateStreamingDistributionWithTags {
    return new CloudFrontResponsesCreateStreamingDistributionWithTags(this, this.__resources, input);
  }

  public deleteCachePolicy(input: shapes.CloudFrontDeleteCachePolicyRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DeleteCachePolicy'),
        parameters: {
          Id: input.id,
          IfMatch: input.ifMatch,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteCachePolicy', props);
  }

  public deleteCloudFrontOriginAccessIdentity(input: shapes.CloudFrontDeleteCloudFrontOriginAccessIdentityRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DeleteCloudFrontOriginAccessIdentity'),
        parameters: {
          Id: input.id,
          IfMatch: input.ifMatch,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteCloudFrontOriginAccessIdentity', props);
  }

  public deleteDistribution(input: shapes.CloudFrontDeleteDistributionRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DeleteDistribution'),
        parameters: {
          Id: input.id,
          IfMatch: input.ifMatch,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteDistribution', props);
  }

  public deleteFieldLevelEncryptionConfig(input: shapes.CloudFrontDeleteFieldLevelEncryptionConfigRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DeleteFieldLevelEncryptionConfig'),
        parameters: {
          Id: input.id,
          IfMatch: input.ifMatch,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteFieldLevelEncryptionConfig', props);
  }

  public deleteFieldLevelEncryptionProfile(input: shapes.CloudFrontDeleteFieldLevelEncryptionProfileRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DeleteFieldLevelEncryptionProfile'),
        parameters: {
          Id: input.id,
          IfMatch: input.ifMatch,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteFieldLevelEncryptionProfile', props);
  }

  public deleteFunction(input: shapes.CloudFrontDeleteFunctionRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DeleteFunction'),
        parameters: {
          Name: input.name,
          IfMatch: input.ifMatch,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteFunction', props);
  }

  public deleteKeyGroup(input: shapes.CloudFrontDeleteKeyGroupRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DeleteKeyGroup'),
        parameters: {
          Id: input.id,
          IfMatch: input.ifMatch,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteKeyGroup', props);
  }

  public deleteMonitoringSubscription(input: shapes.CloudFrontDeleteMonitoringSubscriptionRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteMonitoringSubscription',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DeleteMonitoringSubscription'),
        parameters: {
          DistributionId: input.distributionId,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteMonitoringSubscription', props);
  }

  public deleteOriginRequestPolicy(input: shapes.CloudFrontDeleteOriginRequestPolicyRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DeleteOriginRequestPolicy'),
        parameters: {
          Id: input.id,
          IfMatch: input.ifMatch,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteOriginRequestPolicy', props);
  }

  public deletePublicKey(input: shapes.CloudFrontDeletePublicKeyRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deletePublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DeletePublicKey'),
        parameters: {
          Id: input.id,
          IfMatch: input.ifMatch,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeletePublicKey', props);
  }

  public deleteRealtimeLogConfig(input: shapes.CloudFrontDeleteRealtimeLogConfigRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DeleteRealtimeLogConfig'),
        parameters: {
          Name: input.name,
          ARN: input.arn,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteRealtimeLogConfig', props);
  }

  public deleteStreamingDistribution(input: shapes.CloudFrontDeleteStreamingDistributionRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'deleteStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DeleteStreamingDistribution'),
        parameters: {
          Id: input.id,
          IfMatch: input.ifMatch,
        },
      },
    };
    new cr.AwsCustomResource(this, 'DeleteStreamingDistribution', props);
  }

  public describeFunction(input: shapes.CloudFrontDescribeFunctionRequest): CloudFrontResponsesDescribeFunction {
    return new CloudFrontResponsesDescribeFunction(this, this.__resources, input);
  }

  public fetchCachePolicy(input: shapes.CloudFrontGetCachePolicyRequest): CloudFrontResponsesFetchCachePolicy {
    return new CloudFrontResponsesFetchCachePolicy(this, this.__resources, input);
  }

  public fetchCachePolicyConfig(input: shapes.CloudFrontGetCachePolicyConfigRequest): CloudFrontResponsesFetchCachePolicyConfig {
    return new CloudFrontResponsesFetchCachePolicyConfig(this, this.__resources, input);
  }

  public fetchCloudFrontOriginAccessIdentity(input: shapes.CloudFrontGetCloudFrontOriginAccessIdentityRequest): CloudFrontResponsesFetchCloudFrontOriginAccessIdentity {
    return new CloudFrontResponsesFetchCloudFrontOriginAccessIdentity(this, this.__resources, input);
  }

  public fetchCloudFrontOriginAccessIdentityConfig(input: shapes.CloudFrontGetCloudFrontOriginAccessIdentityConfigRequest): CloudFrontResponsesFetchCloudFrontOriginAccessIdentityConfig {
    return new CloudFrontResponsesFetchCloudFrontOriginAccessIdentityConfig(this, this.__resources, input);
  }

  public fetchDistribution(input: shapes.CloudFrontGetDistributionRequest): CloudFrontResponsesFetchDistribution {
    return new CloudFrontResponsesFetchDistribution(this, this.__resources, input);
  }

  public fetchDistributionConfig(input: shapes.CloudFrontGetDistributionConfigRequest): CloudFrontResponsesFetchDistributionConfig {
    return new CloudFrontResponsesFetchDistributionConfig(this, this.__resources, input);
  }

  public fetchFieldLevelEncryption(input: shapes.CloudFrontGetFieldLevelEncryptionRequest): CloudFrontResponsesFetchFieldLevelEncryption {
    return new CloudFrontResponsesFetchFieldLevelEncryption(this, this.__resources, input);
  }

  public fetchFieldLevelEncryptionConfig(input: shapes.CloudFrontGetFieldLevelEncryptionConfigRequest): CloudFrontResponsesFetchFieldLevelEncryptionConfig {
    return new CloudFrontResponsesFetchFieldLevelEncryptionConfig(this, this.__resources, input);
  }

  public fetchFieldLevelEncryptionProfile(input: shapes.CloudFrontGetFieldLevelEncryptionProfileRequest): CloudFrontResponsesFetchFieldLevelEncryptionProfile {
    return new CloudFrontResponsesFetchFieldLevelEncryptionProfile(this, this.__resources, input);
  }

  public fetchFieldLevelEncryptionProfileConfig(input: shapes.CloudFrontGetFieldLevelEncryptionProfileConfigRequest): CloudFrontResponsesFetchFieldLevelEncryptionProfileConfig {
    return new CloudFrontResponsesFetchFieldLevelEncryptionProfileConfig(this, this.__resources, input);
  }

  public fetchFunction(input: shapes.CloudFrontGetFunctionRequest): CloudFrontResponsesFetchFunction {
    return new CloudFrontResponsesFetchFunction(this, this.__resources, input);
  }

  public fetchInvalidation(input: shapes.CloudFrontGetInvalidationRequest): CloudFrontResponsesFetchInvalidation {
    return new CloudFrontResponsesFetchInvalidation(this, this.__resources, input);
  }

  public fetchKeyGroup(input: shapes.CloudFrontGetKeyGroupRequest): CloudFrontResponsesFetchKeyGroup {
    return new CloudFrontResponsesFetchKeyGroup(this, this.__resources, input);
  }

  public fetchKeyGroupConfig(input: shapes.CloudFrontGetKeyGroupConfigRequest): CloudFrontResponsesFetchKeyGroupConfig {
    return new CloudFrontResponsesFetchKeyGroupConfig(this, this.__resources, input);
  }

  public fetchMonitoringSubscription(input: shapes.CloudFrontGetMonitoringSubscriptionRequest): CloudFrontResponsesFetchMonitoringSubscription {
    return new CloudFrontResponsesFetchMonitoringSubscription(this, this.__resources, input);
  }

  public fetchOriginRequestPolicy(input: shapes.CloudFrontGetOriginRequestPolicyRequest): CloudFrontResponsesFetchOriginRequestPolicy {
    return new CloudFrontResponsesFetchOriginRequestPolicy(this, this.__resources, input);
  }

  public fetchOriginRequestPolicyConfig(input: shapes.CloudFrontGetOriginRequestPolicyConfigRequest): CloudFrontResponsesFetchOriginRequestPolicyConfig {
    return new CloudFrontResponsesFetchOriginRequestPolicyConfig(this, this.__resources, input);
  }

  public fetchPublicKey(input: shapes.CloudFrontGetPublicKeyRequest): CloudFrontResponsesFetchPublicKey {
    return new CloudFrontResponsesFetchPublicKey(this, this.__resources, input);
  }

  public fetchPublicKeyConfig(input: shapes.CloudFrontGetPublicKeyConfigRequest): CloudFrontResponsesFetchPublicKeyConfig {
    return new CloudFrontResponsesFetchPublicKeyConfig(this, this.__resources, input);
  }

  public fetchRealtimeLogConfig(input: shapes.CloudFrontGetRealtimeLogConfigRequest): CloudFrontResponsesFetchRealtimeLogConfig {
    return new CloudFrontResponsesFetchRealtimeLogConfig(this, this.__resources, input);
  }

  public fetchStreamingDistribution(input: shapes.CloudFrontGetStreamingDistributionRequest): CloudFrontResponsesFetchStreamingDistribution {
    return new CloudFrontResponsesFetchStreamingDistribution(this, this.__resources, input);
  }

  public fetchStreamingDistributionConfig(input: shapes.CloudFrontGetStreamingDistributionConfigRequest): CloudFrontResponsesFetchStreamingDistributionConfig {
    return new CloudFrontResponsesFetchStreamingDistributionConfig(this, this.__resources, input);
  }

  public listCachePolicies(input: shapes.CloudFrontListCachePoliciesRequest): CloudFrontResponsesListCachePolicies {
    return new CloudFrontResponsesListCachePolicies(this, this.__resources, input);
  }

  public listCloudFrontOriginAccessIdentities(input: shapes.CloudFrontListCloudFrontOriginAccessIdentitiesRequest): CloudFrontResponsesListCloudFrontOriginAccessIdentities {
    return new CloudFrontResponsesListCloudFrontOriginAccessIdentities(this, this.__resources, input);
  }

  public listConflictingAliases(input: shapes.CloudFrontListConflictingAliasesRequest): CloudFrontResponsesListConflictingAliases {
    return new CloudFrontResponsesListConflictingAliases(this, this.__resources, input);
  }

  public listDistributions(input: shapes.CloudFrontListDistributionsRequest): CloudFrontResponsesListDistributions {
    return new CloudFrontResponsesListDistributions(this, this.__resources, input);
  }

  public listDistributionsByCachePolicyId(input: shapes.CloudFrontListDistributionsByCachePolicyIdRequest): CloudFrontResponsesListDistributionsByCachePolicyId {
    return new CloudFrontResponsesListDistributionsByCachePolicyId(this, this.__resources, input);
  }

  public listDistributionsByKeyGroup(input: shapes.CloudFrontListDistributionsByKeyGroupRequest): CloudFrontResponsesListDistributionsByKeyGroup {
    return new CloudFrontResponsesListDistributionsByKeyGroup(this, this.__resources, input);
  }

  public listDistributionsByOriginRequestPolicyId(input: shapes.CloudFrontListDistributionsByOriginRequestPolicyIdRequest): CloudFrontResponsesListDistributionsByOriginRequestPolicyId {
    return new CloudFrontResponsesListDistributionsByOriginRequestPolicyId(this, this.__resources, input);
  }

  public listDistributionsByRealtimeLogConfig(input: shapes.CloudFrontListDistributionsByRealtimeLogConfigRequest): CloudFrontResponsesListDistributionsByRealtimeLogConfig {
    return new CloudFrontResponsesListDistributionsByRealtimeLogConfig(this, this.__resources, input);
  }

  public listDistributionsByWebAclId(input: shapes.CloudFrontListDistributionsByWebAclIdRequest): CloudFrontResponsesListDistributionsByWebAclId {
    return new CloudFrontResponsesListDistributionsByWebAclId(this, this.__resources, input);
  }

  public listFieldLevelEncryptionConfigs(input: shapes.CloudFrontListFieldLevelEncryptionConfigsRequest): CloudFrontResponsesListFieldLevelEncryptionConfigs {
    return new CloudFrontResponsesListFieldLevelEncryptionConfigs(this, this.__resources, input);
  }

  public listFieldLevelEncryptionProfiles(input: shapes.CloudFrontListFieldLevelEncryptionProfilesRequest): CloudFrontResponsesListFieldLevelEncryptionProfiles {
    return new CloudFrontResponsesListFieldLevelEncryptionProfiles(this, this.__resources, input);
  }

  public listFunctions(input: shapes.CloudFrontListFunctionsRequest): CloudFrontResponsesListFunctions {
    return new CloudFrontResponsesListFunctions(this, this.__resources, input);
  }

  public listInvalidations(input: shapes.CloudFrontListInvalidationsRequest): CloudFrontResponsesListInvalidations {
    return new CloudFrontResponsesListInvalidations(this, this.__resources, input);
  }

  public listKeyGroups(input: shapes.CloudFrontListKeyGroupsRequest): CloudFrontResponsesListKeyGroups {
    return new CloudFrontResponsesListKeyGroups(this, this.__resources, input);
  }

  public listOriginRequestPolicies(input: shapes.CloudFrontListOriginRequestPoliciesRequest): CloudFrontResponsesListOriginRequestPolicies {
    return new CloudFrontResponsesListOriginRequestPolicies(this, this.__resources, input);
  }

  public listPublicKeys(input: shapes.CloudFrontListPublicKeysRequest): CloudFrontResponsesListPublicKeys {
    return new CloudFrontResponsesListPublicKeys(this, this.__resources, input);
  }

  public listRealtimeLogConfigs(input: shapes.CloudFrontListRealtimeLogConfigsRequest): CloudFrontResponsesListRealtimeLogConfigs {
    return new CloudFrontResponsesListRealtimeLogConfigs(this, this.__resources, input);
  }

  public listStreamingDistributions(input: shapes.CloudFrontListStreamingDistributionsRequest): CloudFrontResponsesListStreamingDistributions {
    return new CloudFrontResponsesListStreamingDistributions(this, this.__resources, input);
  }

  public listTagsForResource(input: shapes.CloudFrontListTagsForResourceRequest): CloudFrontResponsesListTagsForResource {
    return new CloudFrontResponsesListTagsForResource(this, this.__resources, input);
  }

  public publishFunction(input: shapes.CloudFrontPublishFunctionRequest): CloudFrontResponsesPublishFunction {
    return new CloudFrontResponsesPublishFunction(this, this.__resources, input);
  }

  public tagResource(input: shapes.CloudFrontTagResourceRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'tagResource',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TagResource'),
        parameters: {
          Resource: input.resource,
          Tags: {
            Items: input.tags.items,
          },
        },
      },
    };
    new cr.AwsCustomResource(this, 'TagResource', props);
  }

  public testFunction(input: shapes.CloudFrontTestFunctionRequest): CloudFrontResponsesTestFunction {
    return new CloudFrontResponsesTestFunction(this, this.__resources, input);
  }

  public untagResource(input: shapes.CloudFrontUntagResourceRequest): void {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'untagResource',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UntagResource'),
        parameters: {
          Resource: input.resource,
          TagKeys: {
            Items: input.tagKeys.items,
          },
        },
      },
    };
    new cr.AwsCustomResource(this, 'UntagResource', props);
  }

  public updateCachePolicy(input: shapes.CloudFrontUpdateCachePolicyRequest): CloudFrontResponsesUpdateCachePolicy {
    return new CloudFrontResponsesUpdateCachePolicy(this, this.__resources, input);
  }

  public updateCloudFrontOriginAccessIdentity(input: shapes.CloudFrontUpdateCloudFrontOriginAccessIdentityRequest): CloudFrontResponsesUpdateCloudFrontOriginAccessIdentity {
    return new CloudFrontResponsesUpdateCloudFrontOriginAccessIdentity(this, this.__resources, input);
  }

  public updateDistribution(input: shapes.CloudFrontUpdateDistributionRequest): CloudFrontResponsesUpdateDistribution {
    return new CloudFrontResponsesUpdateDistribution(this, this.__resources, input);
  }

  public updateFieldLevelEncryptionConfig(input: shapes.CloudFrontUpdateFieldLevelEncryptionConfigRequest): CloudFrontResponsesUpdateFieldLevelEncryptionConfig {
    return new CloudFrontResponsesUpdateFieldLevelEncryptionConfig(this, this.__resources, input);
  }

  public updateFieldLevelEncryptionProfile(input: shapes.CloudFrontUpdateFieldLevelEncryptionProfileRequest): CloudFrontResponsesUpdateFieldLevelEncryptionProfile {
    return new CloudFrontResponsesUpdateFieldLevelEncryptionProfile(this, this.__resources, input);
  }

  public updateFunction(input: shapes.CloudFrontUpdateFunctionRequest): CloudFrontResponsesUpdateFunction {
    return new CloudFrontResponsesUpdateFunction(this, this.__resources, input);
  }

  public updateKeyGroup(input: shapes.CloudFrontUpdateKeyGroupRequest): CloudFrontResponsesUpdateKeyGroup {
    return new CloudFrontResponsesUpdateKeyGroup(this, this.__resources, input);
  }

  public updateOriginRequestPolicy(input: shapes.CloudFrontUpdateOriginRequestPolicyRequest): CloudFrontResponsesUpdateOriginRequestPolicy {
    return new CloudFrontResponsesUpdateOriginRequestPolicy(this, this.__resources, input);
  }

  public updatePublicKey(input: shapes.CloudFrontUpdatePublicKeyRequest): CloudFrontResponsesUpdatePublicKey {
    return new CloudFrontResponsesUpdatePublicKey(this, this.__resources, input);
  }

  public updateRealtimeLogConfig(input: shapes.CloudFrontUpdateRealtimeLogConfigRequest): CloudFrontResponsesUpdateRealtimeLogConfig {
    return new CloudFrontResponsesUpdateRealtimeLogConfig(this, this.__resources, input);
  }

  public updateStreamingDistribution(input: shapes.CloudFrontUpdateStreamingDistributionRequest): CloudFrontResponsesUpdateStreamingDistribution {
    return new CloudFrontResponsesUpdateStreamingDistribution(this, this.__resources, input);
  }

}

export class CloudFrontResponsesCreateCachePolicy {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCachePolicyRequest) {
  }

  public get cachePolicy(): CloudFrontResponsesCreateCachePolicyCachePolicy {
    return new CloudFrontResponsesCreateCachePolicyCachePolicy(this.__scope, this.__resources, this.__input);
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.Location'),
        outputPath: 'Location',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.ETag'),
        outputPath: 'ETag',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesCreateCachePolicyCachePolicy {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCachePolicyRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.Id'),
        outputPath: 'CachePolicy.Id',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.Id', props);
    return resource.getResponseField('CachePolicy.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.LastModifiedTime'),
        outputPath: 'CachePolicy.LastModifiedTime',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.LastModifiedTime', props);
    return resource.getResponseField('CachePolicy.LastModifiedTime') as unknown as string;
  }

  public get cachePolicyConfig(): CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfig {
    return new CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCachePolicyRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.Comment'),
        outputPath: 'CachePolicy.CachePolicyConfig.Comment',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.Comment', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.Comment') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.Name'),
        outputPath: 'CachePolicy.CachePolicyConfig.Name',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.Name', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.Name') as unknown as string;
  }

  public get defaultTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.DefaultTTL'),
        outputPath: 'CachePolicy.CachePolicyConfig.DefaultTTL',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.DefaultTTL', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.DefaultTTL') as unknown as number;
  }

  public get maxTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.MaxTTL'),
        outputPath: 'CachePolicy.CachePolicyConfig.MaxTTL',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.MaxTTL', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.MaxTTL') as unknown as number;
  }

  public get minTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.MinTTL'),
        outputPath: 'CachePolicy.CachePolicyConfig.MinTTL',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.MinTTL', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.MinTTL') as unknown as number;
  }

  public get parametersInCacheKeyAndForwardedToOrigin(): CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin {
    return new CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCachePolicyRequest) {
  }

  public get enableAcceptEncodingGzip(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip') as unknown as boolean;
  }

  public get enableAcceptEncodingBrotli(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli') as unknown as boolean;
  }

  public get headersConfig(): CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig {
    return new CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig(this.__scope, this.__resources, this.__input);
  }

  public get cookiesConfig(): CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig {
    return new CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig(this.__scope, this.__resources, this.__input);
  }

  public get queryStringsConfig(): CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {
    return new CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCachePolicyRequest) {
  }

  public get headerBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior') as unknown as string;
  }

  public get headers(): CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders {
    return new CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCachePolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCachePolicyRequest) {
  }

  public get cookieBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior') as unknown as string;
  }

  public get cookies(): CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies {
    return new CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCachePolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCachePolicyRequest) {
  }

  public get queryStringBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior') as unknown as string;
  }

  public get queryStrings(): CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings {
    return new CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCachePolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateCloudFrontOriginAccessIdentity {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCloudFrontOriginAccessIdentityRequest) {
  }

  public get cloudFrontOriginAccessIdentity(): CloudFrontResponsesCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentity {
    return new CloudFrontResponsesCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentity(this.__scope, this.__resources, this.__input);
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCloudFrontOriginAccessIdentity.Location'),
        outputPath: 'Location',
        parameters: {
          CloudFrontOriginAccessIdentityConfig: {
            CallerReference: this.__input.cloudFrontOriginAccessIdentityConfig.callerReference,
            Comment: this.__input.cloudFrontOriginAccessIdentityConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCloudFrontOriginAccessIdentity.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCloudFrontOriginAccessIdentity.ETag'),
        outputPath: 'ETag',
        parameters: {
          CloudFrontOriginAccessIdentityConfig: {
            CallerReference: this.__input.cloudFrontOriginAccessIdentityConfig.callerReference,
            Comment: this.__input.cloudFrontOriginAccessIdentityConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCloudFrontOriginAccessIdentity.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentity {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCloudFrontOriginAccessIdentityRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.Id'),
        outputPath: 'CloudFrontOriginAccessIdentity.Id',
        parameters: {
          CloudFrontOriginAccessIdentityConfig: {
            CallerReference: this.__input.cloudFrontOriginAccessIdentityConfig.callerReference,
            Comment: this.__input.cloudFrontOriginAccessIdentityConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.Id', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentity.Id') as unknown as string;
  }

  public get s3CanonicalUserId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.S3CanonicalUserId'),
        outputPath: 'CloudFrontOriginAccessIdentity.S3CanonicalUserId',
        parameters: {
          CloudFrontOriginAccessIdentityConfig: {
            CallerReference: this.__input.cloudFrontOriginAccessIdentityConfig.callerReference,
            Comment: this.__input.cloudFrontOriginAccessIdentityConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.S3CanonicalUserId', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentity.S3CanonicalUserId') as unknown as string;
  }

  public get cloudFrontOriginAccessIdentityConfig(): CloudFrontResponsesCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig {
    return new CloudFrontResponsesCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateCloudFrontOriginAccessIdentityRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.CallerReference'),
        outputPath: 'CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.CallerReference',
        parameters: {
          CloudFrontOriginAccessIdentityConfig: {
            CallerReference: this.__input.cloudFrontOriginAccessIdentityConfig.callerReference,
            Comment: this.__input.cloudFrontOriginAccessIdentityConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.CallerReference', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.CallerReference') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.Comment'),
        outputPath: 'CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.Comment',
        parameters: {
          CloudFrontOriginAccessIdentityConfig: {
            CallerReference: this.__input.cloudFrontOriginAccessIdentityConfig.callerReference,
            Comment: this.__input.cloudFrontOriginAccessIdentityConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.Comment', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.Comment') as unknown as string;
  }

}

export class CloudFrontResponsesCreateDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get distribution(): CloudFrontResponsesCreateDistributionDistribution {
    return new CloudFrontResponsesCreateDistributionDistribution(this.__scope, this.__resources, this.__input);
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Location'),
        outputPath: 'Location',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.ETag'),
        outputPath: 'ETag',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesCreateDistributionDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.Id'),
        outputPath: 'Distribution.Id',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.Id', props);
    return resource.getResponseField('Distribution.Id') as unknown as string;
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.ARN'),
        outputPath: 'Distribution.ARN',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.ARN', props);
    return resource.getResponseField('Distribution.ARN') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.Status'),
        outputPath: 'Distribution.Status',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.Status', props);
    return resource.getResponseField('Distribution.Status') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.LastModifiedTime'),
        outputPath: 'Distribution.LastModifiedTime',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.LastModifiedTime', props);
    return resource.getResponseField('Distribution.LastModifiedTime') as unknown as string;
  }

  public get inProgressInvalidationBatches(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.InProgressInvalidationBatches'),
        outputPath: 'Distribution.InProgressInvalidationBatches',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.InProgressInvalidationBatches', props);
    return resource.getResponseField('Distribution.InProgressInvalidationBatches') as unknown as number;
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DomainName'),
        outputPath: 'Distribution.DomainName',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DomainName', props);
    return resource.getResponseField('Distribution.DomainName') as unknown as string;
  }

  public get activeTrustedSigners(): CloudFrontResponsesCreateDistributionDistributionActiveTrustedSigners {
    return new CloudFrontResponsesCreateDistributionDistributionActiveTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get activeTrustedKeyGroups(): CloudFrontResponsesCreateDistributionDistributionActiveTrustedKeyGroups {
    return new CloudFrontResponsesCreateDistributionDistributionActiveTrustedKeyGroups(this.__scope, this.__resources, this.__input);
  }

  public get distributionConfig(): CloudFrontResponsesCreateDistributionDistributionDistributionConfig {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfig(this.__scope, this.__resources, this.__input);
  }

  public get aliasIcpRecordals(): shapes.CloudFrontAliasIcpRecordal[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.AliasICPRecordals'),
        outputPath: 'Distribution.AliasICPRecordals',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.AliasICPRecordals', props);
    return resource.getResponseField('Distribution.AliasICPRecordals') as unknown as shapes.CloudFrontAliasIcpRecordal[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionActiveTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.ActiveTrustedSigners.Enabled'),
        outputPath: 'Distribution.ActiveTrustedSigners.Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.ActiveTrustedSigners.Enabled', props);
    return resource.getResponseField('Distribution.ActiveTrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.ActiveTrustedSigners.Quantity'),
        outputPath: 'Distribution.ActiveTrustedSigners.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.ActiveTrustedSigners.Quantity', props);
    return resource.getResponseField('Distribution.ActiveTrustedSigners.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontSigner[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.ActiveTrustedSigners.Items'),
        outputPath: 'Distribution.ActiveTrustedSigners.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.ActiveTrustedSigners.Items', props);
    return resource.getResponseField('Distribution.ActiveTrustedSigners.Items') as unknown as shapes.CloudFrontSigner[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionActiveTrustedKeyGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.ActiveTrustedKeyGroups.Enabled'),
        outputPath: 'Distribution.ActiveTrustedKeyGroups.Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.ActiveTrustedKeyGroups.Enabled', props);
    return resource.getResponseField('Distribution.ActiveTrustedKeyGroups.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.ActiveTrustedKeyGroups.Quantity'),
        outputPath: 'Distribution.ActiveTrustedKeyGroups.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.ActiveTrustedKeyGroups.Quantity', props);
    return resource.getResponseField('Distribution.ActiveTrustedKeyGroups.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontKgKeyPairIds[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.ActiveTrustedKeyGroups.Items'),
        outputPath: 'Distribution.ActiveTrustedKeyGroups.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.ActiveTrustedKeyGroups.Items', props);
    return resource.getResponseField('Distribution.ActiveTrustedKeyGroups.Items') as unknown as shapes.CloudFrontKgKeyPairIds[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.CallerReference'),
        outputPath: 'Distribution.DistributionConfig.CallerReference',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.CallerReference', props);
    return resource.getResponseField('Distribution.DistributionConfig.CallerReference') as unknown as string;
  }

  public get aliases(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigAliases {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigAliases(this.__scope, this.__resources, this.__input);
  }

  public get defaultRootObject(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultRootObject'),
        outputPath: 'Distribution.DistributionConfig.DefaultRootObject',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultRootObject', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultRootObject') as unknown as string;
  }

  public get origins(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigOrigins {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigOrigins(this.__scope, this.__resources, this.__input);
  }

  public get originGroups(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigOriginGroups {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigOriginGroups(this.__scope, this.__resources, this.__input);
  }

  public get defaultCacheBehavior(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehavior {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehavior(this.__scope, this.__resources, this.__input);
  }

  public get cacheBehaviors(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigCacheBehaviors {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigCacheBehaviors(this.__scope, this.__resources, this.__input);
  }

  public get customErrorResponses(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigCustomErrorResponses {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigCustomErrorResponses(this.__scope, this.__resources, this.__input);
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Comment'),
        outputPath: 'Distribution.DistributionConfig.Comment',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Comment', props);
    return resource.getResponseField('Distribution.DistributionConfig.Comment') as unknown as string;
  }

  public get logging(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigLogging {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigLogging(this.__scope, this.__resources, this.__input);
  }

  public get priceClass(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.PriceClass'),
        outputPath: 'Distribution.DistributionConfig.PriceClass',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.PriceClass', props);
    return resource.getResponseField('Distribution.DistributionConfig.PriceClass') as unknown as string;
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Enabled'),
        outputPath: 'Distribution.DistributionConfig.Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.Enabled') as unknown as boolean;
  }

  public get viewerCertificate(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigViewerCertificate {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigViewerCertificate(this.__scope, this.__resources, this.__input);
  }

  public get restrictions(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigRestrictions {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigRestrictions(this.__scope, this.__resources, this.__input);
  }

  public get webAclId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.WebACLId'),
        outputPath: 'Distribution.DistributionConfig.WebACLId',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.WebACLId', props);
    return resource.getResponseField('Distribution.DistributionConfig.WebACLId') as unknown as string;
  }

  public get httpVersion(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.HttpVersion'),
        outputPath: 'Distribution.DistributionConfig.HttpVersion',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.HttpVersion', props);
    return resource.getResponseField('Distribution.DistributionConfig.HttpVersion') as unknown as string;
  }

  public get isIpv6Enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.IsIPV6Enabled'),
        outputPath: 'Distribution.DistributionConfig.IsIPV6Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.IsIPV6Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.IsIPV6Enabled') as unknown as boolean;
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigAliases {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Aliases.Quantity'),
        outputPath: 'Distribution.DistributionConfig.Aliases.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Aliases.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.Aliases.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Aliases.Items'),
        outputPath: 'Distribution.DistributionConfig.Aliases.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Aliases.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.Aliases.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigOrigins {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Origins.Quantity'),
        outputPath: 'Distribution.DistributionConfig.Origins.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Origins.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.Origins.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontOrigin[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Origins.Items'),
        outputPath: 'Distribution.DistributionConfig.Origins.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Origins.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.Origins.Items') as unknown as shapes.CloudFrontOrigin[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigOriginGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.OriginGroups.Quantity'),
        outputPath: 'Distribution.DistributionConfig.OriginGroups.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.OriginGroups.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.OriginGroups.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontOriginGroup[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.OriginGroups.Items'),
        outputPath: 'Distribution.DistributionConfig.OriginGroups.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.OriginGroups.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.OriginGroups.Items') as unknown as shapes.CloudFrontOriginGroup[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehavior {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get targetOriginId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId') as unknown as string;
  }

  public get trustedSigners(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedSigners {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get trustedKeyGroups(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedKeyGroups {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedKeyGroups(this.__scope, this.__resources, this.__input);
  }

  public get viewerProtocolPolicy(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy') as unknown as string;
  }

  public get allowedMethods(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethods {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethods(this.__scope, this.__resources, this.__input);
  }

  public get smoothStreaming(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming') as unknown as boolean;
  }

  public get compress(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.Compress'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.Compress',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.Compress', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.Compress') as unknown as boolean;
  }

  public get lambdaFunctionAssociations(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations(this.__scope, this.__resources, this.__input);
  }

  public get functionAssociations(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorFunctionAssociations {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorFunctionAssociations(this.__scope, this.__resources, this.__input);
  }

  public get fieldLevelEncryptionId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId') as unknown as string;
  }

  public get realtimeLogConfigArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn') as unknown as string;
  }

  public get cachePolicyId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId') as unknown as string;
  }

  public get originRequestPolicyId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId') as unknown as string;
  }

  public get forwardedValues(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValues {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValues(this.__scope, this.__resources, this.__input);
  }

  public get minTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL') as unknown as number;
  }

  public get defaultTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL') as unknown as number;
  }

  public get maxTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL') as unknown as number;
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedKeyGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethods {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items') as unknown as string[];
  }

  public get cachedMethods(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontLambdaFunctionAssociation[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items') as unknown as shapes.CloudFrontLambdaFunctionAssociation[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorFunctionAssociations {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontFunctionAssociation[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items') as unknown as shapes.CloudFrontFunctionAssociation[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValues {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get queryString(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString') as unknown as boolean;
  }

  public get cookies(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookies {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookies(this.__scope, this.__resources, this.__input);
  }

  public get headers(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders(this.__scope, this.__resources, this.__input);
  }

  public get queryStringCacheKeys(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get forward(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward') as unknown as string;
  }

  public get whitelistedNames(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigCacheBehaviors {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.CacheBehaviors.Quantity'),
        outputPath: 'Distribution.DistributionConfig.CacheBehaviors.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.CacheBehaviors.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.CacheBehaviors.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontCacheBehavior[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.CacheBehaviors.Items'),
        outputPath: 'Distribution.DistributionConfig.CacheBehaviors.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.CacheBehaviors.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.CacheBehaviors.Items') as unknown as shapes.CloudFrontCacheBehavior[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigCustomErrorResponses {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.CustomErrorResponses.Quantity'),
        outputPath: 'Distribution.DistributionConfig.CustomErrorResponses.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.CustomErrorResponses.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.CustomErrorResponses.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontCustomErrorResponse[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.CustomErrorResponses.Items'),
        outputPath: 'Distribution.DistributionConfig.CustomErrorResponses.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.CustomErrorResponses.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.CustomErrorResponses.Items') as unknown as shapes.CloudFrontCustomErrorResponse[];
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigLogging {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Logging.Enabled'),
        outputPath: 'Distribution.DistributionConfig.Logging.Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Logging.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.Enabled') as unknown as boolean;
  }

  public get includeCookies(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Logging.IncludeCookies'),
        outputPath: 'Distribution.DistributionConfig.Logging.IncludeCookies',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Logging.IncludeCookies', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.IncludeCookies') as unknown as boolean;
  }

  public get bucket(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Logging.Bucket'),
        outputPath: 'Distribution.DistributionConfig.Logging.Bucket',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Logging.Bucket', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.Bucket') as unknown as string;
  }

  public get prefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Logging.Prefix'),
        outputPath: 'Distribution.DistributionConfig.Logging.Prefix',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Logging.Prefix', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.Prefix') as unknown as string;
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigViewerCertificate {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get cloudFrontDefaultCertificate(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate') as unknown as boolean;
  }

  public get iamCertificateId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId') as unknown as string;
  }

  public get acmCertificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn') as unknown as string;
  }

  public get sslSupportMethod(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod') as unknown as string;
  }

  public get minimumProtocolVersion(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion') as unknown as string;
  }

  public get certificate(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.Certificate'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.Certificate',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.Certificate', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.Certificate') as unknown as string;
  }

  public get certificateSource(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.CertificateSource'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.CertificateSource',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.ViewerCertificate.CertificateSource', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.CertificateSource') as unknown as string;
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigRestrictions {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get geoRestriction(): CloudFrontResponsesCreateDistributionDistributionDistributionConfigRestrictionsGeoRestriction {
    return new CloudFrontResponsesCreateDistributionDistributionDistributionConfigRestrictionsGeoRestriction(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateDistributionDistributionDistributionConfigRestrictionsGeoRestriction {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionRequest) {
  }

  public get restrictionType(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType'),
        outputPath: 'Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType', props);
    return resource.getResponseField('Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType') as unknown as string;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity'),
        outputPath: 'Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.Items'),
        outputPath: 'Distribution.DistributionConfig.Restrictions.GeoRestriction.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.Restrictions.GeoRestriction.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTags {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get distribution(): CloudFrontResponsesCreateDistributionWithTagsDistribution {
    return new CloudFrontResponsesCreateDistributionWithTagsDistribution(this.__scope, this.__resources, this.__input);
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Location'),
        outputPath: 'Location',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.ETag'),
        outputPath: 'ETag',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.Id'),
        outputPath: 'Distribution.Id',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.Id', props);
    return resource.getResponseField('Distribution.Id') as unknown as string;
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.ARN'),
        outputPath: 'Distribution.ARN',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.ARN', props);
    return resource.getResponseField('Distribution.ARN') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.Status'),
        outputPath: 'Distribution.Status',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.Status', props);
    return resource.getResponseField('Distribution.Status') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.LastModifiedTime'),
        outputPath: 'Distribution.LastModifiedTime',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.LastModifiedTime', props);
    return resource.getResponseField('Distribution.LastModifiedTime') as unknown as string;
  }

  public get inProgressInvalidationBatches(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.InProgressInvalidationBatches'),
        outputPath: 'Distribution.InProgressInvalidationBatches',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.InProgressInvalidationBatches', props);
    return resource.getResponseField('Distribution.InProgressInvalidationBatches') as unknown as number;
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DomainName'),
        outputPath: 'Distribution.DomainName',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DomainName', props);
    return resource.getResponseField('Distribution.DomainName') as unknown as string;
  }

  public get activeTrustedSigners(): CloudFrontResponsesCreateDistributionWithTagsDistributionActiveTrustedSigners {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionActiveTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get activeTrustedKeyGroups(): CloudFrontResponsesCreateDistributionWithTagsDistributionActiveTrustedKeyGroups {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionActiveTrustedKeyGroups(this.__scope, this.__resources, this.__input);
  }

  public get distributionConfig(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfig {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfig(this.__scope, this.__resources, this.__input);
  }

  public get aliasIcpRecordals(): shapes.CloudFrontAliasIcpRecordal[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.AliasICPRecordals'),
        outputPath: 'Distribution.AliasICPRecordals',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.AliasICPRecordals', props);
    return resource.getResponseField('Distribution.AliasICPRecordals') as unknown as shapes.CloudFrontAliasIcpRecordal[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionActiveTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.ActiveTrustedSigners.Enabled'),
        outputPath: 'Distribution.ActiveTrustedSigners.Enabled',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.ActiveTrustedSigners.Enabled', props);
    return resource.getResponseField('Distribution.ActiveTrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.ActiveTrustedSigners.Quantity'),
        outputPath: 'Distribution.ActiveTrustedSigners.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.ActiveTrustedSigners.Quantity', props);
    return resource.getResponseField('Distribution.ActiveTrustedSigners.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontSigner[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.ActiveTrustedSigners.Items'),
        outputPath: 'Distribution.ActiveTrustedSigners.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.ActiveTrustedSigners.Items', props);
    return resource.getResponseField('Distribution.ActiveTrustedSigners.Items') as unknown as shapes.CloudFrontSigner[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionActiveTrustedKeyGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.ActiveTrustedKeyGroups.Enabled'),
        outputPath: 'Distribution.ActiveTrustedKeyGroups.Enabled',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.ActiveTrustedKeyGroups.Enabled', props);
    return resource.getResponseField('Distribution.ActiveTrustedKeyGroups.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.ActiveTrustedKeyGroups.Quantity'),
        outputPath: 'Distribution.ActiveTrustedKeyGroups.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.ActiveTrustedKeyGroups.Quantity', props);
    return resource.getResponseField('Distribution.ActiveTrustedKeyGroups.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontKgKeyPairIds[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.ActiveTrustedKeyGroups.Items'),
        outputPath: 'Distribution.ActiveTrustedKeyGroups.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.ActiveTrustedKeyGroups.Items', props);
    return resource.getResponseField('Distribution.ActiveTrustedKeyGroups.Items') as unknown as shapes.CloudFrontKgKeyPairIds[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.CallerReference'),
        outputPath: 'Distribution.DistributionConfig.CallerReference',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.CallerReference', props);
    return resource.getResponseField('Distribution.DistributionConfig.CallerReference') as unknown as string;
  }

  public get aliases(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigAliases {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigAliases(this.__scope, this.__resources, this.__input);
  }

  public get defaultRootObject(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultRootObject'),
        outputPath: 'Distribution.DistributionConfig.DefaultRootObject',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultRootObject', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultRootObject') as unknown as string;
  }

  public get origins(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigOrigins {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigOrigins(this.__scope, this.__resources, this.__input);
  }

  public get originGroups(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigOriginGroups {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigOriginGroups(this.__scope, this.__resources, this.__input);
  }

  public get defaultCacheBehavior(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehavior {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehavior(this.__scope, this.__resources, this.__input);
  }

  public get cacheBehaviors(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigCacheBehaviors {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigCacheBehaviors(this.__scope, this.__resources, this.__input);
  }

  public get customErrorResponses(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigCustomErrorResponses {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigCustomErrorResponses(this.__scope, this.__resources, this.__input);
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Comment'),
        outputPath: 'Distribution.DistributionConfig.Comment',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Comment', props);
    return resource.getResponseField('Distribution.DistributionConfig.Comment') as unknown as string;
  }

  public get logging(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigLogging {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigLogging(this.__scope, this.__resources, this.__input);
  }

  public get priceClass(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.PriceClass'),
        outputPath: 'Distribution.DistributionConfig.PriceClass',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.PriceClass', props);
    return resource.getResponseField('Distribution.DistributionConfig.PriceClass') as unknown as string;
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Enabled'),
        outputPath: 'Distribution.DistributionConfig.Enabled',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.Enabled') as unknown as boolean;
  }

  public get viewerCertificate(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigViewerCertificate {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigViewerCertificate(this.__scope, this.__resources, this.__input);
  }

  public get restrictions(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigRestrictions {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigRestrictions(this.__scope, this.__resources, this.__input);
  }

  public get webAclId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.WebACLId'),
        outputPath: 'Distribution.DistributionConfig.WebACLId',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.WebACLId', props);
    return resource.getResponseField('Distribution.DistributionConfig.WebACLId') as unknown as string;
  }

  public get httpVersion(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.HttpVersion'),
        outputPath: 'Distribution.DistributionConfig.HttpVersion',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.HttpVersion', props);
    return resource.getResponseField('Distribution.DistributionConfig.HttpVersion') as unknown as string;
  }

  public get isIpv6Enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.IsIPV6Enabled'),
        outputPath: 'Distribution.DistributionConfig.IsIPV6Enabled',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.IsIPV6Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.IsIPV6Enabled') as unknown as boolean;
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigAliases {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Aliases.Quantity'),
        outputPath: 'Distribution.DistributionConfig.Aliases.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Aliases.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.Aliases.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Aliases.Items'),
        outputPath: 'Distribution.DistributionConfig.Aliases.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Aliases.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.Aliases.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigOrigins {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Origins.Quantity'),
        outputPath: 'Distribution.DistributionConfig.Origins.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Origins.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.Origins.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontOrigin[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Origins.Items'),
        outputPath: 'Distribution.DistributionConfig.Origins.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Origins.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.Origins.Items') as unknown as shapes.CloudFrontOrigin[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigOriginGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.OriginGroups.Quantity'),
        outputPath: 'Distribution.DistributionConfig.OriginGroups.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.OriginGroups.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.OriginGroups.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontOriginGroup[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.OriginGroups.Items'),
        outputPath: 'Distribution.DistributionConfig.OriginGroups.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.OriginGroups.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.OriginGroups.Items') as unknown as shapes.CloudFrontOriginGroup[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehavior {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get targetOriginId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId') as unknown as string;
  }

  public get trustedSigners(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorTrustedSigners {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get trustedKeyGroups(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorTrustedKeyGroups {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorTrustedKeyGroups(this.__scope, this.__resources, this.__input);
  }

  public get viewerProtocolPolicy(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy') as unknown as string;
  }

  public get allowedMethods(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorAllowedMethods {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorAllowedMethods(this.__scope, this.__resources, this.__input);
  }

  public get smoothStreaming(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming') as unknown as boolean;
  }

  public get compress(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.Compress'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.Compress',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.Compress', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.Compress') as unknown as boolean;
  }

  public get lambdaFunctionAssociations(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations(this.__scope, this.__resources, this.__input);
  }

  public get functionAssociations(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorFunctionAssociations {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorFunctionAssociations(this.__scope, this.__resources, this.__input);
  }

  public get fieldLevelEncryptionId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId') as unknown as string;
  }

  public get realtimeLogConfigArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn') as unknown as string;
  }

  public get cachePolicyId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId') as unknown as string;
  }

  public get originRequestPolicyId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId') as unknown as string;
  }

  public get forwardedValues(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValues {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValues(this.__scope, this.__resources, this.__input);
  }

  public get minTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL') as unknown as number;
  }

  public get defaultTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL') as unknown as number;
  }

  public get maxTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL') as unknown as number;
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorTrustedKeyGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorAllowedMethods {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items') as unknown as string[];
  }

  public get cachedMethods(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontLambdaFunctionAssociation[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items') as unknown as shapes.CloudFrontLambdaFunctionAssociation[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorFunctionAssociations {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontFunctionAssociation[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items') as unknown as shapes.CloudFrontFunctionAssociation[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValues {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get queryString(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString') as unknown as boolean;
  }

  public get cookies(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookies {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookies(this.__scope, this.__resources, this.__input);
  }

  public get headers(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders(this.__scope, this.__resources, this.__input);
  }

  public get queryStringCacheKeys(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get forward(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward') as unknown as string;
  }

  public get whitelistedNames(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigCacheBehaviors {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.CacheBehaviors.Quantity'),
        outputPath: 'Distribution.DistributionConfig.CacheBehaviors.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.CacheBehaviors.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.CacheBehaviors.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontCacheBehavior[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.CacheBehaviors.Items'),
        outputPath: 'Distribution.DistributionConfig.CacheBehaviors.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.CacheBehaviors.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.CacheBehaviors.Items') as unknown as shapes.CloudFrontCacheBehavior[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigCustomErrorResponses {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.CustomErrorResponses.Quantity'),
        outputPath: 'Distribution.DistributionConfig.CustomErrorResponses.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.CustomErrorResponses.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.CustomErrorResponses.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontCustomErrorResponse[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.CustomErrorResponses.Items'),
        outputPath: 'Distribution.DistributionConfig.CustomErrorResponses.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.CustomErrorResponses.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.CustomErrorResponses.Items') as unknown as shapes.CloudFrontCustomErrorResponse[];
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigLogging {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Logging.Enabled'),
        outputPath: 'Distribution.DistributionConfig.Logging.Enabled',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Logging.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.Enabled') as unknown as boolean;
  }

  public get includeCookies(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Logging.IncludeCookies'),
        outputPath: 'Distribution.DistributionConfig.Logging.IncludeCookies',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Logging.IncludeCookies', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.IncludeCookies') as unknown as boolean;
  }

  public get bucket(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Logging.Bucket'),
        outputPath: 'Distribution.DistributionConfig.Logging.Bucket',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Logging.Bucket', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.Bucket') as unknown as string;
  }

  public get prefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Logging.Prefix'),
        outputPath: 'Distribution.DistributionConfig.Logging.Prefix',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Logging.Prefix', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.Prefix') as unknown as string;
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigViewerCertificate {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get cloudFrontDefaultCertificate(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate') as unknown as boolean;
  }

  public get iamCertificateId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId') as unknown as string;
  }

  public get acmCertificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn') as unknown as string;
  }

  public get sslSupportMethod(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod') as unknown as string;
  }

  public get minimumProtocolVersion(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion') as unknown as string;
  }

  public get certificate(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.Certificate'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.Certificate',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.Certificate', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.Certificate') as unknown as string;
  }

  public get certificateSource(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.CertificateSource'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.CertificateSource',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.ViewerCertificate.CertificateSource', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.CertificateSource') as unknown as string;
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigRestrictions {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get geoRestriction(): CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigRestrictionsGeoRestriction {
    return new CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigRestrictionsGeoRestriction(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateDistributionWithTagsDistributionDistributionConfigRestrictionsGeoRestriction {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateDistributionWithTagsRequest) {
  }

  public get restrictionType(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType'),
        outputPath: 'Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType', props);
    return resource.getResponseField('Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType') as unknown as string;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity'),
        outputPath: 'Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateDistributionWithTags.Distribution.DistributionConfig.Restrictions.GeoRestriction.Items'),
        outputPath: 'Distribution.DistributionConfig.Restrictions.GeoRestriction.Items',
        parameters: {
          DistributionConfigWithTags: {
            DistributionConfig: {
              CallerReference: this.__input.distributionConfigWithTags.distributionConfig.callerReference,
              Aliases: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.aliases?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.aliases?.items,
              },
              DefaultRootObject: this.__input.distributionConfigWithTags.distributionConfig.defaultRootObject,
              Origins: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.origins.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.origins.items,
              },
              OriginGroups: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.originGroups?.items,
              },
              DefaultCacheBehavior: {
                TargetOriginId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.targetOriginId,
                TrustedSigners: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
                },
                TrustedKeyGroups: {
                  Enabled: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
                },
                ViewerProtocolPolicy: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
                AllowedMethods: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                  CachedMethods: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                  },
                },
                SmoothStreaming: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.smoothStreaming,
                Compress: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.compress,
                LambdaFunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
                },
                FunctionAssociations: {
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
                },
                FieldLevelEncryptionId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
                RealtimeLogConfigArn: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
                CachePolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.cachePolicyId,
                OriginRequestPolicyId: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
                ForwardedValues: {
                  QueryString: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                  Cookies: {
                    Forward: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                    WhitelistedNames: {
                      Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                      Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                    },
                  },
                  Headers: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                  },
                  QueryStringCacheKeys: {
                    Quantity: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                    Items: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                  },
                },
                MinTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.minTtl,
                DefaultTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.defaultTtl,
                MaxTTL: this.__input.distributionConfigWithTags.distributionConfig.defaultCacheBehavior.maxTtl,
              },
              CacheBehaviors: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.cacheBehaviors?.items,
              },
              CustomErrorResponses: {
                Quantity: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.quantity,
                Items: this.__input.distributionConfigWithTags.distributionConfig.customErrorResponses?.items,
              },
              Comment: this.__input.distributionConfigWithTags.distributionConfig.comment,
              Logging: {
                Enabled: this.__input.distributionConfigWithTags.distributionConfig.logging?.enabled,
                IncludeCookies: this.__input.distributionConfigWithTags.distributionConfig.logging?.includeCookies,
                Bucket: this.__input.distributionConfigWithTags.distributionConfig.logging?.bucket,
                Prefix: this.__input.distributionConfigWithTags.distributionConfig.logging?.prefix,
              },
              PriceClass: this.__input.distributionConfigWithTags.distributionConfig.priceClass,
              Enabled: this.__input.distributionConfigWithTags.distributionConfig.enabled,
              ViewerCertificate: {
                CloudFrontDefaultCertificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
                IAMCertificateId: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.iamCertificateId,
                ACMCertificateArn: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.acmCertificateArn,
                SSLSupportMethod: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.sslSupportMethod,
                MinimumProtocolVersion: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.minimumProtocolVersion,
                Certificate: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificate,
                CertificateSource: this.__input.distributionConfigWithTags.distributionConfig.viewerCertificate?.certificateSource,
              },
              Restrictions: {
                GeoRestriction: {
                  RestrictionType: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.restrictionType,
                  Quantity: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.quantity,
                  Items: this.__input.distributionConfigWithTags.distributionConfig.restrictions?.geoRestriction.items,
                },
              },
              WebACLId: this.__input.distributionConfigWithTags.distributionConfig.webAclId,
              HttpVersion: this.__input.distributionConfigWithTags.distributionConfig.httpVersion,
              IsIPV6Enabled: this.__input.distributionConfigWithTags.distributionConfig.isIpv6Enabled,
            },
            Tags: {
              Items: this.__input.distributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateDistributionWithTags.Distribution.DistributionConfig.Restrictions.GeoRestriction.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.Restrictions.GeoRestriction.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateFieldLevelEncryptionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFieldLevelEncryptionConfigRequest) {
  }

  public get fieldLevelEncryption(): CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryption {
    return new CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryption(this.__scope, this.__resources, this.__input);
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionConfig.Location'),
        outputPath: 'Location',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionConfig.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionConfig.ETag'),
        outputPath: 'ETag',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionConfig.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFieldLevelEncryptionConfigRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionConfig.FieldLevelEncryption.Id'),
        outputPath: 'FieldLevelEncryption.Id',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionConfig.FieldLevelEncryption.Id', props);
    return resource.getResponseField('FieldLevelEncryption.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionConfig.FieldLevelEncryption.LastModifiedTime'),
        outputPath: 'FieldLevelEncryption.LastModifiedTime',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionConfig.FieldLevelEncryption.LastModifiedTime', props);
    return resource.getResponseField('FieldLevelEncryption.LastModifiedTime') as unknown as string;
  }

  public get fieldLevelEncryptionConfig(): CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfig {
    return new CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFieldLevelEncryptionConfigRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.CallerReference'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.CallerReference',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.CallerReference', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.CallerReference') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.Comment'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.Comment',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.Comment', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.Comment') as unknown as string;
  }

  public get queryArgProfileConfig(): CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfig {
    return new CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfig(this.__scope, this.__resources, this.__input);
  }

  public get contentTypeProfileConfig(): CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfig {
    return new CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFieldLevelEncryptionConfigRequest) {
  }

  public get forwardWhenQueryArgProfileIsUnknown(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown') as unknown as boolean;
  }

  public get queryArgProfiles(): CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles {
    return new CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFieldLevelEncryptionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontQueryArgProfile[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items') as unknown as shapes.CloudFrontQueryArgProfile[];
  }

}

export class CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFieldLevelEncryptionConfigRequest) {
  }

  public get forwardWhenContentTypeIsUnknown(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown') as unknown as boolean;
  }

  public get contentTypeProfiles(): CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles {
    return new CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFieldLevelEncryptionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontContentTypeProfile[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items') as unknown as shapes.CloudFrontContentTypeProfile[];
  }

}

export class CloudFrontResponsesCreateFieldLevelEncryptionProfile {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFieldLevelEncryptionProfileRequest) {
  }

  public get fieldLevelEncryptionProfile(): CloudFrontResponsesCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfile {
    return new CloudFrontResponsesCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfile(this.__scope, this.__resources, this.__input);
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionProfile.Location'),
        outputPath: 'Location',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionProfile.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionProfile.ETag'),
        outputPath: 'ETag',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionProfile.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfile {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFieldLevelEncryptionProfileRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.Id'),
        outputPath: 'FieldLevelEncryptionProfile.Id',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.Id', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.LastModifiedTime'),
        outputPath: 'FieldLevelEncryptionProfile.LastModifiedTime',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.LastModifiedTime', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.LastModifiedTime') as unknown as string;
  }

  public get fieldLevelEncryptionProfileConfig(): CloudFrontResponsesCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig {
    return new CloudFrontResponsesCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFieldLevelEncryptionProfileRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Name'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Name',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Name', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Name') as unknown as string;
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.CallerReference'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.CallerReference',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.CallerReference', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.CallerReference') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Comment'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Comment',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Comment', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Comment') as unknown as string;
  }

  public get encryptionEntities(): CloudFrontResponsesCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntities {
    return new CloudFrontResponsesCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntities(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntities {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFieldLevelEncryptionProfileRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontEncryptionEntity[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items') as unknown as shapes.CloudFrontEncryptionEntity[];
  }

}

export class CloudFrontResponsesCreateFunction {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFunctionRequest) {
  }

  public get functionSummary(): CloudFrontResponsesCreateFunctionFunctionSummary {
    return new CloudFrontResponsesCreateFunctionFunctionSummary(this.__scope, this.__resources, this.__input);
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFunction.Location'),
        outputPath: 'Location',
        parameters: {
          Name: this.__input.name,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFunction.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFunction.ETag'),
        outputPath: 'ETag',
        parameters: {
          Name: this.__input.name,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFunction.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesCreateFunctionFunctionSummary {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFunctionRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFunction.FunctionSummary.Name'),
        outputPath: 'FunctionSummary.Name',
        parameters: {
          Name: this.__input.name,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFunction.FunctionSummary.Name', props);
    return resource.getResponseField('FunctionSummary.Name') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFunction.FunctionSummary.Status'),
        outputPath: 'FunctionSummary.Status',
        parameters: {
          Name: this.__input.name,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFunction.FunctionSummary.Status', props);
    return resource.getResponseField('FunctionSummary.Status') as unknown as string;
  }

  public get functionConfig(): CloudFrontResponsesCreateFunctionFunctionSummaryFunctionConfig {
    return new CloudFrontResponsesCreateFunctionFunctionSummaryFunctionConfig(this.__scope, this.__resources, this.__input);
  }

  public get functionMetadata(): CloudFrontResponsesCreateFunctionFunctionSummaryFunctionMetadata {
    return new CloudFrontResponsesCreateFunctionFunctionSummaryFunctionMetadata(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateFunctionFunctionSummaryFunctionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFunctionRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFunction.FunctionSummary.FunctionConfig.Comment'),
        outputPath: 'FunctionSummary.FunctionConfig.Comment',
        parameters: {
          Name: this.__input.name,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFunction.FunctionSummary.FunctionConfig.Comment', props);
    return resource.getResponseField('FunctionSummary.FunctionConfig.Comment') as unknown as string;
  }

  public get runtime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFunction.FunctionSummary.FunctionConfig.Runtime'),
        outputPath: 'FunctionSummary.FunctionConfig.Runtime',
        parameters: {
          Name: this.__input.name,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFunction.FunctionSummary.FunctionConfig.Runtime', props);
    return resource.getResponseField('FunctionSummary.FunctionConfig.Runtime') as unknown as string;
  }

}

export class CloudFrontResponsesCreateFunctionFunctionSummaryFunctionMetadata {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateFunctionRequest) {
  }

  public get functionArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFunction.FunctionSummary.FunctionMetadata.FunctionARN'),
        outputPath: 'FunctionSummary.FunctionMetadata.FunctionARN',
        parameters: {
          Name: this.__input.name,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFunction.FunctionSummary.FunctionMetadata.FunctionARN', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.FunctionARN') as unknown as string;
  }

  public get stage(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFunction.FunctionSummary.FunctionMetadata.Stage'),
        outputPath: 'FunctionSummary.FunctionMetadata.Stage',
        parameters: {
          Name: this.__input.name,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFunction.FunctionSummary.FunctionMetadata.Stage', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.Stage') as unknown as string;
  }

  public get createdTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFunction.FunctionSummary.FunctionMetadata.CreatedTime'),
        outputPath: 'FunctionSummary.FunctionMetadata.CreatedTime',
        parameters: {
          Name: this.__input.name,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFunction.FunctionSummary.FunctionMetadata.CreatedTime', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.CreatedTime') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateFunction.FunctionSummary.FunctionMetadata.LastModifiedTime'),
        outputPath: 'FunctionSummary.FunctionMetadata.LastModifiedTime',
        parameters: {
          Name: this.__input.name,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateFunction.FunctionSummary.FunctionMetadata.LastModifiedTime', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.LastModifiedTime') as unknown as string;
  }

}

export class CloudFrontResponsesCreateInvalidation {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateInvalidationRequest) {
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateInvalidation.Location'),
        outputPath: 'Location',
        parameters: {
          DistributionId: this.__input.distributionId,
          InvalidationBatch: {
            Paths: {
              Quantity: this.__input.invalidationBatch.paths.quantity,
              Items: this.__input.invalidationBatch.paths.items,
            },
            CallerReference: this.__input.invalidationBatch.callerReference,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateInvalidation.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get invalidation(): CloudFrontResponsesCreateInvalidationInvalidation {
    return new CloudFrontResponsesCreateInvalidationInvalidation(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateInvalidationInvalidation {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateInvalidationRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateInvalidation.Invalidation.Id'),
        outputPath: 'Invalidation.Id',
        parameters: {
          DistributionId: this.__input.distributionId,
          InvalidationBatch: {
            Paths: {
              Quantity: this.__input.invalidationBatch.paths.quantity,
              Items: this.__input.invalidationBatch.paths.items,
            },
            CallerReference: this.__input.invalidationBatch.callerReference,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateInvalidation.Invalidation.Id', props);
    return resource.getResponseField('Invalidation.Id') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateInvalidation.Invalidation.Status'),
        outputPath: 'Invalidation.Status',
        parameters: {
          DistributionId: this.__input.distributionId,
          InvalidationBatch: {
            Paths: {
              Quantity: this.__input.invalidationBatch.paths.quantity,
              Items: this.__input.invalidationBatch.paths.items,
            },
            CallerReference: this.__input.invalidationBatch.callerReference,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateInvalidation.Invalidation.Status', props);
    return resource.getResponseField('Invalidation.Status') as unknown as string;
  }

  public get createTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateInvalidation.Invalidation.CreateTime'),
        outputPath: 'Invalidation.CreateTime',
        parameters: {
          DistributionId: this.__input.distributionId,
          InvalidationBatch: {
            Paths: {
              Quantity: this.__input.invalidationBatch.paths.quantity,
              Items: this.__input.invalidationBatch.paths.items,
            },
            CallerReference: this.__input.invalidationBatch.callerReference,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateInvalidation.Invalidation.CreateTime', props);
    return resource.getResponseField('Invalidation.CreateTime') as unknown as string;
  }

  public get invalidationBatch(): CloudFrontResponsesCreateInvalidationInvalidationInvalidationBatch {
    return new CloudFrontResponsesCreateInvalidationInvalidationInvalidationBatch(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateInvalidationInvalidationInvalidationBatch {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateInvalidationRequest) {
  }

  public get paths(): CloudFrontResponsesCreateInvalidationInvalidationInvalidationBatchPaths {
    return new CloudFrontResponsesCreateInvalidationInvalidationInvalidationBatchPaths(this.__scope, this.__resources, this.__input);
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateInvalidation.Invalidation.InvalidationBatch.CallerReference'),
        outputPath: 'Invalidation.InvalidationBatch.CallerReference',
        parameters: {
          DistributionId: this.__input.distributionId,
          InvalidationBatch: {
            Paths: {
              Quantity: this.__input.invalidationBatch.paths.quantity,
              Items: this.__input.invalidationBatch.paths.items,
            },
            CallerReference: this.__input.invalidationBatch.callerReference,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateInvalidation.Invalidation.InvalidationBatch.CallerReference', props);
    return resource.getResponseField('Invalidation.InvalidationBatch.CallerReference') as unknown as string;
  }

}

export class CloudFrontResponsesCreateInvalidationInvalidationInvalidationBatchPaths {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateInvalidationRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateInvalidation.Invalidation.InvalidationBatch.Paths.Quantity'),
        outputPath: 'Invalidation.InvalidationBatch.Paths.Quantity',
        parameters: {
          DistributionId: this.__input.distributionId,
          InvalidationBatch: {
            Paths: {
              Quantity: this.__input.invalidationBatch.paths.quantity,
              Items: this.__input.invalidationBatch.paths.items,
            },
            CallerReference: this.__input.invalidationBatch.callerReference,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateInvalidation.Invalidation.InvalidationBatch.Paths.Quantity', props);
    return resource.getResponseField('Invalidation.InvalidationBatch.Paths.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateInvalidation.Invalidation.InvalidationBatch.Paths.Items'),
        outputPath: 'Invalidation.InvalidationBatch.Paths.Items',
        parameters: {
          DistributionId: this.__input.distributionId,
          InvalidationBatch: {
            Paths: {
              Quantity: this.__input.invalidationBatch.paths.quantity,
              Items: this.__input.invalidationBatch.paths.items,
            },
            CallerReference: this.__input.invalidationBatch.callerReference,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateInvalidation.Invalidation.InvalidationBatch.Paths.Items', props);
    return resource.getResponseField('Invalidation.InvalidationBatch.Paths.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateKeyGroup {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateKeyGroupRequest) {
  }

  public get keyGroup(): CloudFrontResponsesCreateKeyGroupKeyGroup {
    return new CloudFrontResponsesCreateKeyGroupKeyGroup(this.__scope, this.__resources, this.__input);
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateKeyGroup.Location'),
        outputPath: 'Location',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateKeyGroup.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateKeyGroup.ETag'),
        outputPath: 'ETag',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateKeyGroup.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesCreateKeyGroupKeyGroup {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateKeyGroupRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateKeyGroup.KeyGroup.Id'),
        outputPath: 'KeyGroup.Id',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateKeyGroup.KeyGroup.Id', props);
    return resource.getResponseField('KeyGroup.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateKeyGroup.KeyGroup.LastModifiedTime'),
        outputPath: 'KeyGroup.LastModifiedTime',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateKeyGroup.KeyGroup.LastModifiedTime', props);
    return resource.getResponseField('KeyGroup.LastModifiedTime') as unknown as string;
  }

  public get keyGroupConfig(): CloudFrontResponsesCreateKeyGroupKeyGroupKeyGroupConfig {
    return new CloudFrontResponsesCreateKeyGroupKeyGroupKeyGroupConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateKeyGroupKeyGroupKeyGroupConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateKeyGroupRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateKeyGroup.KeyGroup.KeyGroupConfig.Name'),
        outputPath: 'KeyGroup.KeyGroupConfig.Name',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateKeyGroup.KeyGroup.KeyGroupConfig.Name', props);
    return resource.getResponseField('KeyGroup.KeyGroupConfig.Name') as unknown as string;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateKeyGroup.KeyGroup.KeyGroupConfig.Items'),
        outputPath: 'KeyGroup.KeyGroupConfig.Items',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateKeyGroup.KeyGroup.KeyGroupConfig.Items', props);
    return resource.getResponseField('KeyGroup.KeyGroupConfig.Items') as unknown as string[];
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateKeyGroup.KeyGroup.KeyGroupConfig.Comment'),
        outputPath: 'KeyGroup.KeyGroupConfig.Comment',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateKeyGroup.KeyGroup.KeyGroupConfig.Comment', props);
    return resource.getResponseField('KeyGroup.KeyGroupConfig.Comment') as unknown as string;
  }

}

export class CloudFrontResponsesCreateMonitoringSubscription {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateMonitoringSubscriptionRequest) {
  }

  public get monitoringSubscription(): CloudFrontResponsesCreateMonitoringSubscriptionMonitoringSubscription {
    return new CloudFrontResponsesCreateMonitoringSubscriptionMonitoringSubscription(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateMonitoringSubscriptionMonitoringSubscription {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateMonitoringSubscriptionRequest) {
  }

  public get realtimeMetricsSubscriptionConfig(): CloudFrontResponsesCreateMonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig {
    return new CloudFrontResponsesCreateMonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateMonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateMonitoringSubscriptionRequest) {
  }

  public get realtimeMetricsSubscriptionStatus(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createMonitoringSubscription',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateMonitoringSubscription.MonitoringSubscription.RealtimeMetricsSubscriptionConfig.RealtimeMetricsSubscriptionStatus'),
        outputPath: 'MonitoringSubscription.RealtimeMetricsSubscriptionConfig.RealtimeMetricsSubscriptionStatus',
        parameters: {
          DistributionId: this.__input.distributionId,
          MonitoringSubscription: {
            RealtimeMetricsSubscriptionConfig: {
              RealtimeMetricsSubscriptionStatus: this.__input.monitoringSubscription.realtimeMetricsSubscriptionConfig?.realtimeMetricsSubscriptionStatus,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateMonitoringSubscription.MonitoringSubscription.RealtimeMetricsSubscriptionConfig.RealtimeMetricsSubscriptionStatus', props);
    return resource.getResponseField('MonitoringSubscription.RealtimeMetricsSubscriptionConfig.RealtimeMetricsSubscriptionStatus') as unknown as string;
  }

}

export class CloudFrontResponsesCreateOriginRequestPolicy {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateOriginRequestPolicyRequest) {
  }

  public get originRequestPolicy(): CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicy {
    return new CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicy(this.__scope, this.__resources, this.__input);
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.Location'),
        outputPath: 'Location',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.ETag'),
        outputPath: 'ETag',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicy {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateOriginRequestPolicyRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.Id'),
        outputPath: 'OriginRequestPolicy.Id',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.Id', props);
    return resource.getResponseField('OriginRequestPolicy.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.LastModifiedTime'),
        outputPath: 'OriginRequestPolicy.LastModifiedTime',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.LastModifiedTime', props);
    return resource.getResponseField('OriginRequestPolicy.LastModifiedTime') as unknown as string;
  }

  public get originRequestPolicyConfig(): CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfig {
    return new CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateOriginRequestPolicyRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.Comment'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.Comment',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.Comment', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.Comment') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.Name'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.Name',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.Name', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.Name') as unknown as string;
  }

  public get headersConfig(): CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfig {
    return new CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfig(this.__scope, this.__resources, this.__input);
  }

  public get cookiesConfig(): CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfig {
    return new CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfig(this.__scope, this.__resources, this.__input);
  }

  public get queryStringsConfig(): CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfig {
    return new CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateOriginRequestPolicyRequest) {
  }

  public get headerBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior') as unknown as string;
  }

  public get headers(): CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfigHeaders {
    return new CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfigHeaders(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfigHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateOriginRequestPolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Items'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Items',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Items', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateOriginRequestPolicyRequest) {
  }

  public get cookieBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior') as unknown as string;
  }

  public get cookies(): CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfigCookies {
    return new CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfigCookies(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfigCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateOriginRequestPolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateOriginRequestPolicyRequest) {
  }

  public get queryStringBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior') as unknown as string;
  }

  public get queryStrings(): CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfigQueryStrings {
    return new CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfigQueryStrings(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfigQueryStrings {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateOriginRequestPolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreatePublicKey {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreatePublicKeyRequest) {
  }

  public get publicKey(): CloudFrontResponsesCreatePublicKeyPublicKey {
    return new CloudFrontResponsesCreatePublicKeyPublicKey(this.__scope, this.__resources, this.__input);
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreatePublicKey.Location'),
        outputPath: 'Location',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreatePublicKey.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreatePublicKey.ETag'),
        outputPath: 'ETag',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreatePublicKey.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesCreatePublicKeyPublicKey {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreatePublicKeyRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreatePublicKey.PublicKey.Id'),
        outputPath: 'PublicKey.Id',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreatePublicKey.PublicKey.Id', props);
    return resource.getResponseField('PublicKey.Id') as unknown as string;
  }

  public get createdTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreatePublicKey.PublicKey.CreatedTime'),
        outputPath: 'PublicKey.CreatedTime',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreatePublicKey.PublicKey.CreatedTime', props);
    return resource.getResponseField('PublicKey.CreatedTime') as unknown as string;
  }

  public get publicKeyConfig(): CloudFrontResponsesCreatePublicKeyPublicKeyPublicKeyConfig {
    return new CloudFrontResponsesCreatePublicKeyPublicKeyPublicKeyConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreatePublicKeyPublicKeyPublicKeyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreatePublicKeyRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreatePublicKey.PublicKey.PublicKeyConfig.CallerReference'),
        outputPath: 'PublicKey.PublicKeyConfig.CallerReference',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreatePublicKey.PublicKey.PublicKeyConfig.CallerReference', props);
    return resource.getResponseField('PublicKey.PublicKeyConfig.CallerReference') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreatePublicKey.PublicKey.PublicKeyConfig.Name'),
        outputPath: 'PublicKey.PublicKeyConfig.Name',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreatePublicKey.PublicKey.PublicKeyConfig.Name', props);
    return resource.getResponseField('PublicKey.PublicKeyConfig.Name') as unknown as string;
  }

  public get encodedKey(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreatePublicKey.PublicKey.PublicKeyConfig.EncodedKey'),
        outputPath: 'PublicKey.PublicKeyConfig.EncodedKey',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreatePublicKey.PublicKey.PublicKeyConfig.EncodedKey', props);
    return resource.getResponseField('PublicKey.PublicKeyConfig.EncodedKey') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreatePublicKey.PublicKey.PublicKeyConfig.Comment'),
        outputPath: 'PublicKey.PublicKeyConfig.Comment',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreatePublicKey.PublicKey.PublicKeyConfig.Comment', props);
    return resource.getResponseField('PublicKey.PublicKeyConfig.Comment') as unknown as string;
  }

}

export class CloudFrontResponsesCreateRealtimeLogConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateRealtimeLogConfigRequest) {
  }

  public get realtimeLogConfig(): CloudFrontResponsesCreateRealtimeLogConfigRealtimeLogConfig {
    return new CloudFrontResponsesCreateRealtimeLogConfigRealtimeLogConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateRealtimeLogConfigRealtimeLogConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateRealtimeLogConfigRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateRealtimeLogConfig.RealtimeLogConfig.ARN'),
        outputPath: 'RealtimeLogConfig.ARN',
        parameters: {
          EndPoints: this.__input.endPoints,
          Fields: this.__input.fields,
          Name: this.__input.name,
          SamplingRate: this.__input.samplingRate,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateRealtimeLogConfig.RealtimeLogConfig.ARN', props);
    return resource.getResponseField('RealtimeLogConfig.ARN') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateRealtimeLogConfig.RealtimeLogConfig.Name'),
        outputPath: 'RealtimeLogConfig.Name',
        parameters: {
          EndPoints: this.__input.endPoints,
          Fields: this.__input.fields,
          Name: this.__input.name,
          SamplingRate: this.__input.samplingRate,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateRealtimeLogConfig.RealtimeLogConfig.Name', props);
    return resource.getResponseField('RealtimeLogConfig.Name') as unknown as string;
  }

  public get samplingRate(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateRealtimeLogConfig.RealtimeLogConfig.SamplingRate'),
        outputPath: 'RealtimeLogConfig.SamplingRate',
        parameters: {
          EndPoints: this.__input.endPoints,
          Fields: this.__input.fields,
          Name: this.__input.name,
          SamplingRate: this.__input.samplingRate,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateRealtimeLogConfig.RealtimeLogConfig.SamplingRate', props);
    return resource.getResponseField('RealtimeLogConfig.SamplingRate') as unknown as number;
  }

  public get endPoints(): shapes.CloudFrontEndPoint[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateRealtimeLogConfig.RealtimeLogConfig.EndPoints'),
        outputPath: 'RealtimeLogConfig.EndPoints',
        parameters: {
          EndPoints: this.__input.endPoints,
          Fields: this.__input.fields,
          Name: this.__input.name,
          SamplingRate: this.__input.samplingRate,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateRealtimeLogConfig.RealtimeLogConfig.EndPoints', props);
    return resource.getResponseField('RealtimeLogConfig.EndPoints') as unknown as shapes.CloudFrontEndPoint[];
  }

  public get fields(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateRealtimeLogConfig.RealtimeLogConfig.Fields'),
        outputPath: 'RealtimeLogConfig.Fields',
        parameters: {
          EndPoints: this.__input.endPoints,
          Fields: this.__input.fields,
          Name: this.__input.name,
          SamplingRate: this.__input.samplingRate,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateRealtimeLogConfig.RealtimeLogConfig.Fields', props);
    return resource.getResponseField('RealtimeLogConfig.Fields') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateStreamingDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionRequest) {
  }

  public get streamingDistribution(): CloudFrontResponsesCreateStreamingDistributionStreamingDistribution {
    return new CloudFrontResponsesCreateStreamingDistributionStreamingDistribution(this.__scope, this.__resources, this.__input);
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.Location'),
        outputPath: 'Location',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.ETag'),
        outputPath: 'ETag',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesCreateStreamingDistributionStreamingDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.Id'),
        outputPath: 'StreamingDistribution.Id',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.Id', props);
    return resource.getResponseField('StreamingDistribution.Id') as unknown as string;
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.ARN'),
        outputPath: 'StreamingDistribution.ARN',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.ARN', props);
    return resource.getResponseField('StreamingDistribution.ARN') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.Status'),
        outputPath: 'StreamingDistribution.Status',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.Status', props);
    return resource.getResponseField('StreamingDistribution.Status') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.LastModifiedTime'),
        outputPath: 'StreamingDistribution.LastModifiedTime',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.LastModifiedTime', props);
    return resource.getResponseField('StreamingDistribution.LastModifiedTime') as unknown as string;
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.DomainName'),
        outputPath: 'StreamingDistribution.DomainName',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.DomainName', props);
    return resource.getResponseField('StreamingDistribution.DomainName') as unknown as string;
  }

  public get activeTrustedSigners(): CloudFrontResponsesCreateStreamingDistributionStreamingDistributionActiveTrustedSigners {
    return new CloudFrontResponsesCreateStreamingDistributionStreamingDistributionActiveTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get streamingDistributionConfig(): CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfig {
    return new CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateStreamingDistributionStreamingDistributionActiveTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Enabled'),
        outputPath: 'StreamingDistribution.ActiveTrustedSigners.Enabled',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Enabled', props);
    return resource.getResponseField('StreamingDistribution.ActiveTrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Quantity'),
        outputPath: 'StreamingDistribution.ActiveTrustedSigners.Quantity',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Quantity', props);
    return resource.getResponseField('StreamingDistribution.ActiveTrustedSigners.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontSigner[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Items'),
        outputPath: 'StreamingDistribution.ActiveTrustedSigners.Items',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Items', props);
    return resource.getResponseField('StreamingDistribution.ActiveTrustedSigners.Items') as unknown as shapes.CloudFrontSigner[];
  }

}

export class CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.CallerReference'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.CallerReference',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.CallerReference', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.CallerReference') as unknown as string;
  }

  public get s3Origin(): CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfigS3Origin {
    return new CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfigS3Origin(this.__scope, this.__resources, this.__input);
  }

  public get aliases(): CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfigAliases {
    return new CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfigAliases(this.__scope, this.__resources, this.__input);
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Comment'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Comment',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Comment', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Comment') as unknown as string;
  }

  public get logging(): CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfigLogging {
    return new CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfigLogging(this.__scope, this.__resources, this.__input);
  }

  public get trustedSigners(): CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfigTrustedSigners {
    return new CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfigTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get priceClass(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.PriceClass'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.PriceClass',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.PriceClass', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.PriceClass') as unknown as string;
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Enabled'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Enabled',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Enabled', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Enabled') as unknown as boolean;
  }

}

export class CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfigS3Origin {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionRequest) {
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName') as unknown as string;
  }

  public get originAccessIdentity(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity') as unknown as string;
  }

}

export class CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfigAliases {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Aliases.Items'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Aliases.Items',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Aliases.Items', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Aliases.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfigLogging {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Enabled'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Logging.Enabled',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Enabled', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Logging.Enabled') as unknown as boolean;
  }

  public get bucket(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Bucket'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Logging.Bucket',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Bucket', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Logging.Bucket') as unknown as string;
  }

  public get prefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Prefix'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Logging.Prefix',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Prefix', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Logging.Prefix') as unknown as string;
  }

}

export class CloudFrontResponsesCreateStreamingDistributionStreamingDistributionStreamingDistributionConfigTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateStreamingDistributionWithTags {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionWithTagsRequest) {
  }

  public get streamingDistribution(): CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistribution {
    return new CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistribution(this.__scope, this.__resources, this.__input);
  }

  public get location(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.Location'),
        outputPath: 'Location',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.Location', props);
    return resource.getResponseField('Location') as unknown as string;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.ETag'),
        outputPath: 'ETag',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionWithTagsRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.Id'),
        outputPath: 'StreamingDistribution.Id',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.Id', props);
    return resource.getResponseField('StreamingDistribution.Id') as unknown as string;
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.ARN'),
        outputPath: 'StreamingDistribution.ARN',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.ARN', props);
    return resource.getResponseField('StreamingDistribution.ARN') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.Status'),
        outputPath: 'StreamingDistribution.Status',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.Status', props);
    return resource.getResponseField('StreamingDistribution.Status') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.LastModifiedTime'),
        outputPath: 'StreamingDistribution.LastModifiedTime',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.LastModifiedTime', props);
    return resource.getResponseField('StreamingDistribution.LastModifiedTime') as unknown as string;
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.DomainName'),
        outputPath: 'StreamingDistribution.DomainName',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.DomainName', props);
    return resource.getResponseField('StreamingDistribution.DomainName') as unknown as string;
  }

  public get activeTrustedSigners(): CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionActiveTrustedSigners {
    return new CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionActiveTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get streamingDistributionConfig(): CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfig {
    return new CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionActiveTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionWithTagsRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.ActiveTrustedSigners.Enabled'),
        outputPath: 'StreamingDistribution.ActiveTrustedSigners.Enabled',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.ActiveTrustedSigners.Enabled', props);
    return resource.getResponseField('StreamingDistribution.ActiveTrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.ActiveTrustedSigners.Quantity'),
        outputPath: 'StreamingDistribution.ActiveTrustedSigners.Quantity',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.ActiveTrustedSigners.Quantity', props);
    return resource.getResponseField('StreamingDistribution.ActiveTrustedSigners.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontSigner[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.ActiveTrustedSigners.Items'),
        outputPath: 'StreamingDistribution.ActiveTrustedSigners.Items',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.ActiveTrustedSigners.Items', props);
    return resource.getResponseField('StreamingDistribution.ActiveTrustedSigners.Items') as unknown as shapes.CloudFrontSigner[];
  }

}

export class CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionWithTagsRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.CallerReference'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.CallerReference',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.CallerReference', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.CallerReference') as unknown as string;
  }

  public get s3Origin(): CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfigS3Origin {
    return new CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfigS3Origin(this.__scope, this.__resources, this.__input);
  }

  public get aliases(): CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfigAliases {
    return new CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfigAliases(this.__scope, this.__resources, this.__input);
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Comment'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Comment',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Comment', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Comment') as unknown as string;
  }

  public get logging(): CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfigLogging {
    return new CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfigLogging(this.__scope, this.__resources, this.__input);
  }

  public get trustedSigners(): CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfigTrustedSigners {
    return new CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfigTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get priceClass(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.PriceClass'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.PriceClass',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.PriceClass', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.PriceClass') as unknown as string;
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Enabled'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Enabled',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Enabled', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Enabled') as unknown as boolean;
  }

}

export class CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfigS3Origin {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionWithTagsRequest) {
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName') as unknown as string;
  }

  public get originAccessIdentity(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity') as unknown as string;
  }

}

export class CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfigAliases {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionWithTagsRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Aliases.Items'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Aliases.Items',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Aliases.Items', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Aliases.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfigLogging {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionWithTagsRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Logging.Enabled'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Logging.Enabled',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Logging.Enabled', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Logging.Enabled') as unknown as boolean;
  }

  public get bucket(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Logging.Bucket'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Logging.Bucket',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Logging.Bucket', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Logging.Bucket') as unknown as string;
  }

  public get prefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Logging.Prefix'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Logging.Prefix',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.Logging.Prefix', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Logging.Prefix') as unknown as string;
  }

}

export class CloudFrontResponsesCreateStreamingDistributionWithTagsStreamingDistributionStreamingDistributionConfigTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontCreateStreamingDistributionWithTagsRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'createStreamingDistributionWithTags',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items',
        parameters: {
          StreamingDistributionConfigWithTags: {
            StreamingDistributionConfig: {
              CallerReference: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.callerReference,
              S3Origin: {
                DomainName: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.domainName,
                OriginAccessIdentity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.s3Origin.originAccessIdentity,
              },
              Aliases: {
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.aliases?.items,
              },
              Comment: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.comment,
              Logging: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.enabled,
                Bucket: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.bucket,
                Prefix: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.logging?.prefix,
              },
              TrustedSigners: {
                Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.enabled,
                Quantity: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.quantity,
                Items: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.trustedSigners.items,
              },
              PriceClass: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.priceClass,
              Enabled: this.__input.streamingDistributionConfigWithTags.streamingDistributionConfig.enabled,
            },
            Tags: {
              Items: this.__input.streamingDistributionConfigWithTags.tags.items,
            },
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'CreateStreamingDistributionWithTags.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesDescribeFunction {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontDescribeFunctionRequest) {
  }

  public get functionSummary(): CloudFrontResponsesDescribeFunctionFunctionSummary {
    return new CloudFrontResponsesDescribeFunctionFunctionSummary(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DescribeFunction.ETag'),
        outputPath: 'ETag',
        parameters: {
          Name: this.__input.name,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeFunction.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesDescribeFunctionFunctionSummary {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontDescribeFunctionRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DescribeFunction.FunctionSummary.Name'),
        outputPath: 'FunctionSummary.Name',
        parameters: {
          Name: this.__input.name,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeFunction.FunctionSummary.Name', props);
    return resource.getResponseField('FunctionSummary.Name') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DescribeFunction.FunctionSummary.Status'),
        outputPath: 'FunctionSummary.Status',
        parameters: {
          Name: this.__input.name,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeFunction.FunctionSummary.Status', props);
    return resource.getResponseField('FunctionSummary.Status') as unknown as string;
  }

  public get functionConfig(): CloudFrontResponsesDescribeFunctionFunctionSummaryFunctionConfig {
    return new CloudFrontResponsesDescribeFunctionFunctionSummaryFunctionConfig(this.__scope, this.__resources, this.__input);
  }

  public get functionMetadata(): CloudFrontResponsesDescribeFunctionFunctionSummaryFunctionMetadata {
    return new CloudFrontResponsesDescribeFunctionFunctionSummaryFunctionMetadata(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesDescribeFunctionFunctionSummaryFunctionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontDescribeFunctionRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DescribeFunction.FunctionSummary.FunctionConfig.Comment'),
        outputPath: 'FunctionSummary.FunctionConfig.Comment',
        parameters: {
          Name: this.__input.name,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeFunction.FunctionSummary.FunctionConfig.Comment', props);
    return resource.getResponseField('FunctionSummary.FunctionConfig.Comment') as unknown as string;
  }

  public get runtime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DescribeFunction.FunctionSummary.FunctionConfig.Runtime'),
        outputPath: 'FunctionSummary.FunctionConfig.Runtime',
        parameters: {
          Name: this.__input.name,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeFunction.FunctionSummary.FunctionConfig.Runtime', props);
    return resource.getResponseField('FunctionSummary.FunctionConfig.Runtime') as unknown as string;
  }

}

export class CloudFrontResponsesDescribeFunctionFunctionSummaryFunctionMetadata {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontDescribeFunctionRequest) {
  }

  public get functionArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DescribeFunction.FunctionSummary.FunctionMetadata.FunctionARN'),
        outputPath: 'FunctionSummary.FunctionMetadata.FunctionARN',
        parameters: {
          Name: this.__input.name,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeFunction.FunctionSummary.FunctionMetadata.FunctionARN', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.FunctionARN') as unknown as string;
  }

  public get stage(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DescribeFunction.FunctionSummary.FunctionMetadata.Stage'),
        outputPath: 'FunctionSummary.FunctionMetadata.Stage',
        parameters: {
          Name: this.__input.name,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeFunction.FunctionSummary.FunctionMetadata.Stage', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.Stage') as unknown as string;
  }

  public get createdTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DescribeFunction.FunctionSummary.FunctionMetadata.CreatedTime'),
        outputPath: 'FunctionSummary.FunctionMetadata.CreatedTime',
        parameters: {
          Name: this.__input.name,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeFunction.FunctionSummary.FunctionMetadata.CreatedTime', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.CreatedTime') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'describeFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.DescribeFunction.FunctionSummary.FunctionMetadata.LastModifiedTime'),
        outputPath: 'FunctionSummary.FunctionMetadata.LastModifiedTime',
        parameters: {
          Name: this.__input.name,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'DescribeFunction.FunctionSummary.FunctionMetadata.LastModifiedTime', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.LastModifiedTime') as unknown as string;
  }

}

export class CloudFrontResponsesFetchCachePolicy {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyRequest) {
  }

  public get cachePolicy(): CloudFrontResponsesFetchCachePolicyCachePolicy {
    return new CloudFrontResponsesFetchCachePolicyCachePolicy(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchCachePolicyCachePolicy {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.Id'),
        outputPath: 'CachePolicy.Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.Id', props);
    return resource.getResponseField('CachePolicy.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.LastModifiedTime'),
        outputPath: 'CachePolicy.LastModifiedTime',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.LastModifiedTime', props);
    return resource.getResponseField('CachePolicy.LastModifiedTime') as unknown as string;
  }

  public get cachePolicyConfig(): CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfig {
    return new CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.Comment'),
        outputPath: 'CachePolicy.CachePolicyConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.Comment', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.Comment') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.Name'),
        outputPath: 'CachePolicy.CachePolicyConfig.Name',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.Name', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.Name') as unknown as string;
  }

  public get defaultTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.DefaultTTL'),
        outputPath: 'CachePolicy.CachePolicyConfig.DefaultTTL',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.DefaultTTL', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.DefaultTTL') as unknown as number;
  }

  public get maxTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.MaxTTL'),
        outputPath: 'CachePolicy.CachePolicyConfig.MaxTTL',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.MaxTTL', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.MaxTTL') as unknown as number;
  }

  public get minTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.MinTTL'),
        outputPath: 'CachePolicy.CachePolicyConfig.MinTTL',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.MinTTL', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.MinTTL') as unknown as number;
  }

  public get parametersInCacheKeyAndForwardedToOrigin(): CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin {
    return new CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyRequest) {
  }

  public get enableAcceptEncodingGzip(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip') as unknown as boolean;
  }

  public get enableAcceptEncodingBrotli(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli') as unknown as boolean;
  }

  public get headersConfig(): CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig {
    return new CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig(this.__scope, this.__resources, this.__input);
  }

  public get cookiesConfig(): CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig {
    return new CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig(this.__scope, this.__resources, this.__input);
  }

  public get queryStringsConfig(): CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {
    return new CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyRequest) {
  }

  public get headerBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior') as unknown as string;
  }

  public get headers(): CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders {
    return new CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyRequest) {
  }

  public get cookieBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior') as unknown as string;
  }

  public get cookies(): CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies {
    return new CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyRequest) {
  }

  public get queryStringBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior') as unknown as string;
  }

  public get queryStrings(): CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings {
    return new CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchCachePolicyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyConfigRequest) {
  }

  public get cachePolicyConfig(): CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfig {
    return new CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfig(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyConfigRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.Comment'),
        outputPath: 'CachePolicyConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.Comment', props);
    return resource.getResponseField('CachePolicyConfig.Comment') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.Name'),
        outputPath: 'CachePolicyConfig.Name',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.Name', props);
    return resource.getResponseField('CachePolicyConfig.Name') as unknown as string;
  }

  public get defaultTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.DefaultTTL'),
        outputPath: 'CachePolicyConfig.DefaultTTL',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.DefaultTTL', props);
    return resource.getResponseField('CachePolicyConfig.DefaultTTL') as unknown as number;
  }

  public get maxTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.MaxTTL'),
        outputPath: 'CachePolicyConfig.MaxTTL',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.MaxTTL', props);
    return resource.getResponseField('CachePolicyConfig.MaxTTL') as unknown as number;
  }

  public get minTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.MinTTL'),
        outputPath: 'CachePolicyConfig.MinTTL',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.MinTTL', props);
    return resource.getResponseField('CachePolicyConfig.MinTTL') as unknown as number;
  }

  public get parametersInCacheKeyAndForwardedToOrigin(): CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin {
    return new CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyConfigRequest) {
  }

  public get enableAcceptEncodingGzip(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip'),
        outputPath: 'CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip', props);
    return resource.getResponseField('CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip') as unknown as boolean;
  }

  public get enableAcceptEncodingBrotli(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli'),
        outputPath: 'CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli', props);
    return resource.getResponseField('CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli') as unknown as boolean;
  }

  public get headersConfig(): CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig {
    return new CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig(this.__scope, this.__resources, this.__input);
  }

  public get cookiesConfig(): CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig {
    return new CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig(this.__scope, this.__resources, this.__input);
  }

  public get queryStringsConfig(): CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {
    return new CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyConfigRequest) {
  }

  public get headerBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior'),
        outputPath: 'CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior', props);
    return resource.getResponseField('CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior') as unknown as string;
  }

  public get headers(): CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders {
    return new CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity'),
        outputPath: 'CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity', props);
    return resource.getResponseField('CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items'),
        outputPath: 'CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items', props);
    return resource.getResponseField('CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyConfigRequest) {
  }

  public get cookieBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior'),
        outputPath: 'CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior', props);
    return resource.getResponseField('CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior') as unknown as string;
  }

  public get cookies(): CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies {
    return new CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity'),
        outputPath: 'CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity', props);
    return resource.getResponseField('CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items'),
        outputPath: 'CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items', props);
    return resource.getResponseField('CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyConfigRequest) {
  }

  public get queryStringBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior'),
        outputPath: 'CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior', props);
    return resource.getResponseField('CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior') as unknown as string;
  }

  public get queryStrings(): CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings {
    return new CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchCachePolicyConfigCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCachePolicyConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity'),
        outputPath: 'CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity', props);
    return resource.getResponseField('CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCachePolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items'),
        outputPath: 'CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCachePolicyConfig.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items', props);
    return resource.getResponseField('CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchCloudFrontOriginAccessIdentity {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCloudFrontOriginAccessIdentityRequest) {
  }

  public get cloudFrontOriginAccessIdentity(): CloudFrontResponsesFetchCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentity {
    return new CloudFrontResponsesFetchCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentity(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCloudFrontOriginAccessIdentity.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCloudFrontOriginAccessIdentity.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentity {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCloudFrontOriginAccessIdentityRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.Id'),
        outputPath: 'CloudFrontOriginAccessIdentity.Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.Id', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentity.Id') as unknown as string;
  }

  public get s3CanonicalUserId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.S3CanonicalUserId'),
        outputPath: 'CloudFrontOriginAccessIdentity.S3CanonicalUserId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.S3CanonicalUserId', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentity.S3CanonicalUserId') as unknown as string;
  }

  public get cloudFrontOriginAccessIdentityConfig(): CloudFrontResponsesFetchCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig {
    return new CloudFrontResponsesFetchCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCloudFrontOriginAccessIdentityRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.CallerReference'),
        outputPath: 'CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.CallerReference',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.CallerReference', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.CallerReference') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.Comment'),
        outputPath: 'CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.Comment', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.Comment') as unknown as string;
  }

}

export class CloudFrontResponsesFetchCloudFrontOriginAccessIdentityConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCloudFrontOriginAccessIdentityConfigRequest) {
  }

  public get cloudFrontOriginAccessIdentityConfig(): CloudFrontResponsesFetchCloudFrontOriginAccessIdentityConfigCloudFrontOriginAccessIdentityConfig {
    return new CloudFrontResponsesFetchCloudFrontOriginAccessIdentityConfigCloudFrontOriginAccessIdentityConfig(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCloudFrontOriginAccessIdentityConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCloudFrontOriginAccessIdentityConfig.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCloudFrontOriginAccessIdentityConfig.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchCloudFrontOriginAccessIdentityConfigCloudFrontOriginAccessIdentityConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetCloudFrontOriginAccessIdentityConfigRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCloudFrontOriginAccessIdentityConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCloudFrontOriginAccessIdentityConfig.CloudFrontOriginAccessIdentityConfig.CallerReference'),
        outputPath: 'CloudFrontOriginAccessIdentityConfig.CallerReference',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCloudFrontOriginAccessIdentityConfig.CloudFrontOriginAccessIdentityConfig.CallerReference', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentityConfig.CallerReference') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getCloudFrontOriginAccessIdentityConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetCloudFrontOriginAccessIdentityConfig.CloudFrontOriginAccessIdentityConfig.Comment'),
        outputPath: 'CloudFrontOriginAccessIdentityConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetCloudFrontOriginAccessIdentityConfig.CloudFrontOriginAccessIdentityConfig.Comment', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentityConfig.Comment') as unknown as string;
  }

}

export class CloudFrontResponsesFetchDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get distribution(): CloudFrontResponsesFetchDistributionDistribution {
    return new CloudFrontResponsesFetchDistributionDistribution(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchDistributionDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.Id'),
        outputPath: 'Distribution.Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.Id', props);
    return resource.getResponseField('Distribution.Id') as unknown as string;
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.ARN'),
        outputPath: 'Distribution.ARN',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.ARN', props);
    return resource.getResponseField('Distribution.ARN') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.Status'),
        outputPath: 'Distribution.Status',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.Status', props);
    return resource.getResponseField('Distribution.Status') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.LastModifiedTime'),
        outputPath: 'Distribution.LastModifiedTime',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.LastModifiedTime', props);
    return resource.getResponseField('Distribution.LastModifiedTime') as unknown as string;
  }

  public get inProgressInvalidationBatches(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.InProgressInvalidationBatches'),
        outputPath: 'Distribution.InProgressInvalidationBatches',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.InProgressInvalidationBatches', props);
    return resource.getResponseField('Distribution.InProgressInvalidationBatches') as unknown as number;
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DomainName'),
        outputPath: 'Distribution.DomainName',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DomainName', props);
    return resource.getResponseField('Distribution.DomainName') as unknown as string;
  }

  public get activeTrustedSigners(): CloudFrontResponsesFetchDistributionDistributionActiveTrustedSigners {
    return new CloudFrontResponsesFetchDistributionDistributionActiveTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get activeTrustedKeyGroups(): CloudFrontResponsesFetchDistributionDistributionActiveTrustedKeyGroups {
    return new CloudFrontResponsesFetchDistributionDistributionActiveTrustedKeyGroups(this.__scope, this.__resources, this.__input);
  }

  public get distributionConfig(): CloudFrontResponsesFetchDistributionDistributionDistributionConfig {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfig(this.__scope, this.__resources, this.__input);
  }

  public get aliasIcpRecordals(): shapes.CloudFrontAliasIcpRecordal[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.AliasICPRecordals'),
        outputPath: 'Distribution.AliasICPRecordals',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.AliasICPRecordals', props);
    return resource.getResponseField('Distribution.AliasICPRecordals') as unknown as shapes.CloudFrontAliasIcpRecordal[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionActiveTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.ActiveTrustedSigners.Enabled'),
        outputPath: 'Distribution.ActiveTrustedSigners.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.ActiveTrustedSigners.Enabled', props);
    return resource.getResponseField('Distribution.ActiveTrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.ActiveTrustedSigners.Quantity'),
        outputPath: 'Distribution.ActiveTrustedSigners.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.ActiveTrustedSigners.Quantity', props);
    return resource.getResponseField('Distribution.ActiveTrustedSigners.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontSigner[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.ActiveTrustedSigners.Items'),
        outputPath: 'Distribution.ActiveTrustedSigners.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.ActiveTrustedSigners.Items', props);
    return resource.getResponseField('Distribution.ActiveTrustedSigners.Items') as unknown as shapes.CloudFrontSigner[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionActiveTrustedKeyGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.ActiveTrustedKeyGroups.Enabled'),
        outputPath: 'Distribution.ActiveTrustedKeyGroups.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.ActiveTrustedKeyGroups.Enabled', props);
    return resource.getResponseField('Distribution.ActiveTrustedKeyGroups.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.ActiveTrustedKeyGroups.Quantity'),
        outputPath: 'Distribution.ActiveTrustedKeyGroups.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.ActiveTrustedKeyGroups.Quantity', props);
    return resource.getResponseField('Distribution.ActiveTrustedKeyGroups.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontKgKeyPairIds[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.ActiveTrustedKeyGroups.Items'),
        outputPath: 'Distribution.ActiveTrustedKeyGroups.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.ActiveTrustedKeyGroups.Items', props);
    return resource.getResponseField('Distribution.ActiveTrustedKeyGroups.Items') as unknown as shapes.CloudFrontKgKeyPairIds[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.CallerReference'),
        outputPath: 'Distribution.DistributionConfig.CallerReference',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.CallerReference', props);
    return resource.getResponseField('Distribution.DistributionConfig.CallerReference') as unknown as string;
  }

  public get aliases(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigAliases {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigAliases(this.__scope, this.__resources, this.__input);
  }

  public get defaultRootObject(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultRootObject'),
        outputPath: 'Distribution.DistributionConfig.DefaultRootObject',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultRootObject', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultRootObject') as unknown as string;
  }

  public get origins(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigOrigins {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigOrigins(this.__scope, this.__resources, this.__input);
  }

  public get originGroups(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigOriginGroups {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigOriginGroups(this.__scope, this.__resources, this.__input);
  }

  public get defaultCacheBehavior(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehavior {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehavior(this.__scope, this.__resources, this.__input);
  }

  public get cacheBehaviors(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigCacheBehaviors {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigCacheBehaviors(this.__scope, this.__resources, this.__input);
  }

  public get customErrorResponses(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigCustomErrorResponses {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigCustomErrorResponses(this.__scope, this.__resources, this.__input);
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Comment'),
        outputPath: 'Distribution.DistributionConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Comment', props);
    return resource.getResponseField('Distribution.DistributionConfig.Comment') as unknown as string;
  }

  public get logging(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigLogging {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigLogging(this.__scope, this.__resources, this.__input);
  }

  public get priceClass(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.PriceClass'),
        outputPath: 'Distribution.DistributionConfig.PriceClass',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.PriceClass', props);
    return resource.getResponseField('Distribution.DistributionConfig.PriceClass') as unknown as string;
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Enabled'),
        outputPath: 'Distribution.DistributionConfig.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.Enabled') as unknown as boolean;
  }

  public get viewerCertificate(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigViewerCertificate {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigViewerCertificate(this.__scope, this.__resources, this.__input);
  }

  public get restrictions(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigRestrictions {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigRestrictions(this.__scope, this.__resources, this.__input);
  }

  public get webAclId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.WebACLId'),
        outputPath: 'Distribution.DistributionConfig.WebACLId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.WebACLId', props);
    return resource.getResponseField('Distribution.DistributionConfig.WebACLId') as unknown as string;
  }

  public get httpVersion(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.HttpVersion'),
        outputPath: 'Distribution.DistributionConfig.HttpVersion',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.HttpVersion', props);
    return resource.getResponseField('Distribution.DistributionConfig.HttpVersion') as unknown as string;
  }

  public get isIpv6Enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.IsIPV6Enabled'),
        outputPath: 'Distribution.DistributionConfig.IsIPV6Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.IsIPV6Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.IsIPV6Enabled') as unknown as boolean;
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigAliases {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Aliases.Quantity'),
        outputPath: 'Distribution.DistributionConfig.Aliases.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Aliases.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.Aliases.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Aliases.Items'),
        outputPath: 'Distribution.DistributionConfig.Aliases.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Aliases.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.Aliases.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigOrigins {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Origins.Quantity'),
        outputPath: 'Distribution.DistributionConfig.Origins.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Origins.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.Origins.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontOrigin[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Origins.Items'),
        outputPath: 'Distribution.DistributionConfig.Origins.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Origins.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.Origins.Items') as unknown as shapes.CloudFrontOrigin[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigOriginGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.OriginGroups.Quantity'),
        outputPath: 'Distribution.DistributionConfig.OriginGroups.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.OriginGroups.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.OriginGroups.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontOriginGroup[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.OriginGroups.Items'),
        outputPath: 'Distribution.DistributionConfig.OriginGroups.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.OriginGroups.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.OriginGroups.Items') as unknown as shapes.CloudFrontOriginGroup[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehavior {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get targetOriginId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId') as unknown as string;
  }

  public get trustedSigners(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedSigners {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get trustedKeyGroups(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedKeyGroups {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedKeyGroups(this.__scope, this.__resources, this.__input);
  }

  public get viewerProtocolPolicy(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy') as unknown as string;
  }

  public get allowedMethods(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethods {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethods(this.__scope, this.__resources, this.__input);
  }

  public get smoothStreaming(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming') as unknown as boolean;
  }

  public get compress(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.Compress'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.Compress',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.Compress', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.Compress') as unknown as boolean;
  }

  public get lambdaFunctionAssociations(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations(this.__scope, this.__resources, this.__input);
  }

  public get functionAssociations(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorFunctionAssociations {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorFunctionAssociations(this.__scope, this.__resources, this.__input);
  }

  public get fieldLevelEncryptionId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId') as unknown as string;
  }

  public get realtimeLogConfigArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn') as unknown as string;
  }

  public get cachePolicyId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId') as unknown as string;
  }

  public get originRequestPolicyId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId') as unknown as string;
  }

  public get forwardedValues(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValues {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValues(this.__scope, this.__resources, this.__input);
  }

  public get minTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL') as unknown as number;
  }

  public get defaultTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL') as unknown as number;
  }

  public get maxTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL') as unknown as number;
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedKeyGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethods {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items') as unknown as string[];
  }

  public get cachedMethods(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontLambdaFunctionAssociation[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items') as unknown as shapes.CloudFrontLambdaFunctionAssociation[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorFunctionAssociations {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontFunctionAssociation[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items') as unknown as shapes.CloudFrontFunctionAssociation[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValues {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get queryString(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString') as unknown as boolean;
  }

  public get cookies(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookies {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookies(this.__scope, this.__resources, this.__input);
  }

  public get headers(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders(this.__scope, this.__resources, this.__input);
  }

  public get queryStringCacheKeys(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get forward(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward') as unknown as string;
  }

  public get whitelistedNames(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigCacheBehaviors {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.CacheBehaviors.Quantity'),
        outputPath: 'Distribution.DistributionConfig.CacheBehaviors.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.CacheBehaviors.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.CacheBehaviors.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontCacheBehavior[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.CacheBehaviors.Items'),
        outputPath: 'Distribution.DistributionConfig.CacheBehaviors.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.CacheBehaviors.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.CacheBehaviors.Items') as unknown as shapes.CloudFrontCacheBehavior[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigCustomErrorResponses {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.CustomErrorResponses.Quantity'),
        outputPath: 'Distribution.DistributionConfig.CustomErrorResponses.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.CustomErrorResponses.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.CustomErrorResponses.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontCustomErrorResponse[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.CustomErrorResponses.Items'),
        outputPath: 'Distribution.DistributionConfig.CustomErrorResponses.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.CustomErrorResponses.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.CustomErrorResponses.Items') as unknown as shapes.CloudFrontCustomErrorResponse[];
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigLogging {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Logging.Enabled'),
        outputPath: 'Distribution.DistributionConfig.Logging.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Logging.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.Enabled') as unknown as boolean;
  }

  public get includeCookies(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Logging.IncludeCookies'),
        outputPath: 'Distribution.DistributionConfig.Logging.IncludeCookies',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Logging.IncludeCookies', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.IncludeCookies') as unknown as boolean;
  }

  public get bucket(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Logging.Bucket'),
        outputPath: 'Distribution.DistributionConfig.Logging.Bucket',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Logging.Bucket', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.Bucket') as unknown as string;
  }

  public get prefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Logging.Prefix'),
        outputPath: 'Distribution.DistributionConfig.Logging.Prefix',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Logging.Prefix', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.Prefix') as unknown as string;
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigViewerCertificate {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get cloudFrontDefaultCertificate(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate') as unknown as boolean;
  }

  public get iamCertificateId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId') as unknown as string;
  }

  public get acmCertificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn') as unknown as string;
  }

  public get sslSupportMethod(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod') as unknown as string;
  }

  public get minimumProtocolVersion(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion') as unknown as string;
  }

  public get certificate(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.ViewerCertificate.Certificate'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.Certificate',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.ViewerCertificate.Certificate', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.Certificate') as unknown as string;
  }

  public get certificateSource(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.ViewerCertificate.CertificateSource'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.CertificateSource',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.ViewerCertificate.CertificateSource', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.CertificateSource') as unknown as string;
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigRestrictions {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get geoRestriction(): CloudFrontResponsesFetchDistributionDistributionDistributionConfigRestrictionsGeoRestriction {
    return new CloudFrontResponsesFetchDistributionDistributionDistributionConfigRestrictionsGeoRestriction(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchDistributionDistributionDistributionConfigRestrictionsGeoRestriction {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionRequest) {
  }

  public get restrictionType(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType'),
        outputPath: 'Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType', props);
    return resource.getResponseField('Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType') as unknown as string;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity'),
        outputPath: 'Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.Items'),
        outputPath: 'Distribution.DistributionConfig.Restrictions.GeoRestriction.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.Restrictions.GeoRestriction.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get distributionConfig(): CloudFrontResponsesFetchDistributionConfigDistributionConfig {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfig(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.CallerReference'),
        outputPath: 'DistributionConfig.CallerReference',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.CallerReference', props);
    return resource.getResponseField('DistributionConfig.CallerReference') as unknown as string;
  }

  public get aliases(): CloudFrontResponsesFetchDistributionConfigDistributionConfigAliases {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigAliases(this.__scope, this.__resources, this.__input);
  }

  public get defaultRootObject(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultRootObject'),
        outputPath: 'DistributionConfig.DefaultRootObject',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultRootObject', props);
    return resource.getResponseField('DistributionConfig.DefaultRootObject') as unknown as string;
  }

  public get origins(): CloudFrontResponsesFetchDistributionConfigDistributionConfigOrigins {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigOrigins(this.__scope, this.__resources, this.__input);
  }

  public get originGroups(): CloudFrontResponsesFetchDistributionConfigDistributionConfigOriginGroups {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigOriginGroups(this.__scope, this.__resources, this.__input);
  }

  public get defaultCacheBehavior(): CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehavior {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehavior(this.__scope, this.__resources, this.__input);
  }

  public get cacheBehaviors(): CloudFrontResponsesFetchDistributionConfigDistributionConfigCacheBehaviors {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigCacheBehaviors(this.__scope, this.__resources, this.__input);
  }

  public get customErrorResponses(): CloudFrontResponsesFetchDistributionConfigDistributionConfigCustomErrorResponses {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigCustomErrorResponses(this.__scope, this.__resources, this.__input);
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Comment'),
        outputPath: 'DistributionConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Comment', props);
    return resource.getResponseField('DistributionConfig.Comment') as unknown as string;
  }

  public get logging(): CloudFrontResponsesFetchDistributionConfigDistributionConfigLogging {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigLogging(this.__scope, this.__resources, this.__input);
  }

  public get priceClass(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.PriceClass'),
        outputPath: 'DistributionConfig.PriceClass',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.PriceClass', props);
    return resource.getResponseField('DistributionConfig.PriceClass') as unknown as string;
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Enabled'),
        outputPath: 'DistributionConfig.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Enabled', props);
    return resource.getResponseField('DistributionConfig.Enabled') as unknown as boolean;
  }

  public get viewerCertificate(): CloudFrontResponsesFetchDistributionConfigDistributionConfigViewerCertificate {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigViewerCertificate(this.__scope, this.__resources, this.__input);
  }

  public get restrictions(): CloudFrontResponsesFetchDistributionConfigDistributionConfigRestrictions {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigRestrictions(this.__scope, this.__resources, this.__input);
  }

  public get webAclId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.WebACLId'),
        outputPath: 'DistributionConfig.WebACLId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.WebACLId', props);
    return resource.getResponseField('DistributionConfig.WebACLId') as unknown as string;
  }

  public get httpVersion(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.HttpVersion'),
        outputPath: 'DistributionConfig.HttpVersion',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.HttpVersion', props);
    return resource.getResponseField('DistributionConfig.HttpVersion') as unknown as string;
  }

  public get isIpv6Enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.IsIPV6Enabled'),
        outputPath: 'DistributionConfig.IsIPV6Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.IsIPV6Enabled', props);
    return resource.getResponseField('DistributionConfig.IsIPV6Enabled') as unknown as boolean;
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigAliases {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Aliases.Quantity'),
        outputPath: 'DistributionConfig.Aliases.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Aliases.Quantity', props);
    return resource.getResponseField('DistributionConfig.Aliases.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Aliases.Items'),
        outputPath: 'DistributionConfig.Aliases.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Aliases.Items', props);
    return resource.getResponseField('DistributionConfig.Aliases.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigOrigins {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Origins.Quantity'),
        outputPath: 'DistributionConfig.Origins.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Origins.Quantity', props);
    return resource.getResponseField('DistributionConfig.Origins.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontOrigin[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Origins.Items'),
        outputPath: 'DistributionConfig.Origins.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Origins.Items', props);
    return resource.getResponseField('DistributionConfig.Origins.Items') as unknown as shapes.CloudFrontOrigin[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigOriginGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.OriginGroups.Quantity'),
        outputPath: 'DistributionConfig.OriginGroups.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.OriginGroups.Quantity', props);
    return resource.getResponseField('DistributionConfig.OriginGroups.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontOriginGroup[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.OriginGroups.Items'),
        outputPath: 'DistributionConfig.OriginGroups.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.OriginGroups.Items', props);
    return resource.getResponseField('DistributionConfig.OriginGroups.Items') as unknown as shapes.CloudFrontOriginGroup[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehavior {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get targetOriginId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TargetOriginId'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.TargetOriginId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TargetOriginId', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.TargetOriginId') as unknown as string;
  }

  public get trustedSigners(): CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorTrustedSigners {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get trustedKeyGroups(): CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorTrustedKeyGroups {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorTrustedKeyGroups(this.__scope, this.__resources, this.__input);
  }

  public get viewerProtocolPolicy(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy') as unknown as string;
  }

  public get allowedMethods(): CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorAllowedMethods {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorAllowedMethods(this.__scope, this.__resources, this.__input);
  }

  public get smoothStreaming(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.SmoothStreaming'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.SmoothStreaming',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.SmoothStreaming', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.SmoothStreaming') as unknown as boolean;
  }

  public get compress(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.Compress'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.Compress',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.Compress', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.Compress') as unknown as boolean;
  }

  public get lambdaFunctionAssociations(): CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations(this.__scope, this.__resources, this.__input);
  }

  public get functionAssociations(): CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorFunctionAssociations {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorFunctionAssociations(this.__scope, this.__resources, this.__input);
  }

  public get fieldLevelEncryptionId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId') as unknown as string;
  }

  public get realtimeLogConfigArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn') as unknown as string;
  }

  public get cachePolicyId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.CachePolicyId'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.CachePolicyId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.CachePolicyId', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.CachePolicyId') as unknown as string;
  }

  public get originRequestPolicyId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId') as unknown as string;
  }

  public get forwardedValues(): CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValues {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValues(this.__scope, this.__resources, this.__input);
  }

  public get minTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.MinTTL'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.MinTTL',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.MinTTL', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.MinTTL') as unknown as number;
  }

  public get defaultTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.DefaultTTL'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.DefaultTTL',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.DefaultTTL', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.DefaultTTL') as unknown as number;
  }

  public get maxTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.MaxTTL'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.MaxTTL',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.MaxTTL', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.MaxTTL') as unknown as number;
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorTrustedKeyGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorAllowedMethods {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items') as unknown as string[];
  }

  public get cachedMethods(): CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontLambdaFunctionAssociation[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items') as unknown as shapes.CloudFrontLambdaFunctionAssociation[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorFunctionAssociations {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontFunctionAssociation[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items') as unknown as shapes.CloudFrontFunctionAssociation[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValues {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get queryString(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString') as unknown as boolean;
  }

  public get cookies(): CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValuesCookies {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValuesCookies(this.__scope, this.__resources, this.__input);
  }

  public get headers(): CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders(this.__scope, this.__resources, this.__input);
  }

  public get queryStringCacheKeys(): CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValuesCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get forward(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward') as unknown as string;
  }

  public get whitelistedNames(): CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items'),
        outputPath: 'DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items', props);
    return resource.getResponseField('DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigCacheBehaviors {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.CacheBehaviors.Quantity'),
        outputPath: 'DistributionConfig.CacheBehaviors.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.CacheBehaviors.Quantity', props);
    return resource.getResponseField('DistributionConfig.CacheBehaviors.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontCacheBehavior[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.CacheBehaviors.Items'),
        outputPath: 'DistributionConfig.CacheBehaviors.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.CacheBehaviors.Items', props);
    return resource.getResponseField('DistributionConfig.CacheBehaviors.Items') as unknown as shapes.CloudFrontCacheBehavior[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigCustomErrorResponses {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.CustomErrorResponses.Quantity'),
        outputPath: 'DistributionConfig.CustomErrorResponses.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.CustomErrorResponses.Quantity', props);
    return resource.getResponseField('DistributionConfig.CustomErrorResponses.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontCustomErrorResponse[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.CustomErrorResponses.Items'),
        outputPath: 'DistributionConfig.CustomErrorResponses.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.CustomErrorResponses.Items', props);
    return resource.getResponseField('DistributionConfig.CustomErrorResponses.Items') as unknown as shapes.CloudFrontCustomErrorResponse[];
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigLogging {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Logging.Enabled'),
        outputPath: 'DistributionConfig.Logging.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Logging.Enabled', props);
    return resource.getResponseField('DistributionConfig.Logging.Enabled') as unknown as boolean;
  }

  public get includeCookies(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Logging.IncludeCookies'),
        outputPath: 'DistributionConfig.Logging.IncludeCookies',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Logging.IncludeCookies', props);
    return resource.getResponseField('DistributionConfig.Logging.IncludeCookies') as unknown as boolean;
  }

  public get bucket(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Logging.Bucket'),
        outputPath: 'DistributionConfig.Logging.Bucket',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Logging.Bucket', props);
    return resource.getResponseField('DistributionConfig.Logging.Bucket') as unknown as string;
  }

  public get prefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Logging.Prefix'),
        outputPath: 'DistributionConfig.Logging.Prefix',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Logging.Prefix', props);
    return resource.getResponseField('DistributionConfig.Logging.Prefix') as unknown as string;
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigViewerCertificate {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get cloudFrontDefaultCertificate(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate'),
        outputPath: 'DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate', props);
    return resource.getResponseField('DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate') as unknown as boolean;
  }

  public get iamCertificateId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.ViewerCertificate.IAMCertificateId'),
        outputPath: 'DistributionConfig.ViewerCertificate.IAMCertificateId',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.ViewerCertificate.IAMCertificateId', props);
    return resource.getResponseField('DistributionConfig.ViewerCertificate.IAMCertificateId') as unknown as string;
  }

  public get acmCertificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.ViewerCertificate.ACMCertificateArn'),
        outputPath: 'DistributionConfig.ViewerCertificate.ACMCertificateArn',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.ViewerCertificate.ACMCertificateArn', props);
    return resource.getResponseField('DistributionConfig.ViewerCertificate.ACMCertificateArn') as unknown as string;
  }

  public get sslSupportMethod(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.ViewerCertificate.SSLSupportMethod'),
        outputPath: 'DistributionConfig.ViewerCertificate.SSLSupportMethod',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.ViewerCertificate.SSLSupportMethod', props);
    return resource.getResponseField('DistributionConfig.ViewerCertificate.SSLSupportMethod') as unknown as string;
  }

  public get minimumProtocolVersion(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.ViewerCertificate.MinimumProtocolVersion'),
        outputPath: 'DistributionConfig.ViewerCertificate.MinimumProtocolVersion',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.ViewerCertificate.MinimumProtocolVersion', props);
    return resource.getResponseField('DistributionConfig.ViewerCertificate.MinimumProtocolVersion') as unknown as string;
  }

  public get certificate(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.ViewerCertificate.Certificate'),
        outputPath: 'DistributionConfig.ViewerCertificate.Certificate',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.ViewerCertificate.Certificate', props);
    return resource.getResponseField('DistributionConfig.ViewerCertificate.Certificate') as unknown as string;
  }

  public get certificateSource(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.ViewerCertificate.CertificateSource'),
        outputPath: 'DistributionConfig.ViewerCertificate.CertificateSource',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.ViewerCertificate.CertificateSource', props);
    return resource.getResponseField('DistributionConfig.ViewerCertificate.CertificateSource') as unknown as string;
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigRestrictions {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get geoRestriction(): CloudFrontResponsesFetchDistributionConfigDistributionConfigRestrictionsGeoRestriction {
    return new CloudFrontResponsesFetchDistributionConfigDistributionConfigRestrictionsGeoRestriction(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchDistributionConfigDistributionConfigRestrictionsGeoRestriction {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetDistributionConfigRequest) {
  }

  public get restrictionType(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Restrictions.GeoRestriction.RestrictionType'),
        outputPath: 'DistributionConfig.Restrictions.GeoRestriction.RestrictionType',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Restrictions.GeoRestriction.RestrictionType', props);
    return resource.getResponseField('DistributionConfig.Restrictions.GeoRestriction.RestrictionType') as unknown as string;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Restrictions.GeoRestriction.Quantity'),
        outputPath: 'DistributionConfig.Restrictions.GeoRestriction.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Restrictions.GeoRestriction.Quantity', props);
    return resource.getResponseField('DistributionConfig.Restrictions.GeoRestriction.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetDistributionConfig.DistributionConfig.Restrictions.GeoRestriction.Items'),
        outputPath: 'DistributionConfig.Restrictions.GeoRestriction.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetDistributionConfig.DistributionConfig.Restrictions.GeoRestriction.Items', props);
    return resource.getResponseField('DistributionConfig.Restrictions.GeoRestriction.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionRequest) {
  }

  public get fieldLevelEncryption(): CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryption {
    return new CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryption(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryption',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryption.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryption.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryption',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryption.FieldLevelEncryption.Id'),
        outputPath: 'FieldLevelEncryption.Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryption.FieldLevelEncryption.Id', props);
    return resource.getResponseField('FieldLevelEncryption.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryption',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryption.FieldLevelEncryption.LastModifiedTime'),
        outputPath: 'FieldLevelEncryption.LastModifiedTime',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryption.FieldLevelEncryption.LastModifiedTime', props);
    return resource.getResponseField('FieldLevelEncryption.LastModifiedTime') as unknown as string;
  }

  public get fieldLevelEncryptionConfig(): CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfig {
    return new CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryption',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.CallerReference'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.CallerReference',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.CallerReference', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.CallerReference') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryption',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.Comment'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.Comment', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.Comment') as unknown as string;
  }

  public get queryArgProfileConfig(): CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfig {
    return new CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfig(this.__scope, this.__resources, this.__input);
  }

  public get contentTypeProfileConfig(): CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfig {
    return new CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionRequest) {
  }

  public get forwardWhenQueryArgProfileIsUnknown(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryption',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown') as unknown as boolean;
  }

  public get queryArgProfiles(): CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles {
    return new CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryption',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontQueryArgProfile[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryption',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items') as unknown as shapes.CloudFrontQueryArgProfile[];
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionRequest) {
  }

  public get forwardWhenContentTypeIsUnknown(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryption',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown') as unknown as boolean;
  }

  public get contentTypeProfiles(): CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles {
    return new CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryption',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontContentTypeProfile[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryption',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryption.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items') as unknown as shapes.CloudFrontContentTypeProfile[];
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionConfigRequest) {
  }

  public get fieldLevelEncryptionConfig(): CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfig {
    return new CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfig(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionConfig.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionConfig.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionConfigRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.CallerReference'),
        outputPath: 'FieldLevelEncryptionConfig.CallerReference',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.CallerReference', props);
    return resource.getResponseField('FieldLevelEncryptionConfig.CallerReference') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.Comment'),
        outputPath: 'FieldLevelEncryptionConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.Comment', props);
    return resource.getResponseField('FieldLevelEncryptionConfig.Comment') as unknown as string;
  }

  public get queryArgProfileConfig(): CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfig {
    return new CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfig(this.__scope, this.__resources, this.__input);
  }

  public get contentTypeProfileConfig(): CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfig {
    return new CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionConfigRequest) {
  }

  public get forwardWhenQueryArgProfileIsUnknown(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown'),
        outputPath: 'FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown', props);
    return resource.getResponseField('FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown') as unknown as boolean;
  }

  public get queryArgProfiles(): CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles {
    return new CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity'),
        outputPath: 'FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity', props);
    return resource.getResponseField('FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontQueryArgProfile[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items'),
        outputPath: 'FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items', props);
    return resource.getResponseField('FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items') as unknown as shapes.CloudFrontQueryArgProfile[];
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionConfigRequest) {
  }

  public get forwardWhenContentTypeIsUnknown(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown'),
        outputPath: 'FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown', props);
    return resource.getResponseField('FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown') as unknown as boolean;
  }

  public get contentTypeProfiles(): CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles {
    return new CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity'),
        outputPath: 'FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity', props);
    return resource.getResponseField('FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontContentTypeProfile[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items'),
        outputPath: 'FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionConfig.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items', props);
    return resource.getResponseField('FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items') as unknown as shapes.CloudFrontContentTypeProfile[];
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionProfile {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionProfileRequest) {
  }

  public get fieldLevelEncryptionProfile(): CloudFrontResponsesFetchFieldLevelEncryptionProfileFieldLevelEncryptionProfile {
    return new CloudFrontResponsesFetchFieldLevelEncryptionProfileFieldLevelEncryptionProfile(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfile.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfile.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionProfileFieldLevelEncryptionProfile {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionProfileRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.Id'),
        outputPath: 'FieldLevelEncryptionProfile.Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.Id', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.LastModifiedTime'),
        outputPath: 'FieldLevelEncryptionProfile.LastModifiedTime',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.LastModifiedTime', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.LastModifiedTime') as unknown as string;
  }

  public get fieldLevelEncryptionProfileConfig(): CloudFrontResponsesFetchFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig {
    return new CloudFrontResponsesFetchFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionProfileRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Name'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Name',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Name', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Name') as unknown as string;
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.CallerReference'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.CallerReference',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.CallerReference', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.CallerReference') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Comment'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Comment', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Comment') as unknown as string;
  }

  public get encryptionEntities(): CloudFrontResponsesFetchFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntities {
    return new CloudFrontResponsesFetchFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntities(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntities {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionProfileRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontEncryptionEntity[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items') as unknown as shapes.CloudFrontEncryptionEntity[];
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionProfileConfigRequest) {
  }

  public get fieldLevelEncryptionProfileConfig(): CloudFrontResponsesFetchFieldLevelEncryptionProfileConfigFieldLevelEncryptionProfileConfig {
    return new CloudFrontResponsesFetchFieldLevelEncryptionProfileConfigFieldLevelEncryptionProfileConfig(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfileConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfileConfig.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfileConfig.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionProfileConfigFieldLevelEncryptionProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionProfileConfigRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfileConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfileConfig.FieldLevelEncryptionProfileConfig.Name'),
        outputPath: 'FieldLevelEncryptionProfileConfig.Name',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfileConfig.FieldLevelEncryptionProfileConfig.Name', props);
    return resource.getResponseField('FieldLevelEncryptionProfileConfig.Name') as unknown as string;
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfileConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfileConfig.FieldLevelEncryptionProfileConfig.CallerReference'),
        outputPath: 'FieldLevelEncryptionProfileConfig.CallerReference',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfileConfig.FieldLevelEncryptionProfileConfig.CallerReference', props);
    return resource.getResponseField('FieldLevelEncryptionProfileConfig.CallerReference') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfileConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfileConfig.FieldLevelEncryptionProfileConfig.Comment'),
        outputPath: 'FieldLevelEncryptionProfileConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfileConfig.FieldLevelEncryptionProfileConfig.Comment', props);
    return resource.getResponseField('FieldLevelEncryptionProfileConfig.Comment') as unknown as string;
  }

  public get encryptionEntities(): CloudFrontResponsesFetchFieldLevelEncryptionProfileConfigFieldLevelEncryptionProfileConfigEncryptionEntities {
    return new CloudFrontResponsesFetchFieldLevelEncryptionProfileConfigFieldLevelEncryptionProfileConfigEncryptionEntities(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchFieldLevelEncryptionProfileConfigFieldLevelEncryptionProfileConfigEncryptionEntities {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFieldLevelEncryptionProfileConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfileConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfileConfig.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity'),
        outputPath: 'FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfileConfig.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity', props);
    return resource.getResponseField('FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontEncryptionEntity[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFieldLevelEncryptionProfileConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFieldLevelEncryptionProfileConfig.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items'),
        outputPath: 'FieldLevelEncryptionProfileConfig.EncryptionEntities.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFieldLevelEncryptionProfileConfig.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items', props);
    return resource.getResponseField('FieldLevelEncryptionProfileConfig.EncryptionEntities.Items') as unknown as shapes.CloudFrontEncryptionEntity[];
  }

}

export class CloudFrontResponsesFetchFunction {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetFunctionRequest) {
  }

  public get functionCode(): any {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFunction.FunctionCode'),
        outputPath: 'FunctionCode',
        parameters: {
          Name: this.__input.name,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFunction.FunctionCode', props);
    return resource.getResponseField('FunctionCode') as unknown as any;
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFunction.ETag'),
        outputPath: 'ETag',
        parameters: {
          Name: this.__input.name,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFunction.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

  public get contentType(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetFunction.ContentType'),
        outputPath: 'ContentType',
        parameters: {
          Name: this.__input.name,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetFunction.ContentType', props);
    return resource.getResponseField('ContentType') as unknown as string;
  }

}

export class CloudFrontResponsesFetchInvalidation {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetInvalidationRequest) {
  }

  public get invalidation(): CloudFrontResponsesFetchInvalidationInvalidation {
    return new CloudFrontResponsesFetchInvalidationInvalidation(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchInvalidationInvalidation {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetInvalidationRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetInvalidation.Invalidation.Id'),
        outputPath: 'Invalidation.Id',
        parameters: {
          DistributionId: this.__input.distributionId,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetInvalidation.Invalidation.Id', props);
    return resource.getResponseField('Invalidation.Id') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetInvalidation.Invalidation.Status'),
        outputPath: 'Invalidation.Status',
        parameters: {
          DistributionId: this.__input.distributionId,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetInvalidation.Invalidation.Status', props);
    return resource.getResponseField('Invalidation.Status') as unknown as string;
  }

  public get createTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetInvalidation.Invalidation.CreateTime'),
        outputPath: 'Invalidation.CreateTime',
        parameters: {
          DistributionId: this.__input.distributionId,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetInvalidation.Invalidation.CreateTime', props);
    return resource.getResponseField('Invalidation.CreateTime') as unknown as string;
  }

  public get invalidationBatch(): CloudFrontResponsesFetchInvalidationInvalidationInvalidationBatch {
    return new CloudFrontResponsesFetchInvalidationInvalidationInvalidationBatch(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchInvalidationInvalidationInvalidationBatch {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetInvalidationRequest) {
  }

  public get paths(): CloudFrontResponsesFetchInvalidationInvalidationInvalidationBatchPaths {
    return new CloudFrontResponsesFetchInvalidationInvalidationInvalidationBatchPaths(this.__scope, this.__resources, this.__input);
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetInvalidation.Invalidation.InvalidationBatch.CallerReference'),
        outputPath: 'Invalidation.InvalidationBatch.CallerReference',
        parameters: {
          DistributionId: this.__input.distributionId,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetInvalidation.Invalidation.InvalidationBatch.CallerReference', props);
    return resource.getResponseField('Invalidation.InvalidationBatch.CallerReference') as unknown as string;
  }

}

export class CloudFrontResponsesFetchInvalidationInvalidationInvalidationBatchPaths {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetInvalidationRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetInvalidation.Invalidation.InvalidationBatch.Paths.Quantity'),
        outputPath: 'Invalidation.InvalidationBatch.Paths.Quantity',
        parameters: {
          DistributionId: this.__input.distributionId,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetInvalidation.Invalidation.InvalidationBatch.Paths.Quantity', props);
    return resource.getResponseField('Invalidation.InvalidationBatch.Paths.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getInvalidation',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetInvalidation.Invalidation.InvalidationBatch.Paths.Items'),
        outputPath: 'Invalidation.InvalidationBatch.Paths.Items',
        parameters: {
          DistributionId: this.__input.distributionId,
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetInvalidation.Invalidation.InvalidationBatch.Paths.Items', props);
    return resource.getResponseField('Invalidation.InvalidationBatch.Paths.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchKeyGroup {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetKeyGroupRequest) {
  }

  public get keyGroup(): CloudFrontResponsesFetchKeyGroupKeyGroup {
    return new CloudFrontResponsesFetchKeyGroupKeyGroup(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetKeyGroup.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetKeyGroup.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchKeyGroupKeyGroup {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetKeyGroupRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetKeyGroup.KeyGroup.Id'),
        outputPath: 'KeyGroup.Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetKeyGroup.KeyGroup.Id', props);
    return resource.getResponseField('KeyGroup.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetKeyGroup.KeyGroup.LastModifiedTime'),
        outputPath: 'KeyGroup.LastModifiedTime',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetKeyGroup.KeyGroup.LastModifiedTime', props);
    return resource.getResponseField('KeyGroup.LastModifiedTime') as unknown as string;
  }

  public get keyGroupConfig(): CloudFrontResponsesFetchKeyGroupKeyGroupKeyGroupConfig {
    return new CloudFrontResponsesFetchKeyGroupKeyGroupKeyGroupConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchKeyGroupKeyGroupKeyGroupConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetKeyGroupRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetKeyGroup.KeyGroup.KeyGroupConfig.Name'),
        outputPath: 'KeyGroup.KeyGroupConfig.Name',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetKeyGroup.KeyGroup.KeyGroupConfig.Name', props);
    return resource.getResponseField('KeyGroup.KeyGroupConfig.Name') as unknown as string;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetKeyGroup.KeyGroup.KeyGroupConfig.Items'),
        outputPath: 'KeyGroup.KeyGroupConfig.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetKeyGroup.KeyGroup.KeyGroupConfig.Items', props);
    return resource.getResponseField('KeyGroup.KeyGroupConfig.Items') as unknown as string[];
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetKeyGroup.KeyGroup.KeyGroupConfig.Comment'),
        outputPath: 'KeyGroup.KeyGroupConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetKeyGroup.KeyGroup.KeyGroupConfig.Comment', props);
    return resource.getResponseField('KeyGroup.KeyGroupConfig.Comment') as unknown as string;
  }

}

export class CloudFrontResponsesFetchKeyGroupConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetKeyGroupConfigRequest) {
  }

  public get keyGroupConfig(): CloudFrontResponsesFetchKeyGroupConfigKeyGroupConfig {
    return new CloudFrontResponsesFetchKeyGroupConfigKeyGroupConfig(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getKeyGroupConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetKeyGroupConfig.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetKeyGroupConfig.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchKeyGroupConfigKeyGroupConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetKeyGroupConfigRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getKeyGroupConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetKeyGroupConfig.KeyGroupConfig.Name'),
        outputPath: 'KeyGroupConfig.Name',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetKeyGroupConfig.KeyGroupConfig.Name', props);
    return resource.getResponseField('KeyGroupConfig.Name') as unknown as string;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getKeyGroupConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetKeyGroupConfig.KeyGroupConfig.Items'),
        outputPath: 'KeyGroupConfig.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetKeyGroupConfig.KeyGroupConfig.Items', props);
    return resource.getResponseField('KeyGroupConfig.Items') as unknown as string[];
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getKeyGroupConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetKeyGroupConfig.KeyGroupConfig.Comment'),
        outputPath: 'KeyGroupConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetKeyGroupConfig.KeyGroupConfig.Comment', props);
    return resource.getResponseField('KeyGroupConfig.Comment') as unknown as string;
  }

}

export class CloudFrontResponsesFetchMonitoringSubscription {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetMonitoringSubscriptionRequest) {
  }

  public get monitoringSubscription(): CloudFrontResponsesFetchMonitoringSubscriptionMonitoringSubscription {
    return new CloudFrontResponsesFetchMonitoringSubscriptionMonitoringSubscription(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchMonitoringSubscriptionMonitoringSubscription {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetMonitoringSubscriptionRequest) {
  }

  public get realtimeMetricsSubscriptionConfig(): CloudFrontResponsesFetchMonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig {
    return new CloudFrontResponsesFetchMonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchMonitoringSubscriptionMonitoringSubscriptionRealtimeMetricsSubscriptionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetMonitoringSubscriptionRequest) {
  }

  public get realtimeMetricsSubscriptionStatus(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getMonitoringSubscription',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetMonitoringSubscription.MonitoringSubscription.RealtimeMetricsSubscriptionConfig.RealtimeMetricsSubscriptionStatus'),
        outputPath: 'MonitoringSubscription.RealtimeMetricsSubscriptionConfig.RealtimeMetricsSubscriptionStatus',
        parameters: {
          DistributionId: this.__input.distributionId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetMonitoringSubscription.MonitoringSubscription.RealtimeMetricsSubscriptionConfig.RealtimeMetricsSubscriptionStatus', props);
    return resource.getResponseField('MonitoringSubscription.RealtimeMetricsSubscriptionConfig.RealtimeMetricsSubscriptionStatus') as unknown as string;
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicy {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyRequest) {
  }

  public get originRequestPolicy(): CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicy {
    return new CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicy(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicy {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.Id'),
        outputPath: 'OriginRequestPolicy.Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.Id', props);
    return resource.getResponseField('OriginRequestPolicy.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.LastModifiedTime'),
        outputPath: 'OriginRequestPolicy.LastModifiedTime',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.LastModifiedTime', props);
    return resource.getResponseField('OriginRequestPolicy.LastModifiedTime') as unknown as string;
  }

  public get originRequestPolicyConfig(): CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfig {
    return new CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.Comment'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.Comment', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.Comment') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.Name'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.Name',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.Name', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.Name') as unknown as string;
  }

  public get headersConfig(): CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfig {
    return new CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfig(this.__scope, this.__resources, this.__input);
  }

  public get cookiesConfig(): CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfig {
    return new CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfig(this.__scope, this.__resources, this.__input);
  }

  public get queryStringsConfig(): CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfig {
    return new CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyRequest) {
  }

  public get headerBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior') as unknown as string;
  }

  public get headers(): CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfigHeaders {
    return new CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfigHeaders(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfigHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Items'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Items', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyRequest) {
  }

  public get cookieBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior') as unknown as string;
  }

  public get cookies(): CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfigCookies {
    return new CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfigCookies(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfigCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyRequest) {
  }

  public get queryStringBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior') as unknown as string;
  }

  public get queryStrings(): CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfigQueryStrings {
    return new CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfigQueryStrings(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfigQueryStrings {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyConfigRequest) {
  }

  public get originRequestPolicyConfig(): CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfig {
    return new CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfig(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicyConfig.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicyConfig.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyConfigRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.Comment'),
        outputPath: 'OriginRequestPolicyConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.Comment', props);
    return resource.getResponseField('OriginRequestPolicyConfig.Comment') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.Name'),
        outputPath: 'OriginRequestPolicyConfig.Name',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.Name', props);
    return resource.getResponseField('OriginRequestPolicyConfig.Name') as unknown as string;
  }

  public get headersConfig(): CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigHeadersConfig {
    return new CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigHeadersConfig(this.__scope, this.__resources, this.__input);
  }

  public get cookiesConfig(): CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigCookiesConfig {
    return new CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigCookiesConfig(this.__scope, this.__resources, this.__input);
  }

  public get queryStringsConfig(): CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigQueryStringsConfig {
    return new CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigQueryStringsConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigHeadersConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyConfigRequest) {
  }

  public get headerBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior'),
        outputPath: 'OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior', props);
    return resource.getResponseField('OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior') as unknown as string;
  }

  public get headers(): CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigHeadersConfigHeaders {
    return new CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigHeadersConfigHeaders(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigHeadersConfigHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity'),
        outputPath: 'OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity', props);
    return resource.getResponseField('OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.HeadersConfig.Headers.Items'),
        outputPath: 'OriginRequestPolicyConfig.HeadersConfig.Headers.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.HeadersConfig.Headers.Items', props);
    return resource.getResponseField('OriginRequestPolicyConfig.HeadersConfig.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigCookiesConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyConfigRequest) {
  }

  public get cookieBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior'),
        outputPath: 'OriginRequestPolicyConfig.CookiesConfig.CookieBehavior',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior', props);
    return resource.getResponseField('OriginRequestPolicyConfig.CookiesConfig.CookieBehavior') as unknown as string;
  }

  public get cookies(): CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigCookiesConfigCookies {
    return new CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigCookiesConfigCookies(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigCookiesConfigCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity'),
        outputPath: 'OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity', props);
    return resource.getResponseField('OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items'),
        outputPath: 'OriginRequestPolicyConfig.CookiesConfig.Cookies.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items', props);
    return resource.getResponseField('OriginRequestPolicyConfig.CookiesConfig.Cookies.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigQueryStringsConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyConfigRequest) {
  }

  public get queryStringBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior'),
        outputPath: 'OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior', props);
    return resource.getResponseField('OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior') as unknown as string;
  }

  public get queryStrings(): CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigQueryStringsConfigQueryStrings {
    return new CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigQueryStringsConfigQueryStrings(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchOriginRequestPolicyConfigOriginRequestPolicyConfigQueryStringsConfigQueryStrings {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetOriginRequestPolicyConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity'),
        outputPath: 'OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity', props);
    return resource.getResponseField('OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getOriginRequestPolicyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items'),
        outputPath: 'OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetOriginRequestPolicyConfig.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items', props);
    return resource.getResponseField('OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchPublicKey {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetPublicKeyRequest) {
  }

  public get publicKey(): CloudFrontResponsesFetchPublicKeyPublicKey {
    return new CloudFrontResponsesFetchPublicKeyPublicKey(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetPublicKey.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetPublicKey.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchPublicKeyPublicKey {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetPublicKeyRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetPublicKey.PublicKey.Id'),
        outputPath: 'PublicKey.Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetPublicKey.PublicKey.Id', props);
    return resource.getResponseField('PublicKey.Id') as unknown as string;
  }

  public get createdTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetPublicKey.PublicKey.CreatedTime'),
        outputPath: 'PublicKey.CreatedTime',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetPublicKey.PublicKey.CreatedTime', props);
    return resource.getResponseField('PublicKey.CreatedTime') as unknown as string;
  }

  public get publicKeyConfig(): CloudFrontResponsesFetchPublicKeyPublicKeyPublicKeyConfig {
    return new CloudFrontResponsesFetchPublicKeyPublicKeyPublicKeyConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchPublicKeyPublicKeyPublicKeyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetPublicKeyRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetPublicKey.PublicKey.PublicKeyConfig.CallerReference'),
        outputPath: 'PublicKey.PublicKeyConfig.CallerReference',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetPublicKey.PublicKey.PublicKeyConfig.CallerReference', props);
    return resource.getResponseField('PublicKey.PublicKeyConfig.CallerReference') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetPublicKey.PublicKey.PublicKeyConfig.Name'),
        outputPath: 'PublicKey.PublicKeyConfig.Name',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetPublicKey.PublicKey.PublicKeyConfig.Name', props);
    return resource.getResponseField('PublicKey.PublicKeyConfig.Name') as unknown as string;
  }

  public get encodedKey(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetPublicKey.PublicKey.PublicKeyConfig.EncodedKey'),
        outputPath: 'PublicKey.PublicKeyConfig.EncodedKey',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetPublicKey.PublicKey.PublicKeyConfig.EncodedKey', props);
    return resource.getResponseField('PublicKey.PublicKeyConfig.EncodedKey') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getPublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetPublicKey.PublicKey.PublicKeyConfig.Comment'),
        outputPath: 'PublicKey.PublicKeyConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetPublicKey.PublicKey.PublicKeyConfig.Comment', props);
    return resource.getResponseField('PublicKey.PublicKeyConfig.Comment') as unknown as string;
  }

}

export class CloudFrontResponsesFetchPublicKeyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetPublicKeyConfigRequest) {
  }

  public get publicKeyConfig(): CloudFrontResponsesFetchPublicKeyConfigPublicKeyConfig {
    return new CloudFrontResponsesFetchPublicKeyConfigPublicKeyConfig(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getPublicKeyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetPublicKeyConfig.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetPublicKeyConfig.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchPublicKeyConfigPublicKeyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetPublicKeyConfigRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getPublicKeyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetPublicKeyConfig.PublicKeyConfig.CallerReference'),
        outputPath: 'PublicKeyConfig.CallerReference',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetPublicKeyConfig.PublicKeyConfig.CallerReference', props);
    return resource.getResponseField('PublicKeyConfig.CallerReference') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getPublicKeyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetPublicKeyConfig.PublicKeyConfig.Name'),
        outputPath: 'PublicKeyConfig.Name',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetPublicKeyConfig.PublicKeyConfig.Name', props);
    return resource.getResponseField('PublicKeyConfig.Name') as unknown as string;
  }

  public get encodedKey(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getPublicKeyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetPublicKeyConfig.PublicKeyConfig.EncodedKey'),
        outputPath: 'PublicKeyConfig.EncodedKey',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetPublicKeyConfig.PublicKeyConfig.EncodedKey', props);
    return resource.getResponseField('PublicKeyConfig.EncodedKey') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getPublicKeyConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetPublicKeyConfig.PublicKeyConfig.Comment'),
        outputPath: 'PublicKeyConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetPublicKeyConfig.PublicKeyConfig.Comment', props);
    return resource.getResponseField('PublicKeyConfig.Comment') as unknown as string;
  }

}

export class CloudFrontResponsesFetchRealtimeLogConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetRealtimeLogConfigRequest) {
  }

  public get realtimeLogConfig(): CloudFrontResponsesFetchRealtimeLogConfigRealtimeLogConfig {
    return new CloudFrontResponsesFetchRealtimeLogConfigRealtimeLogConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchRealtimeLogConfigRealtimeLogConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetRealtimeLogConfigRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetRealtimeLogConfig.RealtimeLogConfig.ARN'),
        outputPath: 'RealtimeLogConfig.ARN',
        parameters: {
          Name: this.__input.name,
          ARN: this.__input.arn,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetRealtimeLogConfig.RealtimeLogConfig.ARN', props);
    return resource.getResponseField('RealtimeLogConfig.ARN') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetRealtimeLogConfig.RealtimeLogConfig.Name'),
        outputPath: 'RealtimeLogConfig.Name',
        parameters: {
          Name: this.__input.name,
          ARN: this.__input.arn,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetRealtimeLogConfig.RealtimeLogConfig.Name', props);
    return resource.getResponseField('RealtimeLogConfig.Name') as unknown as string;
  }

  public get samplingRate(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetRealtimeLogConfig.RealtimeLogConfig.SamplingRate'),
        outputPath: 'RealtimeLogConfig.SamplingRate',
        parameters: {
          Name: this.__input.name,
          ARN: this.__input.arn,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetRealtimeLogConfig.RealtimeLogConfig.SamplingRate', props);
    return resource.getResponseField('RealtimeLogConfig.SamplingRate') as unknown as number;
  }

  public get endPoints(): shapes.CloudFrontEndPoint[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetRealtimeLogConfig.RealtimeLogConfig.EndPoints'),
        outputPath: 'RealtimeLogConfig.EndPoints',
        parameters: {
          Name: this.__input.name,
          ARN: this.__input.arn,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetRealtimeLogConfig.RealtimeLogConfig.EndPoints', props);
    return resource.getResponseField('RealtimeLogConfig.EndPoints') as unknown as shapes.CloudFrontEndPoint[];
  }

  public get fields(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetRealtimeLogConfig.RealtimeLogConfig.Fields'),
        outputPath: 'RealtimeLogConfig.Fields',
        parameters: {
          Name: this.__input.name,
          ARN: this.__input.arn,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetRealtimeLogConfig.RealtimeLogConfig.Fields', props);
    return resource.getResponseField('RealtimeLogConfig.Fields') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchStreamingDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionRequest) {
  }

  public get streamingDistribution(): CloudFrontResponsesFetchStreamingDistributionStreamingDistribution {
    return new CloudFrontResponsesFetchStreamingDistributionStreamingDistribution(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchStreamingDistributionStreamingDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.Id'),
        outputPath: 'StreamingDistribution.Id',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.Id', props);
    return resource.getResponseField('StreamingDistribution.Id') as unknown as string;
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.ARN'),
        outputPath: 'StreamingDistribution.ARN',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.ARN', props);
    return resource.getResponseField('StreamingDistribution.ARN') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.Status'),
        outputPath: 'StreamingDistribution.Status',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.Status', props);
    return resource.getResponseField('StreamingDistribution.Status') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.LastModifiedTime'),
        outputPath: 'StreamingDistribution.LastModifiedTime',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.LastModifiedTime', props);
    return resource.getResponseField('StreamingDistribution.LastModifiedTime') as unknown as string;
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.DomainName'),
        outputPath: 'StreamingDistribution.DomainName',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.DomainName', props);
    return resource.getResponseField('StreamingDistribution.DomainName') as unknown as string;
  }

  public get activeTrustedSigners(): CloudFrontResponsesFetchStreamingDistributionStreamingDistributionActiveTrustedSigners {
    return new CloudFrontResponsesFetchStreamingDistributionStreamingDistributionActiveTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get streamingDistributionConfig(): CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfig {
    return new CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesFetchStreamingDistributionStreamingDistributionActiveTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Enabled'),
        outputPath: 'StreamingDistribution.ActiveTrustedSigners.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Enabled', props);
    return resource.getResponseField('StreamingDistribution.ActiveTrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Quantity'),
        outputPath: 'StreamingDistribution.ActiveTrustedSigners.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Quantity', props);
    return resource.getResponseField('StreamingDistribution.ActiveTrustedSigners.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontSigner[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Items'),
        outputPath: 'StreamingDistribution.ActiveTrustedSigners.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Items', props);
    return resource.getResponseField('StreamingDistribution.ActiveTrustedSigners.Items') as unknown as shapes.CloudFrontSigner[];
  }

}

export class CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.CallerReference'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.CallerReference',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.CallerReference', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.CallerReference') as unknown as string;
  }

  public get s3Origin(): CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfigS3Origin {
    return new CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfigS3Origin(this.__scope, this.__resources, this.__input);
  }

  public get aliases(): CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfigAliases {
    return new CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfigAliases(this.__scope, this.__resources, this.__input);
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Comment'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Comment', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Comment') as unknown as string;
  }

  public get logging(): CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfigLogging {
    return new CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfigLogging(this.__scope, this.__resources, this.__input);
  }

  public get trustedSigners(): CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfigTrustedSigners {
    return new CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfigTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get priceClass(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.PriceClass'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.PriceClass',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.PriceClass', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.PriceClass') as unknown as string;
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Enabled'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Enabled', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Enabled') as unknown as boolean;
  }

}

export class CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfigS3Origin {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionRequest) {
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName') as unknown as string;
  }

  public get originAccessIdentity(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity') as unknown as string;
  }

}

export class CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfigAliases {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Aliases.Items'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Aliases.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Aliases.Items', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Aliases.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfigLogging {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Enabled'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Logging.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Enabled', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Logging.Enabled') as unknown as boolean;
  }

  public get bucket(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Bucket'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Logging.Bucket',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Bucket', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Logging.Bucket') as unknown as string;
  }

  public get prefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Prefix'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Logging.Prefix',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Prefix', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Logging.Prefix') as unknown as string;
  }

}

export class CloudFrontResponsesFetchStreamingDistributionStreamingDistributionStreamingDistributionConfigTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchStreamingDistributionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionConfigRequest) {
  }

  public get streamingDistributionConfig(): CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfig {
    return new CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfig(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.ETag'),
        outputPath: 'ETag',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionConfigRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.CallerReference'),
        outputPath: 'StreamingDistributionConfig.CallerReference',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.CallerReference', props);
    return resource.getResponseField('StreamingDistributionConfig.CallerReference') as unknown as string;
  }

  public get s3Origin(): CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfigS3Origin {
    return new CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfigS3Origin(this.__scope, this.__resources, this.__input);
  }

  public get aliases(): CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfigAliases {
    return new CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfigAliases(this.__scope, this.__resources, this.__input);
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.Comment'),
        outputPath: 'StreamingDistributionConfig.Comment',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.Comment', props);
    return resource.getResponseField('StreamingDistributionConfig.Comment') as unknown as string;
  }

  public get logging(): CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfigLogging {
    return new CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfigLogging(this.__scope, this.__resources, this.__input);
  }

  public get trustedSigners(): CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfigTrustedSigners {
    return new CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfigTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get priceClass(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.PriceClass'),
        outputPath: 'StreamingDistributionConfig.PriceClass',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.PriceClass', props);
    return resource.getResponseField('StreamingDistributionConfig.PriceClass') as unknown as string;
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.Enabled'),
        outputPath: 'StreamingDistributionConfig.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.Enabled', props);
    return resource.getResponseField('StreamingDistributionConfig.Enabled') as unknown as boolean;
  }

}

export class CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfigS3Origin {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionConfigRequest) {
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.S3Origin.DomainName'),
        outputPath: 'StreamingDistributionConfig.S3Origin.DomainName',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.S3Origin.DomainName', props);
    return resource.getResponseField('StreamingDistributionConfig.S3Origin.DomainName') as unknown as string;
  }

  public get originAccessIdentity(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.S3Origin.OriginAccessIdentity'),
        outputPath: 'StreamingDistributionConfig.S3Origin.OriginAccessIdentity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.S3Origin.OriginAccessIdentity', props);
    return resource.getResponseField('StreamingDistributionConfig.S3Origin.OriginAccessIdentity') as unknown as string;
  }

}

export class CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfigAliases {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.Aliases.Quantity'),
        outputPath: 'StreamingDistributionConfig.Aliases.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.Aliases.Quantity', props);
    return resource.getResponseField('StreamingDistributionConfig.Aliases.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.Aliases.Items'),
        outputPath: 'StreamingDistributionConfig.Aliases.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.Aliases.Items', props);
    return resource.getResponseField('StreamingDistributionConfig.Aliases.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfigLogging {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionConfigRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.Logging.Enabled'),
        outputPath: 'StreamingDistributionConfig.Logging.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.Logging.Enabled', props);
    return resource.getResponseField('StreamingDistributionConfig.Logging.Enabled') as unknown as boolean;
  }

  public get bucket(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.Logging.Bucket'),
        outputPath: 'StreamingDistributionConfig.Logging.Bucket',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.Logging.Bucket', props);
    return resource.getResponseField('StreamingDistributionConfig.Logging.Bucket') as unknown as string;
  }

  public get prefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.Logging.Prefix'),
        outputPath: 'StreamingDistributionConfig.Logging.Prefix',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.Logging.Prefix', props);
    return resource.getResponseField('StreamingDistributionConfig.Logging.Prefix') as unknown as string;
  }

}

export class CloudFrontResponsesFetchStreamingDistributionConfigStreamingDistributionConfigTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontGetStreamingDistributionConfigRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.TrustedSigners.Enabled'),
        outputPath: 'StreamingDistributionConfig.TrustedSigners.Enabled',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.TrustedSigners.Enabled', props);
    return resource.getResponseField('StreamingDistributionConfig.TrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.TrustedSigners.Quantity'),
        outputPath: 'StreamingDistributionConfig.TrustedSigners.Quantity',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.TrustedSigners.Quantity', props);
    return resource.getResponseField('StreamingDistributionConfig.TrustedSigners.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'getStreamingDistributionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.GetStreamingDistributionConfig.StreamingDistributionConfig.TrustedSigners.Items'),
        outputPath: 'StreamingDistributionConfig.TrustedSigners.Items',
        parameters: {
          Id: this.__input.id,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'GetStreamingDistributionConfig.StreamingDistributionConfig.TrustedSigners.Items', props);
    return resource.getResponseField('StreamingDistributionConfig.TrustedSigners.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesListCachePolicies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListCachePoliciesRequest) {
  }

  public get cachePolicyList(): CloudFrontResponsesListCachePoliciesCachePolicyList {
    return new CloudFrontResponsesListCachePoliciesCachePolicyList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListCachePoliciesCachePolicyList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListCachePoliciesRequest) {
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listCachePolicies',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListCachePolicies.CachePolicyList.NextMarker'),
        outputPath: 'CachePolicyList.NextMarker',
        parameters: {
          Type: this.__input.type,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListCachePolicies.CachePolicyList.NextMarker', props);
    return resource.getResponseField('CachePolicyList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listCachePolicies',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListCachePolicies.CachePolicyList.MaxItems'),
        outputPath: 'CachePolicyList.MaxItems',
        parameters: {
          Type: this.__input.type,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListCachePolicies.CachePolicyList.MaxItems', props);
    return resource.getResponseField('CachePolicyList.MaxItems') as unknown as number;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listCachePolicies',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListCachePolicies.CachePolicyList.Quantity'),
        outputPath: 'CachePolicyList.Quantity',
        parameters: {
          Type: this.__input.type,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListCachePolicies.CachePolicyList.Quantity', props);
    return resource.getResponseField('CachePolicyList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontCachePolicySummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listCachePolicies',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListCachePolicies.CachePolicyList.Items'),
        outputPath: 'CachePolicyList.Items',
        parameters: {
          Type: this.__input.type,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListCachePolicies.CachePolicyList.Items', props);
    return resource.getResponseField('CachePolicyList.Items') as unknown as shapes.CloudFrontCachePolicySummary[];
  }

}

export class CloudFrontResponsesListCloudFrontOriginAccessIdentities {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListCloudFrontOriginAccessIdentitiesRequest) {
  }

  public get cloudFrontOriginAccessIdentityList(): CloudFrontResponsesListCloudFrontOriginAccessIdentitiesCloudFrontOriginAccessIdentityList {
    return new CloudFrontResponsesListCloudFrontOriginAccessIdentitiesCloudFrontOriginAccessIdentityList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListCloudFrontOriginAccessIdentitiesCloudFrontOriginAccessIdentityList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListCloudFrontOriginAccessIdentitiesRequest) {
  }

  public get marker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listCloudFrontOriginAccessIdentities',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListCloudFrontOriginAccessIdentities.CloudFrontOriginAccessIdentityList.Marker'),
        outputPath: 'CloudFrontOriginAccessIdentityList.Marker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListCloudFrontOriginAccessIdentities.CloudFrontOriginAccessIdentityList.Marker', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentityList.Marker') as unknown as string;
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listCloudFrontOriginAccessIdentities',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListCloudFrontOriginAccessIdentities.CloudFrontOriginAccessIdentityList.NextMarker'),
        outputPath: 'CloudFrontOriginAccessIdentityList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListCloudFrontOriginAccessIdentities.CloudFrontOriginAccessIdentityList.NextMarker', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentityList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listCloudFrontOriginAccessIdentities',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListCloudFrontOriginAccessIdentities.CloudFrontOriginAccessIdentityList.MaxItems'),
        outputPath: 'CloudFrontOriginAccessIdentityList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListCloudFrontOriginAccessIdentities.CloudFrontOriginAccessIdentityList.MaxItems', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentityList.MaxItems') as unknown as number;
  }

  public get isTruncated(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listCloudFrontOriginAccessIdentities',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListCloudFrontOriginAccessIdentities.CloudFrontOriginAccessIdentityList.IsTruncated'),
        outputPath: 'CloudFrontOriginAccessIdentityList.IsTruncated',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListCloudFrontOriginAccessIdentities.CloudFrontOriginAccessIdentityList.IsTruncated', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentityList.IsTruncated') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listCloudFrontOriginAccessIdentities',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListCloudFrontOriginAccessIdentities.CloudFrontOriginAccessIdentityList.Quantity'),
        outputPath: 'CloudFrontOriginAccessIdentityList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListCloudFrontOriginAccessIdentities.CloudFrontOriginAccessIdentityList.Quantity', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentityList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontCloudFrontOriginAccessIdentitySummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listCloudFrontOriginAccessIdentities',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListCloudFrontOriginAccessIdentities.CloudFrontOriginAccessIdentityList.Items'),
        outputPath: 'CloudFrontOriginAccessIdentityList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListCloudFrontOriginAccessIdentities.CloudFrontOriginAccessIdentityList.Items', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentityList.Items') as unknown as shapes.CloudFrontCloudFrontOriginAccessIdentitySummary[];
  }

}

export class CloudFrontResponsesListConflictingAliases {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListConflictingAliasesRequest) {
  }

  public get conflictingAliasesList(): CloudFrontResponsesListConflictingAliasesConflictingAliasesList {
    return new CloudFrontResponsesListConflictingAliasesConflictingAliasesList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListConflictingAliasesConflictingAliasesList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListConflictingAliasesRequest) {
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listConflictingAliases',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListConflictingAliases.ConflictingAliasesList.NextMarker'),
        outputPath: 'ConflictingAliasesList.NextMarker',
        parameters: {
          DistributionId: this.__input.distributionId,
          Alias: this.__input.alias,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListConflictingAliases.ConflictingAliasesList.NextMarker', props);
    return resource.getResponseField('ConflictingAliasesList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listConflictingAliases',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListConflictingAliases.ConflictingAliasesList.MaxItems'),
        outputPath: 'ConflictingAliasesList.MaxItems',
        parameters: {
          DistributionId: this.__input.distributionId,
          Alias: this.__input.alias,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListConflictingAliases.ConflictingAliasesList.MaxItems', props);
    return resource.getResponseField('ConflictingAliasesList.MaxItems') as unknown as number;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listConflictingAliases',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListConflictingAliases.ConflictingAliasesList.Quantity'),
        outputPath: 'ConflictingAliasesList.Quantity',
        parameters: {
          DistributionId: this.__input.distributionId,
          Alias: this.__input.alias,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListConflictingAliases.ConflictingAliasesList.Quantity', props);
    return resource.getResponseField('ConflictingAliasesList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontConflictingAlias[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listConflictingAliases',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListConflictingAliases.ConflictingAliasesList.Items'),
        outputPath: 'ConflictingAliasesList.Items',
        parameters: {
          DistributionId: this.__input.distributionId,
          Alias: this.__input.alias,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListConflictingAliases.ConflictingAliasesList.Items', props);
    return resource.getResponseField('ConflictingAliasesList.Items') as unknown as shapes.CloudFrontConflictingAlias[];
  }

}

export class CloudFrontResponsesListDistributions {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListDistributionsRequest) {
  }

  public get distributionList(): CloudFrontResponsesListDistributionsDistributionList {
    return new CloudFrontResponsesListDistributionsDistributionList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListDistributionsDistributionList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListDistributionsRequest) {
  }

  public get marker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributions.DistributionList.Marker'),
        outputPath: 'DistributionList.Marker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributions.DistributionList.Marker', props);
    return resource.getResponseField('DistributionList.Marker') as unknown as string;
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributions.DistributionList.NextMarker'),
        outputPath: 'DistributionList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributions.DistributionList.NextMarker', props);
    return resource.getResponseField('DistributionList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributions.DistributionList.MaxItems'),
        outputPath: 'DistributionList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributions.DistributionList.MaxItems', props);
    return resource.getResponseField('DistributionList.MaxItems') as unknown as number;
  }

  public get isTruncated(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributions.DistributionList.IsTruncated'),
        outputPath: 'DistributionList.IsTruncated',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributions.DistributionList.IsTruncated', props);
    return resource.getResponseField('DistributionList.IsTruncated') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributions.DistributionList.Quantity'),
        outputPath: 'DistributionList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributions.DistributionList.Quantity', props);
    return resource.getResponseField('DistributionList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontDistributionSummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributions.DistributionList.Items'),
        outputPath: 'DistributionList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributions.DistributionList.Items', props);
    return resource.getResponseField('DistributionList.Items') as unknown as shapes.CloudFrontDistributionSummary[];
  }

}

export class CloudFrontResponsesListDistributionsByCachePolicyId {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListDistributionsByCachePolicyIdRequest) {
  }

  public get distributionIdList(): CloudFrontResponsesListDistributionsByCachePolicyIdDistributionIdList {
    return new CloudFrontResponsesListDistributionsByCachePolicyIdDistributionIdList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListDistributionsByCachePolicyIdDistributionIdList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListDistributionsByCachePolicyIdRequest) {
  }

  public get marker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByCachePolicyId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByCachePolicyId.DistributionIdList.Marker'),
        outputPath: 'DistributionIdList.Marker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          CachePolicyId: this.__input.cachePolicyId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByCachePolicyId.DistributionIdList.Marker', props);
    return resource.getResponseField('DistributionIdList.Marker') as unknown as string;
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByCachePolicyId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByCachePolicyId.DistributionIdList.NextMarker'),
        outputPath: 'DistributionIdList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          CachePolicyId: this.__input.cachePolicyId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByCachePolicyId.DistributionIdList.NextMarker', props);
    return resource.getResponseField('DistributionIdList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByCachePolicyId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByCachePolicyId.DistributionIdList.MaxItems'),
        outputPath: 'DistributionIdList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          CachePolicyId: this.__input.cachePolicyId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByCachePolicyId.DistributionIdList.MaxItems', props);
    return resource.getResponseField('DistributionIdList.MaxItems') as unknown as number;
  }

  public get isTruncated(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByCachePolicyId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByCachePolicyId.DistributionIdList.IsTruncated'),
        outputPath: 'DistributionIdList.IsTruncated',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          CachePolicyId: this.__input.cachePolicyId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByCachePolicyId.DistributionIdList.IsTruncated', props);
    return resource.getResponseField('DistributionIdList.IsTruncated') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByCachePolicyId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByCachePolicyId.DistributionIdList.Quantity'),
        outputPath: 'DistributionIdList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          CachePolicyId: this.__input.cachePolicyId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByCachePolicyId.DistributionIdList.Quantity', props);
    return resource.getResponseField('DistributionIdList.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByCachePolicyId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByCachePolicyId.DistributionIdList.Items'),
        outputPath: 'DistributionIdList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          CachePolicyId: this.__input.cachePolicyId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByCachePolicyId.DistributionIdList.Items', props);
    return resource.getResponseField('DistributionIdList.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesListDistributionsByKeyGroup {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListDistributionsByKeyGroupRequest) {
  }

  public get distributionIdList(): CloudFrontResponsesListDistributionsByKeyGroupDistributionIdList {
    return new CloudFrontResponsesListDistributionsByKeyGroupDistributionIdList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListDistributionsByKeyGroupDistributionIdList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListDistributionsByKeyGroupRequest) {
  }

  public get marker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByKeyGroup.DistributionIdList.Marker'),
        outputPath: 'DistributionIdList.Marker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          KeyGroupId: this.__input.keyGroupId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByKeyGroup.DistributionIdList.Marker', props);
    return resource.getResponseField('DistributionIdList.Marker') as unknown as string;
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByKeyGroup.DistributionIdList.NextMarker'),
        outputPath: 'DistributionIdList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          KeyGroupId: this.__input.keyGroupId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByKeyGroup.DistributionIdList.NextMarker', props);
    return resource.getResponseField('DistributionIdList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByKeyGroup.DistributionIdList.MaxItems'),
        outputPath: 'DistributionIdList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          KeyGroupId: this.__input.keyGroupId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByKeyGroup.DistributionIdList.MaxItems', props);
    return resource.getResponseField('DistributionIdList.MaxItems') as unknown as number;
  }

  public get isTruncated(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByKeyGroup.DistributionIdList.IsTruncated'),
        outputPath: 'DistributionIdList.IsTruncated',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          KeyGroupId: this.__input.keyGroupId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByKeyGroup.DistributionIdList.IsTruncated', props);
    return resource.getResponseField('DistributionIdList.IsTruncated') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByKeyGroup.DistributionIdList.Quantity'),
        outputPath: 'DistributionIdList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          KeyGroupId: this.__input.keyGroupId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByKeyGroup.DistributionIdList.Quantity', props);
    return resource.getResponseField('DistributionIdList.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByKeyGroup.DistributionIdList.Items'),
        outputPath: 'DistributionIdList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          KeyGroupId: this.__input.keyGroupId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByKeyGroup.DistributionIdList.Items', props);
    return resource.getResponseField('DistributionIdList.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesListDistributionsByOriginRequestPolicyId {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListDistributionsByOriginRequestPolicyIdRequest) {
  }

  public get distributionIdList(): CloudFrontResponsesListDistributionsByOriginRequestPolicyIdDistributionIdList {
    return new CloudFrontResponsesListDistributionsByOriginRequestPolicyIdDistributionIdList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListDistributionsByOriginRequestPolicyIdDistributionIdList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListDistributionsByOriginRequestPolicyIdRequest) {
  }

  public get marker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByOriginRequestPolicyId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByOriginRequestPolicyId.DistributionIdList.Marker'),
        outputPath: 'DistributionIdList.Marker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          OriginRequestPolicyId: this.__input.originRequestPolicyId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByOriginRequestPolicyId.DistributionIdList.Marker', props);
    return resource.getResponseField('DistributionIdList.Marker') as unknown as string;
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByOriginRequestPolicyId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByOriginRequestPolicyId.DistributionIdList.NextMarker'),
        outputPath: 'DistributionIdList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          OriginRequestPolicyId: this.__input.originRequestPolicyId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByOriginRequestPolicyId.DistributionIdList.NextMarker', props);
    return resource.getResponseField('DistributionIdList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByOriginRequestPolicyId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByOriginRequestPolicyId.DistributionIdList.MaxItems'),
        outputPath: 'DistributionIdList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          OriginRequestPolicyId: this.__input.originRequestPolicyId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByOriginRequestPolicyId.DistributionIdList.MaxItems', props);
    return resource.getResponseField('DistributionIdList.MaxItems') as unknown as number;
  }

  public get isTruncated(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByOriginRequestPolicyId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByOriginRequestPolicyId.DistributionIdList.IsTruncated'),
        outputPath: 'DistributionIdList.IsTruncated',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          OriginRequestPolicyId: this.__input.originRequestPolicyId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByOriginRequestPolicyId.DistributionIdList.IsTruncated', props);
    return resource.getResponseField('DistributionIdList.IsTruncated') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByOriginRequestPolicyId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByOriginRequestPolicyId.DistributionIdList.Quantity'),
        outputPath: 'DistributionIdList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          OriginRequestPolicyId: this.__input.originRequestPolicyId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByOriginRequestPolicyId.DistributionIdList.Quantity', props);
    return resource.getResponseField('DistributionIdList.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByOriginRequestPolicyId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByOriginRequestPolicyId.DistributionIdList.Items'),
        outputPath: 'DistributionIdList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          OriginRequestPolicyId: this.__input.originRequestPolicyId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByOriginRequestPolicyId.DistributionIdList.Items', props);
    return resource.getResponseField('DistributionIdList.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesListDistributionsByRealtimeLogConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListDistributionsByRealtimeLogConfigRequest) {
  }

  public get distributionList(): CloudFrontResponsesListDistributionsByRealtimeLogConfigDistributionList {
    return new CloudFrontResponsesListDistributionsByRealtimeLogConfigDistributionList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListDistributionsByRealtimeLogConfigDistributionList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListDistributionsByRealtimeLogConfigRequest) {
  }

  public get marker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByRealtimeLogConfig.DistributionList.Marker'),
        outputPath: 'DistributionList.Marker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          RealtimeLogConfigName: this.__input.realtimeLogConfigName,
          RealtimeLogConfigArn: this.__input.realtimeLogConfigArn,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByRealtimeLogConfig.DistributionList.Marker', props);
    return resource.getResponseField('DistributionList.Marker') as unknown as string;
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByRealtimeLogConfig.DistributionList.NextMarker'),
        outputPath: 'DistributionList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          RealtimeLogConfigName: this.__input.realtimeLogConfigName,
          RealtimeLogConfigArn: this.__input.realtimeLogConfigArn,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByRealtimeLogConfig.DistributionList.NextMarker', props);
    return resource.getResponseField('DistributionList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByRealtimeLogConfig.DistributionList.MaxItems'),
        outputPath: 'DistributionList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          RealtimeLogConfigName: this.__input.realtimeLogConfigName,
          RealtimeLogConfigArn: this.__input.realtimeLogConfigArn,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByRealtimeLogConfig.DistributionList.MaxItems', props);
    return resource.getResponseField('DistributionList.MaxItems') as unknown as number;
  }

  public get isTruncated(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByRealtimeLogConfig.DistributionList.IsTruncated'),
        outputPath: 'DistributionList.IsTruncated',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          RealtimeLogConfigName: this.__input.realtimeLogConfigName,
          RealtimeLogConfigArn: this.__input.realtimeLogConfigArn,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByRealtimeLogConfig.DistributionList.IsTruncated', props);
    return resource.getResponseField('DistributionList.IsTruncated') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByRealtimeLogConfig.DistributionList.Quantity'),
        outputPath: 'DistributionList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          RealtimeLogConfigName: this.__input.realtimeLogConfigName,
          RealtimeLogConfigArn: this.__input.realtimeLogConfigArn,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByRealtimeLogConfig.DistributionList.Quantity', props);
    return resource.getResponseField('DistributionList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontDistributionSummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByRealtimeLogConfig.DistributionList.Items'),
        outputPath: 'DistributionList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          RealtimeLogConfigName: this.__input.realtimeLogConfigName,
          RealtimeLogConfigArn: this.__input.realtimeLogConfigArn,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByRealtimeLogConfig.DistributionList.Items', props);
    return resource.getResponseField('DistributionList.Items') as unknown as shapes.CloudFrontDistributionSummary[];
  }

}

export class CloudFrontResponsesListDistributionsByWebAclId {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListDistributionsByWebAclIdRequest) {
  }

  public get distributionList(): CloudFrontResponsesListDistributionsByWebAclIdDistributionList {
    return new CloudFrontResponsesListDistributionsByWebAclIdDistributionList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListDistributionsByWebAclIdDistributionList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListDistributionsByWebAclIdRequest) {
  }

  public get marker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByWebAclId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByWebACLId.DistributionList.Marker'),
        outputPath: 'DistributionList.Marker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          WebACLId: this.__input.webAclId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByWebACLId.DistributionList.Marker', props);
    return resource.getResponseField('DistributionList.Marker') as unknown as string;
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByWebAclId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByWebACLId.DistributionList.NextMarker'),
        outputPath: 'DistributionList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          WebACLId: this.__input.webAclId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByWebACLId.DistributionList.NextMarker', props);
    return resource.getResponseField('DistributionList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByWebAclId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByWebACLId.DistributionList.MaxItems'),
        outputPath: 'DistributionList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          WebACLId: this.__input.webAclId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByWebACLId.DistributionList.MaxItems', props);
    return resource.getResponseField('DistributionList.MaxItems') as unknown as number;
  }

  public get isTruncated(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByWebAclId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByWebACLId.DistributionList.IsTruncated'),
        outputPath: 'DistributionList.IsTruncated',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          WebACLId: this.__input.webAclId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByWebACLId.DistributionList.IsTruncated', props);
    return resource.getResponseField('DistributionList.IsTruncated') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByWebAclId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByWebACLId.DistributionList.Quantity'),
        outputPath: 'DistributionList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          WebACLId: this.__input.webAclId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByWebACLId.DistributionList.Quantity', props);
    return resource.getResponseField('DistributionList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontDistributionSummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listDistributionsByWebAclId',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListDistributionsByWebACLId.DistributionList.Items'),
        outputPath: 'DistributionList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          WebACLId: this.__input.webAclId,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListDistributionsByWebACLId.DistributionList.Items', props);
    return resource.getResponseField('DistributionList.Items') as unknown as shapes.CloudFrontDistributionSummary[];
  }

}

export class CloudFrontResponsesListFieldLevelEncryptionConfigs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListFieldLevelEncryptionConfigsRequest) {
  }

  public get fieldLevelEncryptionList(): CloudFrontResponsesListFieldLevelEncryptionConfigsFieldLevelEncryptionList {
    return new CloudFrontResponsesListFieldLevelEncryptionConfigsFieldLevelEncryptionList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListFieldLevelEncryptionConfigsFieldLevelEncryptionList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListFieldLevelEncryptionConfigsRequest) {
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listFieldLevelEncryptionConfigs',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListFieldLevelEncryptionConfigs.FieldLevelEncryptionList.NextMarker'),
        outputPath: 'FieldLevelEncryptionList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListFieldLevelEncryptionConfigs.FieldLevelEncryptionList.NextMarker', props);
    return resource.getResponseField('FieldLevelEncryptionList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listFieldLevelEncryptionConfigs',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListFieldLevelEncryptionConfigs.FieldLevelEncryptionList.MaxItems'),
        outputPath: 'FieldLevelEncryptionList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListFieldLevelEncryptionConfigs.FieldLevelEncryptionList.MaxItems', props);
    return resource.getResponseField('FieldLevelEncryptionList.MaxItems') as unknown as number;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listFieldLevelEncryptionConfigs',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListFieldLevelEncryptionConfigs.FieldLevelEncryptionList.Quantity'),
        outputPath: 'FieldLevelEncryptionList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListFieldLevelEncryptionConfigs.FieldLevelEncryptionList.Quantity', props);
    return resource.getResponseField('FieldLevelEncryptionList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontFieldLevelEncryptionSummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listFieldLevelEncryptionConfigs',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListFieldLevelEncryptionConfigs.FieldLevelEncryptionList.Items'),
        outputPath: 'FieldLevelEncryptionList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListFieldLevelEncryptionConfigs.FieldLevelEncryptionList.Items', props);
    return resource.getResponseField('FieldLevelEncryptionList.Items') as unknown as shapes.CloudFrontFieldLevelEncryptionSummary[];
  }

}

export class CloudFrontResponsesListFieldLevelEncryptionProfiles {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListFieldLevelEncryptionProfilesRequest) {
  }

  public get fieldLevelEncryptionProfileList(): CloudFrontResponsesListFieldLevelEncryptionProfilesFieldLevelEncryptionProfileList {
    return new CloudFrontResponsesListFieldLevelEncryptionProfilesFieldLevelEncryptionProfileList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListFieldLevelEncryptionProfilesFieldLevelEncryptionProfileList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListFieldLevelEncryptionProfilesRequest) {
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listFieldLevelEncryptionProfiles',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListFieldLevelEncryptionProfiles.FieldLevelEncryptionProfileList.NextMarker'),
        outputPath: 'FieldLevelEncryptionProfileList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListFieldLevelEncryptionProfiles.FieldLevelEncryptionProfileList.NextMarker', props);
    return resource.getResponseField('FieldLevelEncryptionProfileList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listFieldLevelEncryptionProfiles',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListFieldLevelEncryptionProfiles.FieldLevelEncryptionProfileList.MaxItems'),
        outputPath: 'FieldLevelEncryptionProfileList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListFieldLevelEncryptionProfiles.FieldLevelEncryptionProfileList.MaxItems', props);
    return resource.getResponseField('FieldLevelEncryptionProfileList.MaxItems') as unknown as number;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listFieldLevelEncryptionProfiles',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListFieldLevelEncryptionProfiles.FieldLevelEncryptionProfileList.Quantity'),
        outputPath: 'FieldLevelEncryptionProfileList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListFieldLevelEncryptionProfiles.FieldLevelEncryptionProfileList.Quantity', props);
    return resource.getResponseField('FieldLevelEncryptionProfileList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontFieldLevelEncryptionProfileSummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listFieldLevelEncryptionProfiles',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListFieldLevelEncryptionProfiles.FieldLevelEncryptionProfileList.Items'),
        outputPath: 'FieldLevelEncryptionProfileList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListFieldLevelEncryptionProfiles.FieldLevelEncryptionProfileList.Items', props);
    return resource.getResponseField('FieldLevelEncryptionProfileList.Items') as unknown as shapes.CloudFrontFieldLevelEncryptionProfileSummary[];
  }

}

export class CloudFrontResponsesListFunctions {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListFunctionsRequest) {
  }

  public get functionList(): CloudFrontResponsesListFunctionsFunctionList {
    return new CloudFrontResponsesListFunctionsFunctionList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListFunctionsFunctionList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListFunctionsRequest) {
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listFunctions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListFunctions.FunctionList.NextMarker'),
        outputPath: 'FunctionList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListFunctions.FunctionList.NextMarker', props);
    return resource.getResponseField('FunctionList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listFunctions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListFunctions.FunctionList.MaxItems'),
        outputPath: 'FunctionList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListFunctions.FunctionList.MaxItems', props);
    return resource.getResponseField('FunctionList.MaxItems') as unknown as number;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listFunctions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListFunctions.FunctionList.Quantity'),
        outputPath: 'FunctionList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListFunctions.FunctionList.Quantity', props);
    return resource.getResponseField('FunctionList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontFunctionSummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listFunctions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListFunctions.FunctionList.Items'),
        outputPath: 'FunctionList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
          Stage: this.__input.stage,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListFunctions.FunctionList.Items', props);
    return resource.getResponseField('FunctionList.Items') as unknown as shapes.CloudFrontFunctionSummary[];
  }

}

export class CloudFrontResponsesListInvalidations {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListInvalidationsRequest) {
  }

  public get invalidationList(): CloudFrontResponsesListInvalidationsInvalidationList {
    return new CloudFrontResponsesListInvalidationsInvalidationList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListInvalidationsInvalidationList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListInvalidationsRequest) {
  }

  public get marker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listInvalidations',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListInvalidations.InvalidationList.Marker'),
        outputPath: 'InvalidationList.Marker',
        parameters: {
          DistributionId: this.__input.distributionId,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListInvalidations.InvalidationList.Marker', props);
    return resource.getResponseField('InvalidationList.Marker') as unknown as string;
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listInvalidations',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListInvalidations.InvalidationList.NextMarker'),
        outputPath: 'InvalidationList.NextMarker',
        parameters: {
          DistributionId: this.__input.distributionId,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListInvalidations.InvalidationList.NextMarker', props);
    return resource.getResponseField('InvalidationList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listInvalidations',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListInvalidations.InvalidationList.MaxItems'),
        outputPath: 'InvalidationList.MaxItems',
        parameters: {
          DistributionId: this.__input.distributionId,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListInvalidations.InvalidationList.MaxItems', props);
    return resource.getResponseField('InvalidationList.MaxItems') as unknown as number;
  }

  public get isTruncated(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listInvalidations',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListInvalidations.InvalidationList.IsTruncated'),
        outputPath: 'InvalidationList.IsTruncated',
        parameters: {
          DistributionId: this.__input.distributionId,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListInvalidations.InvalidationList.IsTruncated', props);
    return resource.getResponseField('InvalidationList.IsTruncated') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listInvalidations',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListInvalidations.InvalidationList.Quantity'),
        outputPath: 'InvalidationList.Quantity',
        parameters: {
          DistributionId: this.__input.distributionId,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListInvalidations.InvalidationList.Quantity', props);
    return resource.getResponseField('InvalidationList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontInvalidationSummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listInvalidations',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListInvalidations.InvalidationList.Items'),
        outputPath: 'InvalidationList.Items',
        parameters: {
          DistributionId: this.__input.distributionId,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListInvalidations.InvalidationList.Items', props);
    return resource.getResponseField('InvalidationList.Items') as unknown as shapes.CloudFrontInvalidationSummary[];
  }

}

export class CloudFrontResponsesListKeyGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListKeyGroupsRequest) {
  }

  public get keyGroupList(): CloudFrontResponsesListKeyGroupsKeyGroupList {
    return new CloudFrontResponsesListKeyGroupsKeyGroupList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListKeyGroupsKeyGroupList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListKeyGroupsRequest) {
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listKeyGroups',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListKeyGroups.KeyGroupList.NextMarker'),
        outputPath: 'KeyGroupList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListKeyGroups.KeyGroupList.NextMarker', props);
    return resource.getResponseField('KeyGroupList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listKeyGroups',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListKeyGroups.KeyGroupList.MaxItems'),
        outputPath: 'KeyGroupList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListKeyGroups.KeyGroupList.MaxItems', props);
    return resource.getResponseField('KeyGroupList.MaxItems') as unknown as number;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listKeyGroups',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListKeyGroups.KeyGroupList.Quantity'),
        outputPath: 'KeyGroupList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListKeyGroups.KeyGroupList.Quantity', props);
    return resource.getResponseField('KeyGroupList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontKeyGroupSummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listKeyGroups',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListKeyGroups.KeyGroupList.Items'),
        outputPath: 'KeyGroupList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListKeyGroups.KeyGroupList.Items', props);
    return resource.getResponseField('KeyGroupList.Items') as unknown as shapes.CloudFrontKeyGroupSummary[];
  }

}

export class CloudFrontResponsesListOriginRequestPolicies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListOriginRequestPoliciesRequest) {
  }

  public get originRequestPolicyList(): CloudFrontResponsesListOriginRequestPoliciesOriginRequestPolicyList {
    return new CloudFrontResponsesListOriginRequestPoliciesOriginRequestPolicyList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListOriginRequestPoliciesOriginRequestPolicyList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListOriginRequestPoliciesRequest) {
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listOriginRequestPolicies',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListOriginRequestPolicies.OriginRequestPolicyList.NextMarker'),
        outputPath: 'OriginRequestPolicyList.NextMarker',
        parameters: {
          Type: this.__input.type,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListOriginRequestPolicies.OriginRequestPolicyList.NextMarker', props);
    return resource.getResponseField('OriginRequestPolicyList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listOriginRequestPolicies',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListOriginRequestPolicies.OriginRequestPolicyList.MaxItems'),
        outputPath: 'OriginRequestPolicyList.MaxItems',
        parameters: {
          Type: this.__input.type,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListOriginRequestPolicies.OriginRequestPolicyList.MaxItems', props);
    return resource.getResponseField('OriginRequestPolicyList.MaxItems') as unknown as number;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listOriginRequestPolicies',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListOriginRequestPolicies.OriginRequestPolicyList.Quantity'),
        outputPath: 'OriginRequestPolicyList.Quantity',
        parameters: {
          Type: this.__input.type,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListOriginRequestPolicies.OriginRequestPolicyList.Quantity', props);
    return resource.getResponseField('OriginRequestPolicyList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontOriginRequestPolicySummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listOriginRequestPolicies',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListOriginRequestPolicies.OriginRequestPolicyList.Items'),
        outputPath: 'OriginRequestPolicyList.Items',
        parameters: {
          Type: this.__input.type,
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListOriginRequestPolicies.OriginRequestPolicyList.Items', props);
    return resource.getResponseField('OriginRequestPolicyList.Items') as unknown as shapes.CloudFrontOriginRequestPolicySummary[];
  }

}

export class CloudFrontResponsesListPublicKeys {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListPublicKeysRequest) {
  }

  public get publicKeyList(): CloudFrontResponsesListPublicKeysPublicKeyList {
    return new CloudFrontResponsesListPublicKeysPublicKeyList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListPublicKeysPublicKeyList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListPublicKeysRequest) {
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listPublicKeys',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListPublicKeys.PublicKeyList.NextMarker'),
        outputPath: 'PublicKeyList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListPublicKeys.PublicKeyList.NextMarker', props);
    return resource.getResponseField('PublicKeyList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listPublicKeys',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListPublicKeys.PublicKeyList.MaxItems'),
        outputPath: 'PublicKeyList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListPublicKeys.PublicKeyList.MaxItems', props);
    return resource.getResponseField('PublicKeyList.MaxItems') as unknown as number;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listPublicKeys',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListPublicKeys.PublicKeyList.Quantity'),
        outputPath: 'PublicKeyList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListPublicKeys.PublicKeyList.Quantity', props);
    return resource.getResponseField('PublicKeyList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontPublicKeySummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listPublicKeys',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListPublicKeys.PublicKeyList.Items'),
        outputPath: 'PublicKeyList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListPublicKeys.PublicKeyList.Items', props);
    return resource.getResponseField('PublicKeyList.Items') as unknown as shapes.CloudFrontPublicKeySummary[];
  }

}

export class CloudFrontResponsesListRealtimeLogConfigs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListRealtimeLogConfigsRequest) {
  }

  public get realtimeLogConfigs(): CloudFrontResponsesListRealtimeLogConfigsRealtimeLogConfigs {
    return new CloudFrontResponsesListRealtimeLogConfigsRealtimeLogConfigs(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListRealtimeLogConfigsRealtimeLogConfigs {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListRealtimeLogConfigsRequest) {
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listRealtimeLogConfigs',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListRealtimeLogConfigs.RealtimeLogConfigs.MaxItems'),
        outputPath: 'RealtimeLogConfigs.MaxItems',
        parameters: {
          MaxItems: this.__input.maxItems,
          Marker: this.__input.marker,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListRealtimeLogConfigs.RealtimeLogConfigs.MaxItems', props);
    return resource.getResponseField('RealtimeLogConfigs.MaxItems') as unknown as number;
  }

  public get items(): shapes.CloudFrontRealtimeLogConfig[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listRealtimeLogConfigs',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListRealtimeLogConfigs.RealtimeLogConfigs.Items'),
        outputPath: 'RealtimeLogConfigs.Items',
        parameters: {
          MaxItems: this.__input.maxItems,
          Marker: this.__input.marker,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListRealtimeLogConfigs.RealtimeLogConfigs.Items', props);
    return resource.getResponseField('RealtimeLogConfigs.Items') as unknown as shapes.CloudFrontRealtimeLogConfig[];
  }

  public get isTruncated(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listRealtimeLogConfigs',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListRealtimeLogConfigs.RealtimeLogConfigs.IsTruncated'),
        outputPath: 'RealtimeLogConfigs.IsTruncated',
        parameters: {
          MaxItems: this.__input.maxItems,
          Marker: this.__input.marker,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListRealtimeLogConfigs.RealtimeLogConfigs.IsTruncated', props);
    return resource.getResponseField('RealtimeLogConfigs.IsTruncated') as unknown as boolean;
  }

  public get marker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listRealtimeLogConfigs',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListRealtimeLogConfigs.RealtimeLogConfigs.Marker'),
        outputPath: 'RealtimeLogConfigs.Marker',
        parameters: {
          MaxItems: this.__input.maxItems,
          Marker: this.__input.marker,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListRealtimeLogConfigs.RealtimeLogConfigs.Marker', props);
    return resource.getResponseField('RealtimeLogConfigs.Marker') as unknown as string;
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listRealtimeLogConfigs',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListRealtimeLogConfigs.RealtimeLogConfigs.NextMarker'),
        outputPath: 'RealtimeLogConfigs.NextMarker',
        parameters: {
          MaxItems: this.__input.maxItems,
          Marker: this.__input.marker,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListRealtimeLogConfigs.RealtimeLogConfigs.NextMarker', props);
    return resource.getResponseField('RealtimeLogConfigs.NextMarker') as unknown as string;
  }

}

export class CloudFrontResponsesListStreamingDistributions {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListStreamingDistributionsRequest) {
  }

  public get streamingDistributionList(): CloudFrontResponsesListStreamingDistributionsStreamingDistributionList {
    return new CloudFrontResponsesListStreamingDistributionsStreamingDistributionList(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListStreamingDistributionsStreamingDistributionList {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListStreamingDistributionsRequest) {
  }

  public get marker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listStreamingDistributions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListStreamingDistributions.StreamingDistributionList.Marker'),
        outputPath: 'StreamingDistributionList.Marker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListStreamingDistributions.StreamingDistributionList.Marker', props);
    return resource.getResponseField('StreamingDistributionList.Marker') as unknown as string;
  }

  public get nextMarker(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listStreamingDistributions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListStreamingDistributions.StreamingDistributionList.NextMarker'),
        outputPath: 'StreamingDistributionList.NextMarker',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListStreamingDistributions.StreamingDistributionList.NextMarker', props);
    return resource.getResponseField('StreamingDistributionList.NextMarker') as unknown as string;
  }

  public get maxItems(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listStreamingDistributions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListStreamingDistributions.StreamingDistributionList.MaxItems'),
        outputPath: 'StreamingDistributionList.MaxItems',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListStreamingDistributions.StreamingDistributionList.MaxItems', props);
    return resource.getResponseField('StreamingDistributionList.MaxItems') as unknown as number;
  }

  public get isTruncated(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listStreamingDistributions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListStreamingDistributions.StreamingDistributionList.IsTruncated'),
        outputPath: 'StreamingDistributionList.IsTruncated',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListStreamingDistributions.StreamingDistributionList.IsTruncated', props);
    return resource.getResponseField('StreamingDistributionList.IsTruncated') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listStreamingDistributions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListStreamingDistributions.StreamingDistributionList.Quantity'),
        outputPath: 'StreamingDistributionList.Quantity',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListStreamingDistributions.StreamingDistributionList.Quantity', props);
    return resource.getResponseField('StreamingDistributionList.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontStreamingDistributionSummary[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listStreamingDistributions',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListStreamingDistributions.StreamingDistributionList.Items'),
        outputPath: 'StreamingDistributionList.Items',
        parameters: {
          Marker: this.__input.marker,
          MaxItems: this.__input.maxItems,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListStreamingDistributions.StreamingDistributionList.Items', props);
    return resource.getResponseField('StreamingDistributionList.Items') as unknown as shapes.CloudFrontStreamingDistributionSummary[];
  }

}

export class CloudFrontResponsesListTagsForResource {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListTagsForResourceRequest) {
  }

  public get tags(): CloudFrontResponsesListTagsForResourceTags {
    return new CloudFrontResponsesListTagsForResourceTags(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesListTagsForResourceTags {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontListTagsForResourceRequest) {
  }

  public get items(): shapes.CloudFrontTag[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'listTagsForResource',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.ListTagsForResource.Tags.Items'),
        outputPath: 'Tags.Items',
        parameters: {
          Resource: this.__input.resource,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'ListTagsForResource.Tags.Items', props);
    return resource.getResponseField('Tags.Items') as unknown as shapes.CloudFrontTag[];
  }

}

export class CloudFrontResponsesPublishFunction {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontPublishFunctionRequest) {
  }

  public get functionSummary(): CloudFrontResponsesPublishFunctionFunctionSummary {
    return new CloudFrontResponsesPublishFunctionFunctionSummary(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesPublishFunctionFunctionSummary {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontPublishFunctionRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'publishFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.PublishFunction.FunctionSummary.Name'),
        outputPath: 'FunctionSummary.Name',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'PublishFunction.FunctionSummary.Name', props);
    return resource.getResponseField('FunctionSummary.Name') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'publishFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.PublishFunction.FunctionSummary.Status'),
        outputPath: 'FunctionSummary.Status',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'PublishFunction.FunctionSummary.Status', props);
    return resource.getResponseField('FunctionSummary.Status') as unknown as string;
  }

  public get functionConfig(): CloudFrontResponsesPublishFunctionFunctionSummaryFunctionConfig {
    return new CloudFrontResponsesPublishFunctionFunctionSummaryFunctionConfig(this.__scope, this.__resources, this.__input);
  }

  public get functionMetadata(): CloudFrontResponsesPublishFunctionFunctionSummaryFunctionMetadata {
    return new CloudFrontResponsesPublishFunctionFunctionSummaryFunctionMetadata(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesPublishFunctionFunctionSummaryFunctionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontPublishFunctionRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'publishFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.PublishFunction.FunctionSummary.FunctionConfig.Comment'),
        outputPath: 'FunctionSummary.FunctionConfig.Comment',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'PublishFunction.FunctionSummary.FunctionConfig.Comment', props);
    return resource.getResponseField('FunctionSummary.FunctionConfig.Comment') as unknown as string;
  }

  public get runtime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'publishFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.PublishFunction.FunctionSummary.FunctionConfig.Runtime'),
        outputPath: 'FunctionSummary.FunctionConfig.Runtime',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'PublishFunction.FunctionSummary.FunctionConfig.Runtime', props);
    return resource.getResponseField('FunctionSummary.FunctionConfig.Runtime') as unknown as string;
  }

}

export class CloudFrontResponsesPublishFunctionFunctionSummaryFunctionMetadata {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontPublishFunctionRequest) {
  }

  public get functionArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'publishFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.PublishFunction.FunctionSummary.FunctionMetadata.FunctionARN'),
        outputPath: 'FunctionSummary.FunctionMetadata.FunctionARN',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'PublishFunction.FunctionSummary.FunctionMetadata.FunctionARN', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.FunctionARN') as unknown as string;
  }

  public get stage(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'publishFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.PublishFunction.FunctionSummary.FunctionMetadata.Stage'),
        outputPath: 'FunctionSummary.FunctionMetadata.Stage',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'PublishFunction.FunctionSummary.FunctionMetadata.Stage', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.Stage') as unknown as string;
  }

  public get createdTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'publishFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.PublishFunction.FunctionSummary.FunctionMetadata.CreatedTime'),
        outputPath: 'FunctionSummary.FunctionMetadata.CreatedTime',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'PublishFunction.FunctionSummary.FunctionMetadata.CreatedTime', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.CreatedTime') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'publishFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.PublishFunction.FunctionSummary.FunctionMetadata.LastModifiedTime'),
        outputPath: 'FunctionSummary.FunctionMetadata.LastModifiedTime',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'PublishFunction.FunctionSummary.FunctionMetadata.LastModifiedTime', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.LastModifiedTime') as unknown as string;
  }

}

export class CloudFrontResponsesTestFunction {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontTestFunctionRequest) {
  }

  public get testResult(): CloudFrontResponsesTestFunctionTestResult {
    return new CloudFrontResponsesTestFunctionTestResult(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesTestFunctionTestResult {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontTestFunctionRequest) {
  }

  public get functionSummary(): CloudFrontResponsesTestFunctionTestResultFunctionSummary {
    return new CloudFrontResponsesTestFunctionTestResultFunctionSummary(this.__scope, this.__resources, this.__input);
  }

  public get computeUtilization(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'testFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TestFunction.TestResult.ComputeUtilization'),
        outputPath: 'TestResult.ComputeUtilization',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          Stage: this.__input.stage,
          EventObject: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'TestFunction.TestResult.ComputeUtilization', props);
    return resource.getResponseField('TestResult.ComputeUtilization') as unknown as string;
  }

  public get functionExecutionLogs(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'testFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TestFunction.TestResult.FunctionExecutionLogs'),
        outputPath: 'TestResult.FunctionExecutionLogs',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          Stage: this.__input.stage,
          EventObject: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'TestFunction.TestResult.FunctionExecutionLogs', props);
    return resource.getResponseField('TestResult.FunctionExecutionLogs') as unknown as string[];
  }

  public get functionErrorMessage(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'testFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TestFunction.TestResult.FunctionErrorMessage'),
        outputPath: 'TestResult.FunctionErrorMessage',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          Stage: this.__input.stage,
          EventObject: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'TestFunction.TestResult.FunctionErrorMessage', props);
    return resource.getResponseField('TestResult.FunctionErrorMessage') as unknown as string;
  }

  public get functionOutput(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'testFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TestFunction.TestResult.FunctionOutput'),
        outputPath: 'TestResult.FunctionOutput',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          Stage: this.__input.stage,
          EventObject: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'TestFunction.TestResult.FunctionOutput', props);
    return resource.getResponseField('TestResult.FunctionOutput') as unknown as string;
  }

}

export class CloudFrontResponsesTestFunctionTestResultFunctionSummary {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontTestFunctionRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'testFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TestFunction.TestResult.FunctionSummary.Name'),
        outputPath: 'TestResult.FunctionSummary.Name',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          Stage: this.__input.stage,
          EventObject: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'TestFunction.TestResult.FunctionSummary.Name', props);
    return resource.getResponseField('TestResult.FunctionSummary.Name') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'testFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TestFunction.TestResult.FunctionSummary.Status'),
        outputPath: 'TestResult.FunctionSummary.Status',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          Stage: this.__input.stage,
          EventObject: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'TestFunction.TestResult.FunctionSummary.Status', props);
    return resource.getResponseField('TestResult.FunctionSummary.Status') as unknown as string;
  }

  public get functionConfig(): CloudFrontResponsesTestFunctionTestResultFunctionSummaryFunctionConfig {
    return new CloudFrontResponsesTestFunctionTestResultFunctionSummaryFunctionConfig(this.__scope, this.__resources, this.__input);
  }

  public get functionMetadata(): CloudFrontResponsesTestFunctionTestResultFunctionSummaryFunctionMetadata {
    return new CloudFrontResponsesTestFunctionTestResultFunctionSummaryFunctionMetadata(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesTestFunctionTestResultFunctionSummaryFunctionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontTestFunctionRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'testFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TestFunction.TestResult.FunctionSummary.FunctionConfig.Comment'),
        outputPath: 'TestResult.FunctionSummary.FunctionConfig.Comment',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          Stage: this.__input.stage,
          EventObject: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'TestFunction.TestResult.FunctionSummary.FunctionConfig.Comment', props);
    return resource.getResponseField('TestResult.FunctionSummary.FunctionConfig.Comment') as unknown as string;
  }

  public get runtime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'testFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TestFunction.TestResult.FunctionSummary.FunctionConfig.Runtime'),
        outputPath: 'TestResult.FunctionSummary.FunctionConfig.Runtime',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          Stage: this.__input.stage,
          EventObject: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'TestFunction.TestResult.FunctionSummary.FunctionConfig.Runtime', props);
    return resource.getResponseField('TestResult.FunctionSummary.FunctionConfig.Runtime') as unknown as string;
  }

}

export class CloudFrontResponsesTestFunctionTestResultFunctionSummaryFunctionMetadata {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontTestFunctionRequest) {
  }

  public get functionArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'testFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TestFunction.TestResult.FunctionSummary.FunctionMetadata.FunctionARN'),
        outputPath: 'TestResult.FunctionSummary.FunctionMetadata.FunctionARN',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          Stage: this.__input.stage,
          EventObject: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'TestFunction.TestResult.FunctionSummary.FunctionMetadata.FunctionARN', props);
    return resource.getResponseField('TestResult.FunctionSummary.FunctionMetadata.FunctionARN') as unknown as string;
  }

  public get stage(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'testFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TestFunction.TestResult.FunctionSummary.FunctionMetadata.Stage'),
        outputPath: 'TestResult.FunctionSummary.FunctionMetadata.Stage',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          Stage: this.__input.stage,
          EventObject: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'TestFunction.TestResult.FunctionSummary.FunctionMetadata.Stage', props);
    return resource.getResponseField('TestResult.FunctionSummary.FunctionMetadata.Stage') as unknown as string;
  }

  public get createdTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'testFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TestFunction.TestResult.FunctionSummary.FunctionMetadata.CreatedTime'),
        outputPath: 'TestResult.FunctionSummary.FunctionMetadata.CreatedTime',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          Stage: this.__input.stage,
          EventObject: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'TestFunction.TestResult.FunctionSummary.FunctionMetadata.CreatedTime', props);
    return resource.getResponseField('TestResult.FunctionSummary.FunctionMetadata.CreatedTime') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'testFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.TestFunction.TestResult.FunctionSummary.FunctionMetadata.LastModifiedTime'),
        outputPath: 'TestResult.FunctionSummary.FunctionMetadata.LastModifiedTime',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          Stage: this.__input.stage,
          EventObject: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'TestFunction.TestResult.FunctionSummary.FunctionMetadata.LastModifiedTime', props);
    return resource.getResponseField('TestResult.FunctionSummary.FunctionMetadata.LastModifiedTime') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateCachePolicy {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCachePolicyRequest) {
  }

  public get cachePolicy(): CloudFrontResponsesUpdateCachePolicyCachePolicy {
    return new CloudFrontResponsesUpdateCachePolicyCachePolicy(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.ETag'),
        outputPath: 'ETag',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateCachePolicyCachePolicy {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCachePolicyRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.Id'),
        outputPath: 'CachePolicy.Id',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.Id', props);
    return resource.getResponseField('CachePolicy.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.LastModifiedTime'),
        outputPath: 'CachePolicy.LastModifiedTime',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.LastModifiedTime', props);
    return resource.getResponseField('CachePolicy.LastModifiedTime') as unknown as string;
  }

  public get cachePolicyConfig(): CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfig {
    return new CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCachePolicyRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.Comment'),
        outputPath: 'CachePolicy.CachePolicyConfig.Comment',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.Comment', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.Comment') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.Name'),
        outputPath: 'CachePolicy.CachePolicyConfig.Name',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.Name', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.Name') as unknown as string;
  }

  public get defaultTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.DefaultTTL'),
        outputPath: 'CachePolicy.CachePolicyConfig.DefaultTTL',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.DefaultTTL', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.DefaultTTL') as unknown as number;
  }

  public get maxTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.MaxTTL'),
        outputPath: 'CachePolicy.CachePolicyConfig.MaxTTL',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.MaxTTL', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.MaxTTL') as unknown as number;
  }

  public get minTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.MinTTL'),
        outputPath: 'CachePolicy.CachePolicyConfig.MinTTL',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.MinTTL', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.MinTTL') as unknown as number;
  }

  public get parametersInCacheKeyAndForwardedToOrigin(): CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin {
    return new CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOrigin {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCachePolicyRequest) {
  }

  public get enableAcceptEncodingGzip(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingGzip') as unknown as boolean;
  }

  public get enableAcceptEncodingBrotli(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.EnableAcceptEncodingBrotli') as unknown as boolean;
  }

  public get headersConfig(): CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig {
    return new CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig(this.__scope, this.__resources, this.__input);
  }

  public get cookiesConfig(): CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig {
    return new CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig(this.__scope, this.__resources, this.__input);
  }

  public get queryStringsConfig(): CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {
    return new CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCachePolicyRequest) {
  }

  public get headerBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.HeaderBehavior') as unknown as string;
  }

  public get headers(): CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders {
    return new CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginHeadersConfigHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCachePolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.HeadersConfig.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCachePolicyRequest) {
  }

  public get cookieBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.CookieBehavior') as unknown as string;
  }

  public get cookies(): CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies {
    return new CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginCookiesConfigCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCachePolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.CookiesConfig.Cookies.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCachePolicyRequest) {
  }

  public get queryStringBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStringBehavior') as unknown as string;
  }

  public get queryStrings(): CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings {
    return new CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateCachePolicyCachePolicyCachePolicyConfigParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCachePolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCachePolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items'),
        outputPath: 'CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items',
        parameters: {
          CachePolicyConfig: {
            Comment: this.__input.cachePolicyConfig.comment,
            Name: this.__input.cachePolicyConfig.name,
            DefaultTTL: this.__input.cachePolicyConfig.defaultTtl,
            MaxTTL: this.__input.cachePolicyConfig.maxTtl,
            MinTTL: this.__input.cachePolicyConfig.minTtl,
            ParametersInCacheKeyAndForwardedToOrigin: {
              EnableAcceptEncodingGzip: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingGzip,
              EnableAcceptEncodingBrotli: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.enableAcceptEncodingBrotli,
              HeadersConfig: {
                HeaderBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headerBehavior,
                Headers: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.headersConfig.headers?.items,
                },
              },
              CookiesConfig: {
                CookieBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookieBehavior,
                Cookies: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.cookiesConfig.cookies?.items,
                },
              },
              QueryStringsConfig: {
                QueryStringBehavior: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStringBehavior,
                QueryStrings: {
                  Quantity: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.quantity,
                  Items: this.__input.cachePolicyConfig.parametersInCacheKeyAndForwardedToOrigin?.queryStringsConfig.queryStrings?.items,
                },
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCachePolicy.CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items', props);
    return resource.getResponseField('CachePolicy.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin.QueryStringsConfig.QueryStrings.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateCloudFrontOriginAccessIdentity {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCloudFrontOriginAccessIdentityRequest) {
  }

  public get cloudFrontOriginAccessIdentity(): CloudFrontResponsesUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentity {
    return new CloudFrontResponsesUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentity(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCloudFrontOriginAccessIdentity.ETag'),
        outputPath: 'ETag',
        parameters: {
          CloudFrontOriginAccessIdentityConfig: {
            CallerReference: this.__input.cloudFrontOriginAccessIdentityConfig.callerReference,
            Comment: this.__input.cloudFrontOriginAccessIdentityConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCloudFrontOriginAccessIdentity.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentity {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCloudFrontOriginAccessIdentityRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.Id'),
        outputPath: 'CloudFrontOriginAccessIdentity.Id',
        parameters: {
          CloudFrontOriginAccessIdentityConfig: {
            CallerReference: this.__input.cloudFrontOriginAccessIdentityConfig.callerReference,
            Comment: this.__input.cloudFrontOriginAccessIdentityConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.Id', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentity.Id') as unknown as string;
  }

  public get s3CanonicalUserId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.S3CanonicalUserId'),
        outputPath: 'CloudFrontOriginAccessIdentity.S3CanonicalUserId',
        parameters: {
          CloudFrontOriginAccessIdentityConfig: {
            CallerReference: this.__input.cloudFrontOriginAccessIdentityConfig.callerReference,
            Comment: this.__input.cloudFrontOriginAccessIdentityConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.S3CanonicalUserId', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentity.S3CanonicalUserId') as unknown as string;
  }

  public get cloudFrontOriginAccessIdentityConfig(): CloudFrontResponsesUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig {
    return new CloudFrontResponsesUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateCloudFrontOriginAccessIdentityRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.CallerReference'),
        outputPath: 'CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.CallerReference',
        parameters: {
          CloudFrontOriginAccessIdentityConfig: {
            CallerReference: this.__input.cloudFrontOriginAccessIdentityConfig.callerReference,
            Comment: this.__input.cloudFrontOriginAccessIdentityConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.CallerReference', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.CallerReference') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateCloudFrontOriginAccessIdentity',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.Comment'),
        outputPath: 'CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.Comment',
        parameters: {
          CloudFrontOriginAccessIdentityConfig: {
            CallerReference: this.__input.cloudFrontOriginAccessIdentityConfig.callerReference,
            Comment: this.__input.cloudFrontOriginAccessIdentityConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateCloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.Comment', props);
    return resource.getResponseField('CloudFrontOriginAccessIdentity.CloudFrontOriginAccessIdentityConfig.Comment') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get distribution(): CloudFrontResponsesUpdateDistributionDistribution {
    return new CloudFrontResponsesUpdateDistributionDistribution(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.ETag'),
        outputPath: 'ETag',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateDistributionDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.Id'),
        outputPath: 'Distribution.Id',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.Id', props);
    return resource.getResponseField('Distribution.Id') as unknown as string;
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.ARN'),
        outputPath: 'Distribution.ARN',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.ARN', props);
    return resource.getResponseField('Distribution.ARN') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.Status'),
        outputPath: 'Distribution.Status',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.Status', props);
    return resource.getResponseField('Distribution.Status') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.LastModifiedTime'),
        outputPath: 'Distribution.LastModifiedTime',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.LastModifiedTime', props);
    return resource.getResponseField('Distribution.LastModifiedTime') as unknown as string;
  }

  public get inProgressInvalidationBatches(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.InProgressInvalidationBatches'),
        outputPath: 'Distribution.InProgressInvalidationBatches',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.InProgressInvalidationBatches', props);
    return resource.getResponseField('Distribution.InProgressInvalidationBatches') as unknown as number;
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DomainName'),
        outputPath: 'Distribution.DomainName',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DomainName', props);
    return resource.getResponseField('Distribution.DomainName') as unknown as string;
  }

  public get activeTrustedSigners(): CloudFrontResponsesUpdateDistributionDistributionActiveTrustedSigners {
    return new CloudFrontResponsesUpdateDistributionDistributionActiveTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get activeTrustedKeyGroups(): CloudFrontResponsesUpdateDistributionDistributionActiveTrustedKeyGroups {
    return new CloudFrontResponsesUpdateDistributionDistributionActiveTrustedKeyGroups(this.__scope, this.__resources, this.__input);
  }

  public get distributionConfig(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfig {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfig(this.__scope, this.__resources, this.__input);
  }

  public get aliasIcpRecordals(): shapes.CloudFrontAliasIcpRecordal[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.AliasICPRecordals'),
        outputPath: 'Distribution.AliasICPRecordals',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.AliasICPRecordals', props);
    return resource.getResponseField('Distribution.AliasICPRecordals') as unknown as shapes.CloudFrontAliasIcpRecordal[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionActiveTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.ActiveTrustedSigners.Enabled'),
        outputPath: 'Distribution.ActiveTrustedSigners.Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.ActiveTrustedSigners.Enabled', props);
    return resource.getResponseField('Distribution.ActiveTrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.ActiveTrustedSigners.Quantity'),
        outputPath: 'Distribution.ActiveTrustedSigners.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.ActiveTrustedSigners.Quantity', props);
    return resource.getResponseField('Distribution.ActiveTrustedSigners.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontSigner[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.ActiveTrustedSigners.Items'),
        outputPath: 'Distribution.ActiveTrustedSigners.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.ActiveTrustedSigners.Items', props);
    return resource.getResponseField('Distribution.ActiveTrustedSigners.Items') as unknown as shapes.CloudFrontSigner[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionActiveTrustedKeyGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.ActiveTrustedKeyGroups.Enabled'),
        outputPath: 'Distribution.ActiveTrustedKeyGroups.Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.ActiveTrustedKeyGroups.Enabled', props);
    return resource.getResponseField('Distribution.ActiveTrustedKeyGroups.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.ActiveTrustedKeyGroups.Quantity'),
        outputPath: 'Distribution.ActiveTrustedKeyGroups.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.ActiveTrustedKeyGroups.Quantity', props);
    return resource.getResponseField('Distribution.ActiveTrustedKeyGroups.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontKgKeyPairIds[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.ActiveTrustedKeyGroups.Items'),
        outputPath: 'Distribution.ActiveTrustedKeyGroups.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.ActiveTrustedKeyGroups.Items', props);
    return resource.getResponseField('Distribution.ActiveTrustedKeyGroups.Items') as unknown as shapes.CloudFrontKgKeyPairIds[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.CallerReference'),
        outputPath: 'Distribution.DistributionConfig.CallerReference',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.CallerReference', props);
    return resource.getResponseField('Distribution.DistributionConfig.CallerReference') as unknown as string;
  }

  public get aliases(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigAliases {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigAliases(this.__scope, this.__resources, this.__input);
  }

  public get defaultRootObject(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultRootObject'),
        outputPath: 'Distribution.DistributionConfig.DefaultRootObject',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultRootObject', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultRootObject') as unknown as string;
  }

  public get origins(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigOrigins {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigOrigins(this.__scope, this.__resources, this.__input);
  }

  public get originGroups(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigOriginGroups {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigOriginGroups(this.__scope, this.__resources, this.__input);
  }

  public get defaultCacheBehavior(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehavior {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehavior(this.__scope, this.__resources, this.__input);
  }

  public get cacheBehaviors(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigCacheBehaviors {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigCacheBehaviors(this.__scope, this.__resources, this.__input);
  }

  public get customErrorResponses(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigCustomErrorResponses {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigCustomErrorResponses(this.__scope, this.__resources, this.__input);
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Comment'),
        outputPath: 'Distribution.DistributionConfig.Comment',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Comment', props);
    return resource.getResponseField('Distribution.DistributionConfig.Comment') as unknown as string;
  }

  public get logging(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigLogging {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigLogging(this.__scope, this.__resources, this.__input);
  }

  public get priceClass(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.PriceClass'),
        outputPath: 'Distribution.DistributionConfig.PriceClass',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.PriceClass', props);
    return resource.getResponseField('Distribution.DistributionConfig.PriceClass') as unknown as string;
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Enabled'),
        outputPath: 'Distribution.DistributionConfig.Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.Enabled') as unknown as boolean;
  }

  public get viewerCertificate(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigViewerCertificate {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigViewerCertificate(this.__scope, this.__resources, this.__input);
  }

  public get restrictions(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigRestrictions {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigRestrictions(this.__scope, this.__resources, this.__input);
  }

  public get webAclId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.WebACLId'),
        outputPath: 'Distribution.DistributionConfig.WebACLId',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.WebACLId', props);
    return resource.getResponseField('Distribution.DistributionConfig.WebACLId') as unknown as string;
  }

  public get httpVersion(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.HttpVersion'),
        outputPath: 'Distribution.DistributionConfig.HttpVersion',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.HttpVersion', props);
    return resource.getResponseField('Distribution.DistributionConfig.HttpVersion') as unknown as string;
  }

  public get isIpv6Enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.IsIPV6Enabled'),
        outputPath: 'Distribution.DistributionConfig.IsIPV6Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.IsIPV6Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.IsIPV6Enabled') as unknown as boolean;
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigAliases {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Aliases.Quantity'),
        outputPath: 'Distribution.DistributionConfig.Aliases.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Aliases.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.Aliases.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Aliases.Items'),
        outputPath: 'Distribution.DistributionConfig.Aliases.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Aliases.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.Aliases.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigOrigins {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Origins.Quantity'),
        outputPath: 'Distribution.DistributionConfig.Origins.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Origins.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.Origins.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontOrigin[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Origins.Items'),
        outputPath: 'Distribution.DistributionConfig.Origins.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Origins.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.Origins.Items') as unknown as shapes.CloudFrontOrigin[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigOriginGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.OriginGroups.Quantity'),
        outputPath: 'Distribution.DistributionConfig.OriginGroups.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.OriginGroups.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.OriginGroups.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontOriginGroup[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.OriginGroups.Items'),
        outputPath: 'Distribution.DistributionConfig.OriginGroups.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.OriginGroups.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.OriginGroups.Items') as unknown as shapes.CloudFrontOriginGroup[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehavior {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get targetOriginId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TargetOriginId') as unknown as string;
  }

  public get trustedSigners(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedSigners {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get trustedKeyGroups(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedKeyGroups {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedKeyGroups(this.__scope, this.__resources, this.__input);
  }

  public get viewerProtocolPolicy(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ViewerProtocolPolicy') as unknown as string;
  }

  public get allowedMethods(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethods {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethods(this.__scope, this.__resources, this.__input);
  }

  public get smoothStreaming(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.SmoothStreaming') as unknown as boolean;
  }

  public get compress(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.Compress'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.Compress',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.Compress', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.Compress') as unknown as boolean;
  }

  public get lambdaFunctionAssociations(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations(this.__scope, this.__resources, this.__input);
  }

  public get functionAssociations(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorFunctionAssociations {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorFunctionAssociations(this.__scope, this.__resources, this.__input);
  }

  public get fieldLevelEncryptionId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.FieldLevelEncryptionId') as unknown as string;
  }

  public get realtimeLogConfigArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.RealtimeLogConfigArn') as unknown as string;
  }

  public get cachePolicyId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.CachePolicyId') as unknown as string;
  }

  public get originRequestPolicyId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.OriginRequestPolicyId') as unknown as string;
  }

  public get forwardedValues(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValues {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValues(this.__scope, this.__resources, this.__input);
  }

  public get minTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.MinTTL') as unknown as number;
  }

  public get defaultTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.DefaultTTL') as unknown as number;
  }

  public get maxTtl(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.MaxTTL') as unknown as number;
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedSigners.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorTrustedKeyGroups {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.TrustedKeyGroups.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethods {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.Items') as unknown as string[];
  }

  public get cachedMethods(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethods {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.AllowedMethods.CachedMethods.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociations {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontLambdaFunctionAssociation[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.LambdaFunctionAssociations.Items') as unknown as shapes.CloudFrontLambdaFunctionAssociation[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorFunctionAssociations {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontFunctionAssociation[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.FunctionAssociations.Items') as unknown as shapes.CloudFrontFunctionAssociation[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValues {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get queryString(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryString') as unknown as boolean;
  }

  public get cookies(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookies {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookies(this.__scope, this.__resources, this.__input);
  }

  public get headers(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders(this.__scope, this.__resources, this.__input);
  }

  public get queryStringCacheKeys(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get forward(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.Forward') as unknown as string;
  }

  public get whitelistedNames(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNames {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Cookies.WhitelistedNames.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeys {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items'),
        outputPath: 'Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.DefaultCacheBehavior.ForwardedValues.QueryStringCacheKeys.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigCacheBehaviors {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.CacheBehaviors.Quantity'),
        outputPath: 'Distribution.DistributionConfig.CacheBehaviors.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.CacheBehaviors.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.CacheBehaviors.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontCacheBehavior[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.CacheBehaviors.Items'),
        outputPath: 'Distribution.DistributionConfig.CacheBehaviors.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.CacheBehaviors.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.CacheBehaviors.Items') as unknown as shapes.CloudFrontCacheBehavior[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigCustomErrorResponses {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.CustomErrorResponses.Quantity'),
        outputPath: 'Distribution.DistributionConfig.CustomErrorResponses.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.CustomErrorResponses.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.CustomErrorResponses.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontCustomErrorResponse[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.CustomErrorResponses.Items'),
        outputPath: 'Distribution.DistributionConfig.CustomErrorResponses.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.CustomErrorResponses.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.CustomErrorResponses.Items') as unknown as shapes.CloudFrontCustomErrorResponse[];
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigLogging {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Logging.Enabled'),
        outputPath: 'Distribution.DistributionConfig.Logging.Enabled',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Logging.Enabled', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.Enabled') as unknown as boolean;
  }

  public get includeCookies(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Logging.IncludeCookies'),
        outputPath: 'Distribution.DistributionConfig.Logging.IncludeCookies',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Logging.IncludeCookies', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.IncludeCookies') as unknown as boolean;
  }

  public get bucket(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Logging.Bucket'),
        outputPath: 'Distribution.DistributionConfig.Logging.Bucket',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Logging.Bucket', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.Bucket') as unknown as string;
  }

  public get prefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Logging.Prefix'),
        outputPath: 'Distribution.DistributionConfig.Logging.Prefix',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Logging.Prefix', props);
    return resource.getResponseField('Distribution.DistributionConfig.Logging.Prefix') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigViewerCertificate {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get cloudFrontDefaultCertificate(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.CloudFrontDefaultCertificate') as unknown as boolean;
  }

  public get iamCertificateId(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.IAMCertificateId') as unknown as string;
  }

  public get acmCertificateArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.ACMCertificateArn') as unknown as string;
  }

  public get sslSupportMethod(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.SSLSupportMethod') as unknown as string;
  }

  public get minimumProtocolVersion(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.MinimumProtocolVersion') as unknown as string;
  }

  public get certificate(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.Certificate'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.Certificate',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.Certificate', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.Certificate') as unknown as string;
  }

  public get certificateSource(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.CertificateSource'),
        outputPath: 'Distribution.DistributionConfig.ViewerCertificate.CertificateSource',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.ViewerCertificate.CertificateSource', props);
    return resource.getResponseField('Distribution.DistributionConfig.ViewerCertificate.CertificateSource') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigRestrictions {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get geoRestriction(): CloudFrontResponsesUpdateDistributionDistributionDistributionConfigRestrictionsGeoRestriction {
    return new CloudFrontResponsesUpdateDistributionDistributionDistributionConfigRestrictionsGeoRestriction(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateDistributionDistributionDistributionConfigRestrictionsGeoRestriction {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateDistributionRequest) {
  }

  public get restrictionType(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType'),
        outputPath: 'Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType', props);
    return resource.getResponseField('Distribution.DistributionConfig.Restrictions.GeoRestriction.RestrictionType') as unknown as string;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity'),
        outputPath: 'Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity', props);
    return resource.getResponseField('Distribution.DistributionConfig.Restrictions.GeoRestriction.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.Items'),
        outputPath: 'Distribution.DistributionConfig.Restrictions.GeoRestriction.Items',
        parameters: {
          DistributionConfig: {
            CallerReference: this.__input.distributionConfig.callerReference,
            Aliases: {
              Quantity: this.__input.distributionConfig.aliases?.quantity,
              Items: this.__input.distributionConfig.aliases?.items,
            },
            DefaultRootObject: this.__input.distributionConfig.defaultRootObject,
            Origins: {
              Quantity: this.__input.distributionConfig.origins.quantity,
              Items: this.__input.distributionConfig.origins.items,
            },
            OriginGroups: {
              Quantity: this.__input.distributionConfig.originGroups?.quantity,
              Items: this.__input.distributionConfig.originGroups?.items,
            },
            DefaultCacheBehavior: {
              TargetOriginId: this.__input.distributionConfig.defaultCacheBehavior.targetOriginId,
              TrustedSigners: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedSigners?.items,
              },
              TrustedKeyGroups: {
                Enabled: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.enabled,
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.trustedKeyGroups?.items,
              },
              ViewerProtocolPolicy: this.__input.distributionConfig.defaultCacheBehavior.viewerProtocolPolicy,
              AllowedMethods: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.items,
                CachedMethods: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.allowedMethods?.cachedMethods?.items,
                },
              },
              SmoothStreaming: this.__input.distributionConfig.defaultCacheBehavior.smoothStreaming,
              Compress: this.__input.distributionConfig.defaultCacheBehavior.compress,
              LambdaFunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.lambdaFunctionAssociations?.items,
              },
              FunctionAssociations: {
                Quantity: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.quantity,
                Items: this.__input.distributionConfig.defaultCacheBehavior.functionAssociations?.items,
              },
              FieldLevelEncryptionId: this.__input.distributionConfig.defaultCacheBehavior.fieldLevelEncryptionId,
              RealtimeLogConfigArn: this.__input.distributionConfig.defaultCacheBehavior.realtimeLogConfigArn,
              CachePolicyId: this.__input.distributionConfig.defaultCacheBehavior.cachePolicyId,
              OriginRequestPolicyId: this.__input.distributionConfig.defaultCacheBehavior.originRequestPolicyId,
              ForwardedValues: {
                QueryString: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryString,
                Cookies: {
                  Forward: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.forward,
                  WhitelistedNames: {
                    Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.quantity,
                    Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.cookies.whitelistedNames?.items,
                  },
                },
                Headers: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.headers?.items,
                },
                QueryStringCacheKeys: {
                  Quantity: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.quantity,
                  Items: this.__input.distributionConfig.defaultCacheBehavior.forwardedValues?.queryStringCacheKeys?.items,
                },
              },
              MinTTL: this.__input.distributionConfig.defaultCacheBehavior.minTtl,
              DefaultTTL: this.__input.distributionConfig.defaultCacheBehavior.defaultTtl,
              MaxTTL: this.__input.distributionConfig.defaultCacheBehavior.maxTtl,
            },
            CacheBehaviors: {
              Quantity: this.__input.distributionConfig.cacheBehaviors?.quantity,
              Items: this.__input.distributionConfig.cacheBehaviors?.items,
            },
            CustomErrorResponses: {
              Quantity: this.__input.distributionConfig.customErrorResponses?.quantity,
              Items: this.__input.distributionConfig.customErrorResponses?.items,
            },
            Comment: this.__input.distributionConfig.comment,
            Logging: {
              Enabled: this.__input.distributionConfig.logging?.enabled,
              IncludeCookies: this.__input.distributionConfig.logging?.includeCookies,
              Bucket: this.__input.distributionConfig.logging?.bucket,
              Prefix: this.__input.distributionConfig.logging?.prefix,
            },
            PriceClass: this.__input.distributionConfig.priceClass,
            Enabled: this.__input.distributionConfig.enabled,
            ViewerCertificate: {
              CloudFrontDefaultCertificate: this.__input.distributionConfig.viewerCertificate?.cloudFrontDefaultCertificate,
              IAMCertificateId: this.__input.distributionConfig.viewerCertificate?.iamCertificateId,
              ACMCertificateArn: this.__input.distributionConfig.viewerCertificate?.acmCertificateArn,
              SSLSupportMethod: this.__input.distributionConfig.viewerCertificate?.sslSupportMethod,
              MinimumProtocolVersion: this.__input.distributionConfig.viewerCertificate?.minimumProtocolVersion,
              Certificate: this.__input.distributionConfig.viewerCertificate?.certificate,
              CertificateSource: this.__input.distributionConfig.viewerCertificate?.certificateSource,
            },
            Restrictions: {
              GeoRestriction: {
                RestrictionType: this.__input.distributionConfig.restrictions?.geoRestriction.restrictionType,
                Quantity: this.__input.distributionConfig.restrictions?.geoRestriction.quantity,
                Items: this.__input.distributionConfig.restrictions?.geoRestriction.items,
              },
            },
            WebACLId: this.__input.distributionConfig.webAclId,
            HttpVersion: this.__input.distributionConfig.httpVersion,
            IsIPV6Enabled: this.__input.distributionConfig.isIpv6Enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateDistribution.Distribution.DistributionConfig.Restrictions.GeoRestriction.Items', props);
    return resource.getResponseField('Distribution.DistributionConfig.Restrictions.GeoRestriction.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateFieldLevelEncryptionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFieldLevelEncryptionConfigRequest) {
  }

  public get fieldLevelEncryption(): CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryption {
    return new CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryption(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionConfig.ETag'),
        outputPath: 'ETag',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionConfig.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryption {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFieldLevelEncryptionConfigRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.Id'),
        outputPath: 'FieldLevelEncryption.Id',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.Id', props);
    return resource.getResponseField('FieldLevelEncryption.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.LastModifiedTime'),
        outputPath: 'FieldLevelEncryption.LastModifiedTime',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.LastModifiedTime', props);
    return resource.getResponseField('FieldLevelEncryption.LastModifiedTime') as unknown as string;
  }

  public get fieldLevelEncryptionConfig(): CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfig {
    return new CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFieldLevelEncryptionConfigRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.CallerReference'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.CallerReference',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.CallerReference', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.CallerReference') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.Comment'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.Comment',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.Comment', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.Comment') as unknown as string;
  }

  public get queryArgProfileConfig(): CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfig {
    return new CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfig(this.__scope, this.__resources, this.__input);
  }

  public get contentTypeProfileConfig(): CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfig {
    return new CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFieldLevelEncryptionConfigRequest) {
  }

  public get forwardWhenQueryArgProfileIsUnknown(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.ForwardWhenQueryArgProfileIsUnknown') as unknown as boolean;
  }

  public get queryArgProfiles(): CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles {
    return new CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfiles {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFieldLevelEncryptionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontQueryArgProfile[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.QueryArgProfileConfig.QueryArgProfiles.Items') as unknown as shapes.CloudFrontQueryArgProfile[];
  }

}

export class CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFieldLevelEncryptionConfigRequest) {
  }

  public get forwardWhenContentTypeIsUnknown(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ForwardWhenContentTypeIsUnknown') as unknown as boolean;
  }

  public get contentTypeProfiles(): CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles {
    return new CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateFieldLevelEncryptionConfigFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfiles {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFieldLevelEncryptionConfigRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontContentTypeProfile[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items'),
        outputPath: 'FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items',
        parameters: {
          FieldLevelEncryptionConfig: {
            CallerReference: this.__input.fieldLevelEncryptionConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionConfig.comment,
            QueryArgProfileConfig: {
              ForwardWhenQueryArgProfileIsUnknown: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.forwardWhenQueryArgProfileIsUnknown,
              QueryArgProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.queryArgProfileConfig?.queryArgProfiles?.items,
              },
            },
            ContentTypeProfileConfig: {
              ForwardWhenContentTypeIsUnknown: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.forwardWhenContentTypeIsUnknown,
              ContentTypeProfiles: {
                Quantity: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.quantity,
                Items: this.__input.fieldLevelEncryptionConfig.contentTypeProfileConfig?.contentTypeProfiles?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionConfig.FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items', props);
    return resource.getResponseField('FieldLevelEncryption.FieldLevelEncryptionConfig.ContentTypeProfileConfig.ContentTypeProfiles.Items') as unknown as shapes.CloudFrontContentTypeProfile[];
  }

}

export class CloudFrontResponsesUpdateFieldLevelEncryptionProfile {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFieldLevelEncryptionProfileRequest) {
  }

  public get fieldLevelEncryptionProfile(): CloudFrontResponsesUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfile {
    return new CloudFrontResponsesUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfile(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionProfile.ETag'),
        outputPath: 'ETag',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionProfile.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfile {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFieldLevelEncryptionProfileRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.Id'),
        outputPath: 'FieldLevelEncryptionProfile.Id',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.Id', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.LastModifiedTime'),
        outputPath: 'FieldLevelEncryptionProfile.LastModifiedTime',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.LastModifiedTime', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.LastModifiedTime') as unknown as string;
  }

  public get fieldLevelEncryptionProfileConfig(): CloudFrontResponsesUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig {
    return new CloudFrontResponsesUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFieldLevelEncryptionProfileRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Name'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Name',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Name', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Name') as unknown as string;
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.CallerReference'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.CallerReference',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.CallerReference', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.CallerReference') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Comment'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Comment',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Comment', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.Comment') as unknown as string;
  }

  public get encryptionEntities(): CloudFrontResponsesUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntities {
    return new CloudFrontResponsesUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntities(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntities {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFieldLevelEncryptionProfileRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontEncryptionEntity[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFieldLevelEncryptionProfile',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items'),
        outputPath: 'FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items',
        parameters: {
          FieldLevelEncryptionProfileConfig: {
            Name: this.__input.fieldLevelEncryptionProfileConfig.name,
            CallerReference: this.__input.fieldLevelEncryptionProfileConfig.callerReference,
            Comment: this.__input.fieldLevelEncryptionProfileConfig.comment,
            EncryptionEntities: {
              Quantity: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.quantity,
              Items: this.__input.fieldLevelEncryptionProfileConfig.encryptionEntities.items,
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFieldLevelEncryptionProfile.FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items', props);
    return resource.getResponseField('FieldLevelEncryptionProfile.FieldLevelEncryptionProfileConfig.EncryptionEntities.Items') as unknown as shapes.CloudFrontEncryptionEntity[];
  }

}

export class CloudFrontResponsesUpdateFunction {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFunctionRequest) {
  }

  public get functionSummary(): CloudFrontResponsesUpdateFunctionFunctionSummary {
    return new CloudFrontResponsesUpdateFunctionFunctionSummary(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFunction.ETag'),
        outputPath: 'ETag',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFunction.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateFunctionFunctionSummary {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFunctionRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFunction.FunctionSummary.Name'),
        outputPath: 'FunctionSummary.Name',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFunction.FunctionSummary.Name', props);
    return resource.getResponseField('FunctionSummary.Name') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFunction.FunctionSummary.Status'),
        outputPath: 'FunctionSummary.Status',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFunction.FunctionSummary.Status', props);
    return resource.getResponseField('FunctionSummary.Status') as unknown as string;
  }

  public get functionConfig(): CloudFrontResponsesUpdateFunctionFunctionSummaryFunctionConfig {
    return new CloudFrontResponsesUpdateFunctionFunctionSummaryFunctionConfig(this.__scope, this.__resources, this.__input);
  }

  public get functionMetadata(): CloudFrontResponsesUpdateFunctionFunctionSummaryFunctionMetadata {
    return new CloudFrontResponsesUpdateFunctionFunctionSummaryFunctionMetadata(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateFunctionFunctionSummaryFunctionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFunctionRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFunction.FunctionSummary.FunctionConfig.Comment'),
        outputPath: 'FunctionSummary.FunctionConfig.Comment',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFunction.FunctionSummary.FunctionConfig.Comment', props);
    return resource.getResponseField('FunctionSummary.FunctionConfig.Comment') as unknown as string;
  }

  public get runtime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFunction.FunctionSummary.FunctionConfig.Runtime'),
        outputPath: 'FunctionSummary.FunctionConfig.Runtime',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFunction.FunctionSummary.FunctionConfig.Runtime', props);
    return resource.getResponseField('FunctionSummary.FunctionConfig.Runtime') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateFunctionFunctionSummaryFunctionMetadata {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateFunctionRequest) {
  }

  public get functionArn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFunction.FunctionSummary.FunctionMetadata.FunctionARN'),
        outputPath: 'FunctionSummary.FunctionMetadata.FunctionARN',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFunction.FunctionSummary.FunctionMetadata.FunctionARN', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.FunctionARN') as unknown as string;
  }

  public get stage(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFunction.FunctionSummary.FunctionMetadata.Stage'),
        outputPath: 'FunctionSummary.FunctionMetadata.Stage',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFunction.FunctionSummary.FunctionMetadata.Stage', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.Stage') as unknown as string;
  }

  public get createdTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFunction.FunctionSummary.FunctionMetadata.CreatedTime'),
        outputPath: 'FunctionSummary.FunctionMetadata.CreatedTime',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFunction.FunctionSummary.FunctionMetadata.CreatedTime', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.CreatedTime') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateFunction',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateFunction.FunctionSummary.FunctionMetadata.LastModifiedTime'),
        outputPath: 'FunctionSummary.FunctionMetadata.LastModifiedTime',
        parameters: {
          Name: this.__input.name,
          IfMatch: this.__input.ifMatch,
          FunctionConfig: {
            Comment: this.__input.functionConfig.comment,
            Runtime: this.__input.functionConfig.runtime,
          },
          FunctionCode: {
          },
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateFunction.FunctionSummary.FunctionMetadata.LastModifiedTime', props);
    return resource.getResponseField('FunctionSummary.FunctionMetadata.LastModifiedTime') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateKeyGroup {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateKeyGroupRequest) {
  }

  public get keyGroup(): CloudFrontResponsesUpdateKeyGroupKeyGroup {
    return new CloudFrontResponsesUpdateKeyGroupKeyGroup(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateKeyGroup.ETag'),
        outputPath: 'ETag',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateKeyGroup.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateKeyGroupKeyGroup {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateKeyGroupRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateKeyGroup.KeyGroup.Id'),
        outputPath: 'KeyGroup.Id',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateKeyGroup.KeyGroup.Id', props);
    return resource.getResponseField('KeyGroup.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateKeyGroup.KeyGroup.LastModifiedTime'),
        outputPath: 'KeyGroup.LastModifiedTime',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateKeyGroup.KeyGroup.LastModifiedTime', props);
    return resource.getResponseField('KeyGroup.LastModifiedTime') as unknown as string;
  }

  public get keyGroupConfig(): CloudFrontResponsesUpdateKeyGroupKeyGroupKeyGroupConfig {
    return new CloudFrontResponsesUpdateKeyGroupKeyGroupKeyGroupConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateKeyGroupKeyGroupKeyGroupConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateKeyGroupRequest) {
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateKeyGroup.KeyGroup.KeyGroupConfig.Name'),
        outputPath: 'KeyGroup.KeyGroupConfig.Name',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateKeyGroup.KeyGroup.KeyGroupConfig.Name', props);
    return resource.getResponseField('KeyGroup.KeyGroupConfig.Name') as unknown as string;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateKeyGroup.KeyGroup.KeyGroupConfig.Items'),
        outputPath: 'KeyGroup.KeyGroupConfig.Items',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateKeyGroup.KeyGroup.KeyGroupConfig.Items', props);
    return resource.getResponseField('KeyGroup.KeyGroupConfig.Items') as unknown as string[];
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateKeyGroup',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateKeyGroup.KeyGroup.KeyGroupConfig.Comment'),
        outputPath: 'KeyGroup.KeyGroupConfig.Comment',
        parameters: {
          KeyGroupConfig: {
            Name: this.__input.keyGroupConfig.name,
            Items: this.__input.keyGroupConfig.items,
            Comment: this.__input.keyGroupConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateKeyGroup.KeyGroup.KeyGroupConfig.Comment', props);
    return resource.getResponseField('KeyGroup.KeyGroupConfig.Comment') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateOriginRequestPolicy {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateOriginRequestPolicyRequest) {
  }

  public get originRequestPolicy(): CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicy {
    return new CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicy(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.ETag'),
        outputPath: 'ETag',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicy {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateOriginRequestPolicyRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.Id'),
        outputPath: 'OriginRequestPolicy.Id',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.Id', props);
    return resource.getResponseField('OriginRequestPolicy.Id') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.LastModifiedTime'),
        outputPath: 'OriginRequestPolicy.LastModifiedTime',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.LastModifiedTime', props);
    return resource.getResponseField('OriginRequestPolicy.LastModifiedTime') as unknown as string;
  }

  public get originRequestPolicyConfig(): CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfig {
    return new CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateOriginRequestPolicyRequest) {
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.Comment'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.Comment',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.Comment', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.Comment') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.Name'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.Name',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.Name', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.Name') as unknown as string;
  }

  public get headersConfig(): CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfig {
    return new CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfig(this.__scope, this.__resources, this.__input);
  }

  public get cookiesConfig(): CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfig {
    return new CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfig(this.__scope, this.__resources, this.__input);
  }

  public get queryStringsConfig(): CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfig {
    return new CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateOriginRequestPolicyRequest) {
  }

  public get headerBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.HeaderBehavior') as unknown as string;
  }

  public get headers(): CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfigHeaders {
    return new CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfigHeaders(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigHeadersConfigHeaders {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateOriginRequestPolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Items'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Items',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Items', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.HeadersConfig.Headers.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateOriginRequestPolicyRequest) {
  }

  public get cookieBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.CookieBehavior') as unknown as string;
  }

  public get cookies(): CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfigCookies {
    return new CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfigCookies(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigCookiesConfigCookies {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateOriginRequestPolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.CookiesConfig.Cookies.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateOriginRequestPolicyRequest) {
  }

  public get queryStringBehavior(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStringBehavior') as unknown as string;
  }

  public get queryStrings(): CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfigQueryStrings {
    return new CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfigQueryStrings(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateOriginRequestPolicyOriginRequestPolicyOriginRequestPolicyConfigQueryStringsConfigQueryStrings {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateOriginRequestPolicyRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateOriginRequestPolicy',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items'),
        outputPath: 'OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items',
        parameters: {
          OriginRequestPolicyConfig: {
            Comment: this.__input.originRequestPolicyConfig.comment,
            Name: this.__input.originRequestPolicyConfig.name,
            HeadersConfig: {
              HeaderBehavior: this.__input.originRequestPolicyConfig.headersConfig.headerBehavior,
              Headers: {
                Quantity: this.__input.originRequestPolicyConfig.headersConfig.headers?.quantity,
                Items: this.__input.originRequestPolicyConfig.headersConfig.headers?.items,
              },
            },
            CookiesConfig: {
              CookieBehavior: this.__input.originRequestPolicyConfig.cookiesConfig.cookieBehavior,
              Cookies: {
                Quantity: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.quantity,
                Items: this.__input.originRequestPolicyConfig.cookiesConfig.cookies?.items,
              },
            },
            QueryStringsConfig: {
              QueryStringBehavior: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStringBehavior,
              QueryStrings: {
                Quantity: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.quantity,
                Items: this.__input.originRequestPolicyConfig.queryStringsConfig.queryStrings?.items,
              },
            },
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateOriginRequestPolicy.OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items', props);
    return resource.getResponseField('OriginRequestPolicy.OriginRequestPolicyConfig.QueryStringsConfig.QueryStrings.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdatePublicKey {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdatePublicKeyRequest) {
  }

  public get publicKey(): CloudFrontResponsesUpdatePublicKeyPublicKey {
    return new CloudFrontResponsesUpdatePublicKeyPublicKey(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updatePublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdatePublicKey.ETag'),
        outputPath: 'ETag',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdatePublicKey.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesUpdatePublicKeyPublicKey {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdatePublicKeyRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updatePublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdatePublicKey.PublicKey.Id'),
        outputPath: 'PublicKey.Id',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdatePublicKey.PublicKey.Id', props);
    return resource.getResponseField('PublicKey.Id') as unknown as string;
  }

  public get createdTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updatePublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdatePublicKey.PublicKey.CreatedTime'),
        outputPath: 'PublicKey.CreatedTime',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdatePublicKey.PublicKey.CreatedTime', props);
    return resource.getResponseField('PublicKey.CreatedTime') as unknown as string;
  }

  public get publicKeyConfig(): CloudFrontResponsesUpdatePublicKeyPublicKeyPublicKeyConfig {
    return new CloudFrontResponsesUpdatePublicKeyPublicKeyPublicKeyConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdatePublicKeyPublicKeyPublicKeyConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdatePublicKeyRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updatePublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdatePublicKey.PublicKey.PublicKeyConfig.CallerReference'),
        outputPath: 'PublicKey.PublicKeyConfig.CallerReference',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdatePublicKey.PublicKey.PublicKeyConfig.CallerReference', props);
    return resource.getResponseField('PublicKey.PublicKeyConfig.CallerReference') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updatePublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdatePublicKey.PublicKey.PublicKeyConfig.Name'),
        outputPath: 'PublicKey.PublicKeyConfig.Name',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdatePublicKey.PublicKey.PublicKeyConfig.Name', props);
    return resource.getResponseField('PublicKey.PublicKeyConfig.Name') as unknown as string;
  }

  public get encodedKey(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updatePublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdatePublicKey.PublicKey.PublicKeyConfig.EncodedKey'),
        outputPath: 'PublicKey.PublicKeyConfig.EncodedKey',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdatePublicKey.PublicKey.PublicKeyConfig.EncodedKey', props);
    return resource.getResponseField('PublicKey.PublicKeyConfig.EncodedKey') as unknown as string;
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updatePublicKey',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdatePublicKey.PublicKey.PublicKeyConfig.Comment'),
        outputPath: 'PublicKey.PublicKeyConfig.Comment',
        parameters: {
          PublicKeyConfig: {
            CallerReference: this.__input.publicKeyConfig.callerReference,
            Name: this.__input.publicKeyConfig.name,
            EncodedKey: this.__input.publicKeyConfig.encodedKey,
            Comment: this.__input.publicKeyConfig.comment,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdatePublicKey.PublicKey.PublicKeyConfig.Comment', props);
    return resource.getResponseField('PublicKey.PublicKeyConfig.Comment') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateRealtimeLogConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateRealtimeLogConfigRequest) {
  }

  public get realtimeLogConfig(): CloudFrontResponsesUpdateRealtimeLogConfigRealtimeLogConfig {
    return new CloudFrontResponsesUpdateRealtimeLogConfigRealtimeLogConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateRealtimeLogConfigRealtimeLogConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateRealtimeLogConfigRequest) {
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateRealtimeLogConfig.RealtimeLogConfig.ARN'),
        outputPath: 'RealtimeLogConfig.ARN',
        parameters: {
          EndPoints: this.__input.endPoints,
          Fields: this.__input.fields,
          Name: this.__input.name,
          ARN: this.__input.arn,
          SamplingRate: this.__input.samplingRate,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateRealtimeLogConfig.RealtimeLogConfig.ARN', props);
    return resource.getResponseField('RealtimeLogConfig.ARN') as unknown as string;
  }

  public get name(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateRealtimeLogConfig.RealtimeLogConfig.Name'),
        outputPath: 'RealtimeLogConfig.Name',
        parameters: {
          EndPoints: this.__input.endPoints,
          Fields: this.__input.fields,
          Name: this.__input.name,
          ARN: this.__input.arn,
          SamplingRate: this.__input.samplingRate,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateRealtimeLogConfig.RealtimeLogConfig.Name', props);
    return resource.getResponseField('RealtimeLogConfig.Name') as unknown as string;
  }

  public get samplingRate(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateRealtimeLogConfig.RealtimeLogConfig.SamplingRate'),
        outputPath: 'RealtimeLogConfig.SamplingRate',
        parameters: {
          EndPoints: this.__input.endPoints,
          Fields: this.__input.fields,
          Name: this.__input.name,
          ARN: this.__input.arn,
          SamplingRate: this.__input.samplingRate,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateRealtimeLogConfig.RealtimeLogConfig.SamplingRate', props);
    return resource.getResponseField('RealtimeLogConfig.SamplingRate') as unknown as number;
  }

  public get endPoints(): shapes.CloudFrontEndPoint[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateRealtimeLogConfig.RealtimeLogConfig.EndPoints'),
        outputPath: 'RealtimeLogConfig.EndPoints',
        parameters: {
          EndPoints: this.__input.endPoints,
          Fields: this.__input.fields,
          Name: this.__input.name,
          ARN: this.__input.arn,
          SamplingRate: this.__input.samplingRate,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateRealtimeLogConfig.RealtimeLogConfig.EndPoints', props);
    return resource.getResponseField('RealtimeLogConfig.EndPoints') as unknown as shapes.CloudFrontEndPoint[];
  }

  public get fields(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateRealtimeLogConfig',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateRealtimeLogConfig.RealtimeLogConfig.Fields'),
        outputPath: 'RealtimeLogConfig.Fields',
        parameters: {
          EndPoints: this.__input.endPoints,
          Fields: this.__input.fields,
          Name: this.__input.name,
          ARN: this.__input.arn,
          SamplingRate: this.__input.samplingRate,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateRealtimeLogConfig.RealtimeLogConfig.Fields', props);
    return resource.getResponseField('RealtimeLogConfig.Fields') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateStreamingDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateStreamingDistributionRequest) {
  }

  public get streamingDistribution(): CloudFrontResponsesUpdateStreamingDistributionStreamingDistribution {
    return new CloudFrontResponsesUpdateStreamingDistributionStreamingDistribution(this.__scope, this.__resources, this.__input);
  }

  public get eTag(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.ETag'),
        outputPath: 'ETag',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.ETag', props);
    return resource.getResponseField('ETag') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateStreamingDistributionStreamingDistribution {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateStreamingDistributionRequest) {
  }

  public get id(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.Id'),
        outputPath: 'StreamingDistribution.Id',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.Id', props);
    return resource.getResponseField('StreamingDistribution.Id') as unknown as string;
  }

  public get arn(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.ARN'),
        outputPath: 'StreamingDistribution.ARN',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.ARN', props);
    return resource.getResponseField('StreamingDistribution.ARN') as unknown as string;
  }

  public get status(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.Status'),
        outputPath: 'StreamingDistribution.Status',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.Status', props);
    return resource.getResponseField('StreamingDistribution.Status') as unknown as string;
  }

  public get lastModifiedTime(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.LastModifiedTime'),
        outputPath: 'StreamingDistribution.LastModifiedTime',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.LastModifiedTime', props);
    return resource.getResponseField('StreamingDistribution.LastModifiedTime') as unknown as string;
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.DomainName'),
        outputPath: 'StreamingDistribution.DomainName',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.DomainName', props);
    return resource.getResponseField('StreamingDistribution.DomainName') as unknown as string;
  }

  public get activeTrustedSigners(): CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionActiveTrustedSigners {
    return new CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionActiveTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get streamingDistributionConfig(): CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfig {
    return new CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfig(this.__scope, this.__resources, this.__input);
  }

}

export class CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionActiveTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateStreamingDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Enabled'),
        outputPath: 'StreamingDistribution.ActiveTrustedSigners.Enabled',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Enabled', props);
    return resource.getResponseField('StreamingDistribution.ActiveTrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Quantity'),
        outputPath: 'StreamingDistribution.ActiveTrustedSigners.Quantity',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Quantity', props);
    return resource.getResponseField('StreamingDistribution.ActiveTrustedSigners.Quantity') as unknown as number;
  }

  public get items(): shapes.CloudFrontSigner[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Items'),
        outputPath: 'StreamingDistribution.ActiveTrustedSigners.Items',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.ActiveTrustedSigners.Items', props);
    return resource.getResponseField('StreamingDistribution.ActiveTrustedSigners.Items') as unknown as shapes.CloudFrontSigner[];
  }

}

export class CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfig {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateStreamingDistributionRequest) {
  }

  public get callerReference(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.CallerReference'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.CallerReference',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.CallerReference', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.CallerReference') as unknown as string;
  }

  public get s3Origin(): CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfigS3Origin {
    return new CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfigS3Origin(this.__scope, this.__resources, this.__input);
  }

  public get aliases(): CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfigAliases {
    return new CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfigAliases(this.__scope, this.__resources, this.__input);
  }

  public get comment(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Comment'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Comment',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Comment', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Comment') as unknown as string;
  }

  public get logging(): CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfigLogging {
    return new CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfigLogging(this.__scope, this.__resources, this.__input);
  }

  public get trustedSigners(): CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfigTrustedSigners {
    return new CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfigTrustedSigners(this.__scope, this.__resources, this.__input);
  }

  public get priceClass(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.PriceClass'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.PriceClass',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.PriceClass', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.PriceClass') as unknown as string;
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Enabled'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Enabled',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Enabled', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Enabled') as unknown as boolean;
  }

}

export class CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfigS3Origin {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateStreamingDistributionRequest) {
  }

  public get domainName(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.S3Origin.DomainName') as unknown as string;
  }

  public get originAccessIdentity(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.S3Origin.OriginAccessIdentity') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfigAliases {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateStreamingDistributionRequest) {
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Aliases.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Aliases.Items'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Aliases.Items',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Aliases.Items', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Aliases.Items') as unknown as string[];
  }

}

export class CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfigLogging {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateStreamingDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Enabled'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Logging.Enabled',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Enabled', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Logging.Enabled') as unknown as boolean;
  }

  public get bucket(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Bucket'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Logging.Bucket',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Bucket', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Logging.Bucket') as unknown as string;
  }

  public get prefix(): string {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Prefix'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.Logging.Prefix',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.Logging.Prefix', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.Logging.Prefix') as unknown as string;
  }

}

export class CloudFrontResponsesUpdateStreamingDistributionStreamingDistributionStreamingDistributionConfigTrustedSigners {

  constructor(private readonly __scope: cdk.Construct, private readonly __resources: string[], private readonly __input: shapes.CloudFrontUpdateStreamingDistributionRequest) {
  }

  public get enabled(): boolean {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Enabled') as unknown as boolean;
  }

  public get quantity(): number {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Quantity') as unknown as number;
  }

  public get items(): string[] {
    const props: cr.AwsCustomResourceProps = {
      policy: cr.AwsCustomResourcePolicy.fromSdkCalls({ resources: this.__resources }),
      onUpdate: {
        action: 'updateStreamingDistribution',
        service: 'CloudFront',
        physicalResourceId: cr.PhysicalResourceId.of('CloudFront.UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items'),
        outputPath: 'StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items',
        parameters: {
          StreamingDistributionConfig: {
            CallerReference: this.__input.streamingDistributionConfig.callerReference,
            S3Origin: {
              DomainName: this.__input.streamingDistributionConfig.s3Origin.domainName,
              OriginAccessIdentity: this.__input.streamingDistributionConfig.s3Origin.originAccessIdentity,
            },
            Aliases: {
              Quantity: this.__input.streamingDistributionConfig.aliases?.quantity,
              Items: this.__input.streamingDistributionConfig.aliases?.items,
            },
            Comment: this.__input.streamingDistributionConfig.comment,
            Logging: {
              Enabled: this.__input.streamingDistributionConfig.logging?.enabled,
              Bucket: this.__input.streamingDistributionConfig.logging?.bucket,
              Prefix: this.__input.streamingDistributionConfig.logging?.prefix,
            },
            TrustedSigners: {
              Enabled: this.__input.streamingDistributionConfig.trustedSigners.enabled,
              Quantity: this.__input.streamingDistributionConfig.trustedSigners.quantity,
              Items: this.__input.streamingDistributionConfig.trustedSigners.items,
            },
            PriceClass: this.__input.streamingDistributionConfig.priceClass,
            Enabled: this.__input.streamingDistributionConfig.enabled,
          },
          Id: this.__input.id,
          IfMatch: this.__input.ifMatch,
        },
      },
    };
    const resource = new cr.AwsCustomResource(this.__scope, 'UpdateStreamingDistribution.StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items', props);
    return resource.getResponseField('StreamingDistribution.StreamingDistributionConfig.TrustedSigners.Items') as unknown as string[];
  }

}

